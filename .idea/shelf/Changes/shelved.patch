Index: .dart_tool/version
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>3.19.1
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.dart_tool/version b/.dart_tool/version
--- a/.dart_tool/version	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/.dart_tool/version	(date 1715680211996)
@@ -1,1 +1,1 @@
-3.19.1
\ No newline at end of file
+3.19.6
\ No newline at end of file
Index: lib/view/transfer/new_transfer/new_transfer_bloc.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/transfer/new_transfer/new_transfer_bloc.dart b/lib/view/transfer/new_transfer/new_transfer_bloc.dart
new file mode 100644
--- /dev/null	(date 1715767611661)
+++ b/lib/view/transfer/new_transfer/new_transfer_bloc.dart	(date 1715767611661)
@@ -0,0 +1,122 @@
+import 'dart:async';
+
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/widgets.dart';
+
+abstract class NewTransferBloc {
+  Stream get selectedVehicleAndAccessoriesStream;
+
+  Stream get vehicleAndEngineNumberStream;
+
+  Stream get changeVehicleAndAccessoriesListStream;
+
+  Stream get selectedVehicleListStream;
+
+  Stream get selectedVehicleAndAccessoriesListStream;
+
+  Stream get accessoriesIncrementStream;
+
+  TextEditingController get vehicleAndEngineNumberController;
+
+  TextEditingController get transporterVehicleNumberController;
+
+  String? get selectedVehicleAndAccessories;
+
+  String? get selectedBranch;
+}
+
+class NewTransferBlocImpl extends NewTransferBloc {
+  final _selectedVehicleAndAccessoriesStream = StreamController.broadcast();
+  final _changeVehicleAndAccessoriesListStream = StreamController.broadcast();
+  final _vehicleAndEngineNumberStream = StreamController.broadcast();
+  final _selectedVehicleListStream = StreamController.broadcast();
+  final _accessoriesIncrementStream = StreamController.broadcast();
+  final _selectedVehicleAndAccessoriesListStream = StreamController.broadcast();
+  final _vehicleAndEngineNumberController = TextEditingController();
+  final _transporterVehicleNumberController = TextEditingController();
+  List<String> vehicleAndAccessoriesList = ['Vehicle', 'Accessories'];
+  List<String> selectedVehicleList = [];
+  List<String> branch = ['Kovilpatti', 'Sattur', 'Sivakasi'];
+  late Set<String> optionsSet = {selectedVehicleAndAccessories ?? ''};
+  String? _selectedVehicleAndAccessories;
+  String? _selectedBranch;
+  int initialValue = 0;
+
+  @override
+  String? get selectedVehicleAndAccessories => _selectedVehicleAndAccessories;
+
+  set selectedVehicleAndAccessories(String? newValue) {
+    _selectedVehicleAndAccessories = newValue;
+  }
+
+  @override
+  Stream get selectedVehicleAndAccessoriesStream =>
+      _selectedVehicleAndAccessoriesStream.stream;
+
+  selectedVehicleAndAccessoriesStreamController(bool streamValue) {
+    _selectedVehicleAndAccessoriesStream.add(streamValue);
+  }
+
+  changeSegmentedColor(Color color) {
+    return MaterialStateProperty.resolveWith((states) {
+      if (states.contains(MaterialState.selected)) {
+        return color;
+      }
+      return null;
+    });
+  }
+
+  @override
+  Stream get vehicleAndEngineNumberStream =>
+      _vehicleAndEngineNumberStream.stream;
+
+  vehicleAndEngineNumberStreamController(bool streamValue) {
+    _vehicleAndEngineNumberStream.add(streamValue);
+  }
+
+  @override
+  TextEditingController get vehicleAndEngineNumberController =>
+      _vehicleAndEngineNumberController;
+
+  @override
+  Stream get changeVehicleAndAccessoriesListStream =>
+      _changeVehicleAndAccessoriesListStream.stream;
+
+  changeVehicleAndAccessoriesListStreamController(bool streamValue) {
+    _changeVehicleAndAccessoriesListStream.add(streamValue);
+  }
+
+  @override
+  Stream get selectedVehicleListStream => _selectedVehicleListStream.stream;
+
+  selectedVehicleListStreamController(bool streamValue) {
+    _selectedVehicleListStream.add(streamValue);
+  }
+
+  @override
+  Stream get selectedVehicleAndAccessoriesListStream =>
+      _selectedVehicleAndAccessoriesListStream.stream;
+
+  selectedVehicleAndAccessoriesListStreamController(bool streamValue) {
+    _selectedVehicleAndAccessoriesListStream.add(streamValue);
+  }
+
+  @override
+  Stream get accessoriesIncrementStream => _accessoriesIncrementStream.stream;
+
+  accessoriesIncrementStreamController(bool streamValue) {
+    _accessoriesIncrementStream.add(streamValue);
+  }
+
+  @override
+  String? get selectedBranch => _selectedBranch;
+
+  set selectedBranch(String? newValue) {
+    _selectedBranch = newValue;
+  }
+
+  @override
+  TextEditingController get transporterVehicleNumberController =>
+      _transporterVehicleNumberController;
+}
Index: .dart_tool/package_config_subset
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>args\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/args-2.5.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/args-2.5.0/lib/\r\nasync\r\n2.18\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/async-2.11.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/async-2.11.0/lib/\r\nboolean_selector\r\n2.17\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/boolean_selector-2.1.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/boolean_selector-2.1.1/lib/\r\ncharacters\r\n2.12\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/characters-1.3.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/characters-1.3.0/lib/\r\nclock\r\n2.12\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/clock-1.1.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/clock-1.1.1/lib/\r\ncollection\r\n2.18\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/collection-1.18.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/collection-1.18.0/lib/\r\ncupertino_icons\r\n3.1\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/cupertino_icons-1.0.8/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/cupertino_icons-1.0.8/lib/\r\nfake_async\r\n2.12\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/fake_async-1.3.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/fake_async-1.3.1/lib/\r\nffi\r\n3.3\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/ffi-2.1.2/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/ffi-2.1.2/lib/\r\nfile\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/file-7.0.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/file-7.0.0/lib/\r\nflutter_lints\r\n3.1\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_lints-3.0.2/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_lints-3.0.2/lib/\r\nflutter_svg\r\n2.19\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_svg-2.0.10+1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_svg-2.0.10+1/lib/\r\nhexcolor\r\n2.18\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/hexcolor-3.0.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/hexcolor-3.0.1/lib/\r\nhttp\r\n3.3\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/http-1.2.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/http-1.2.1/lib/\r\nhttp_parser\r\n2.12\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/http_parser-4.0.2/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/http_parser-4.0.2/lib/\r\nleak_tracker\r\n3.1\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker-10.0.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker-10.0.0/lib/\r\nleak_tracker_flutter_testing\r\n3.1\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker_flutter_testing-2.0.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker_flutter_testing-2.0.1/lib/\r\nleak_tracker_testing\r\n3.1\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker_testing-2.0.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker_testing-2.0.1/lib/\r\nlints\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/lints-3.0.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/lints-3.0.0/lib/\r\nmatcher\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/matcher-0.12.16+1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/matcher-0.12.16+1/lib/\r\nmaterial_color_utilities\r\n2.17\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/material_color_utilities-0.8.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/material_color_utilities-0.8.0/lib/\r\nmeta\r\n2.12\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/meta-1.11.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/meta-1.11.0/lib/\r\npath\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path-1.9.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path-1.9.0/lib/\r\npath_parsing\r\n2.12\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_parsing-1.0.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_parsing-1.0.1/lib/\r\npath_provider_linux\r\n2.19\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_linux-2.2.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_linux-2.2.1/lib/\r\npath_provider_platform_interface\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_platform_interface-2.1.2/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_platform_interface-2.1.2/lib/\r\npath_provider_windows\r\n2.19\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_windows-2.2.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_windows-2.2.1/lib/\r\npetitparser\r\n3.2\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/petitparser-6.0.2/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/petitparser-6.0.2/lib/\r\nplatform\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/platform-3.1.4/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/platform-3.1.4/lib/\r\nplugin_platform_interface\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/plugin_platform_interface-2.1.8/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/plugin_platform_interface-2.1.8/lib/\r\nshared_preferences\r\n3.1\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences-2.2.3/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences-2.2.3/lib/\r\nshared_preferences_android\r\n3.2\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_android-2.2.2/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_android-2.2.2/lib/\r\nshared_preferences_foundation\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_foundation-2.3.5/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_foundation-2.3.5/lib/\r\nshared_preferences_linux\r\n2.19\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_linux-2.3.2/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_linux-2.3.2/lib/\r\nshared_preferences_platform_interface\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_platform_interface-2.3.2/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_platform_interface-2.3.2/lib/\r\nshared_preferences_web\r\n3.3\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_web-2.3.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_web-2.3.0/lib/\r\nshared_preferences_windows\r\n2.19\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_windows-2.3.2/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_windows-2.3.2/lib/\r\nsource_span\r\n2.18\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/source_span-1.10.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/source_span-1.10.0/lib/\r\nstack_trace\r\n2.18\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/stack_trace-1.11.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/stack_trace-1.11.1/lib/\r\nstream_channel\r\n2.19\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/stream_channel-2.1.2/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/stream_channel-2.1.2/lib/\r\nstring_scanner\r\n2.18\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/string_scanner-1.2.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/string_scanner-1.2.0/lib/\r\nterm_glyph\r\n2.12\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/term_glyph-1.2.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/term_glyph-1.2.1/lib/\r\ntest_api\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/test_api-0.6.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/test_api-0.6.1/lib/\r\ntyped_data\r\n2.17\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/typed_data-1.3.2/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/typed_data-1.3.2/lib/\r\nvector_graphics\r\n2.17\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_graphics-1.1.11+1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_graphics-1.1.11+1/lib/\r\nvector_graphics_codec\r\n2.17\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_graphics_codec-1.1.11+1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_graphics_codec-1.1.11+1/lib/\r\nvector_graphics_compiler\r\n2.19\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_graphics_compiler-1.1.11+1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_graphics_compiler-1.1.11+1/lib/\r\nvector_math\r\n2.14\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_math-2.1.4/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_math-2.1.4/lib/\r\nvm_service\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vm_service-13.0.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vm_service-13.0.0/lib/\r\nweb\r\n3.3\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/web-0.5.1/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/web-0.5.1/lib/\r\nwin32\r\n3.3\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/win32-5.4.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/win32-5.4.0/lib/\r\nxdg_directories\r\n3.0\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/xdg_directories-1.0.4/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/xdg_directories-1.0.4/lib/\r\nxml\r\n3.2\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/xml-6.5.0/\r\nfile:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/xml-6.5.0/lib/\r\nsky_engine\r\n3.2\r\nfile:///C:/src/flutter/bin/cache/pkg/sky_engine/\r\nfile:///C:/src/flutter/bin/cache/pkg/sky_engine/lib/\r\nflutter\r\n3.2\r\nfile:///C:/src/flutter/packages/flutter/\r\nfile:///C:/src/flutter/packages/flutter/lib/\r\nflutter_test\r\n3.2\r\nfile:///C:/src/flutter/packages/flutter_test/\r\nfile:///C:/src/flutter/packages/flutter_test/lib/\r\nflutter_web_plugins\r\n3.2\r\nfile:///C:/src/flutter/packages/flutter_web_plugins/\r\nfile:///C:/src/flutter/packages/flutter_web_plugins/lib/\r\ntlbilling\r\n3.3\r\nfile:///D:/tlbilling/\r\nfile:///D:/tlbilling/lib/\r\n2\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.dart_tool/package_config_subset b/.dart_tool/package_config_subset
--- a/.dart_tool/package_config_subset	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/.dart_tool/package_config_subset	(date 1715680212180)
@@ -1,3 +1,7 @@
+tlds_flutter
+3.3
+file:///C:/Users/New/AppData/Local/Pub/Cache/git/tlds_flutter-01d0035caee890e3591c1fbcac61f46b0a5db548/
+file:///C:/Users/New/AppData/Local/Pub/Cache/git/tlds_flutter-01d0035caee890e3591c1fbcac61f46b0a5db548/lib/
 args
 3.0
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/args-2.5.0/
@@ -22,6 +26,10 @@
 2.18
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/collection-1.18.0/
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/collection-1.18.0/lib/
+crypto
+2.19
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/crypto-3.0.3/
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/crypto-3.0.3/lib/
 cupertino_icons
 3.1
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/cupertino_icons-1.0.8/
@@ -46,6 +54,10 @@
 2.19
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_svg-2.0.10+1/
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_svg-2.0.10+1/lib/
+google_fonts
+2.14
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/google_fonts-6.1.0/
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/google_fonts-6.1.0/lib/
 hexcolor
 2.18
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/hexcolor-3.0.1/
@@ -58,6 +70,14 @@
 2.12
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/http_parser-4.0.2/
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/http_parser-4.0.2/lib/
+input_quantity
+2.17
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/input_quantity-2.3.2/
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/input_quantity-2.3.2/lib/
+intl
+3.0
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/intl-0.19.0/
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/intl-0.19.0/lib/
 leak_tracker
 3.1
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker-10.0.0/
@@ -94,6 +114,18 @@
 2.12
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_parsing-1.0.1/
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_parsing-1.0.1/lib/
+path_provider
+3.1
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider-2.1.3/
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider-2.1.3/lib/
+path_provider_android
+3.2
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_android-2.2.4/
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_android-2.2.4/lib/
+path_provider_foundation
+3.0
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_foundation-2.3.2/
+file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_foundation-2.3.2/lib/
 path_provider_linux
 2.19
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_linux-2.2.1/
@@ -212,22 +244,22 @@
 file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/xml-6.5.0/lib/
 sky_engine
 3.2
-file:///C:/src/flutter/bin/cache/pkg/sky_engine/
-file:///C:/src/flutter/bin/cache/pkg/sky_engine/lib/
+file:///E:/Flutter/flutter/bin/cache/pkg/sky_engine/
+file:///E:/Flutter/flutter/bin/cache/pkg/sky_engine/lib/
 flutter
 3.2
-file:///C:/src/flutter/packages/flutter/
-file:///C:/src/flutter/packages/flutter/lib/
+file:///E:/Flutter/flutter/packages/flutter/
+file:///E:/Flutter/flutter/packages/flutter/lib/
 flutter_test
 3.2
-file:///C:/src/flutter/packages/flutter_test/
-file:///C:/src/flutter/packages/flutter_test/lib/
+file:///E:/Flutter/flutter/packages/flutter_test/
+file:///E:/Flutter/flutter/packages/flutter_test/lib/
 flutter_web_plugins
 3.2
-file:///C:/src/flutter/packages/flutter_web_plugins/
-file:///C:/src/flutter/packages/flutter_web_plugins/lib/
+file:///E:/Flutter/flutter/packages/flutter_web_plugins/
+file:///E:/Flutter/flutter/packages/flutter_web_plugins/lib/
 tlbilling
 3.3
-file:///D:/tlbilling/
-file:///D:/tlbilling/lib/
+file:///E:/ajithtechlambdas/tlbilling/
+file:///E:/ajithtechlambdas/tlbilling/lib/
 2
Index: pubspec.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>name: tlbilling\r\ndescription: \"A new Flutter project.\"\r\n# The following line prevents the package from being accidentally published to\r\n# pub.dev using `flutter pub publish`. This is preferred for private packages.\r\npublish_to: 'none' # Remove this line if you wish to publish to pub.dev\r\n\r\n# The following defines the version and build number for your application.\r\n# A version number is three numbers separated by dots, like 1.2.43\r\n# followed by an optional build number separated by a +.\r\n# Both the version and the builder number may be overridden in flutter\r\n# build by specifying --build-name and --build-number, respectively.\r\n# In Android, build-name is used as versionName while build-number used as versionCode.\r\n# Read more about Android versioning at https://developer.android.com/studio/publish/versioning\r\n# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.\r\n# Read more about iOS versioning at\r\n# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html\r\n# In Windows, build-name is used as the major, minor, and patch parts\r\n# of the product and file versions while build-number is used as the build suffix.\r\nversion: 1.0.0+1\r\n\r\nenvironment:\r\n  sdk: '>=3.3.0 <4.0.0'\r\n\r\n# Dependencies specify other packages that your package needs in order to work.\r\n# To automatically upgrade your package dependencies to the latest versions\r\n# consider running `flutter pub upgrade --major-versions`. Alternatively,\r\n# dependencies can be manually updated by changing the version numbers below to\r\n# the latest version available on pub.dev. To see which dependencies have newer\r\n# versions available, run `flutter pub outdated`.\r\ndependencies:\r\n  flutter:\r\n    sdk: flutter\r\n\r\n\r\n  # The following adds the Cupertino Icons font to your application.\r\n  # Use with the CupertinoIcons class for iOS style icons.\r\n  cupertino_icons: ^1.0.6\r\n  hexcolor: ^3.0.1\r\n  flutter_svg: ^2.0.10+1\r\n  shared_preferences: ^2.2.3\r\n\r\ndev_dependencies:\r\n  flutter_test:\r\n    sdk: flutter\r\n\r\n  # The \"flutter_lints\" package below contains a set of recommended lints to\r\n  # encourage good coding practices. The lint set provided by the package is\r\n  # activated in the `analysis_options.yaml` file located at the root of your\r\n  # package. See that file for information about deactivating specific lint\r\n  # rules and activating additional ones.\r\n  flutter_lints: ^3.0.0\r\n\r\n# For information on the generic Dart part of this file, see the\r\n# following page: https://dart.dev/tools/pub/pubspec\r\n\r\n# The following section is specific to Flutter packages.\r\nflutter:\r\n\r\n  # The following line ensures that the Material Icons font is\r\n  # included with your application, so that you can use the icons in\r\n  # the material Icons class.\r\n  uses-material-design: true\r\n\r\n  # To add assets to your application, add an assets section, like this:\r\n  assets:\r\n    - assets/\r\n    - assets/icons/\r\n    - assets/images/\r\n  # assets:\r\n  #   - images/a_dot_burr.jpeg\r\n  #   - images/a_dot_ham.jpeg\r\n\r\n  # An image asset can refer to one or more resolution-specific \"variants\", see\r\n  # https://flutter.dev/assets-and-images/#resolution-aware\r\n\r\n  # For details regarding adding assets from package dependencies, see\r\n  # https://flutter.dev/assets-and-images/#from-packages\r\n\r\n  # To add custom fonts to your application, add a fonts section here,\r\n  # in this \"flutter\" section. Each entry in this list should have a\r\n  # \"family\" key with the font family name, and a \"fonts\" key with a\r\n  # list giving the asset and other descriptors for the font. For\r\n  # example:\r\n  # fonts:\r\n  #   - family: Schyler\r\n  #     fonts:\r\n  #       - asset: fonts/Schyler-Regular.ttf\r\n  #       - asset: fonts/Schyler-Italic.ttf\r\n  #         style: italic\r\n  #   - family: Trajan Pro\r\n  #     fonts:\r\n  #       - asset: fonts/TrajanPro.ttf\r\n  #       - asset: fonts/TrajanPro_Bold.ttf\r\n  #         weight: 700\r\n  #\r\n  # For details regarding fonts from package dependencies,\r\n  # see https://flutter.dev/custom-fonts/#from-packages\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pubspec.yaml b/pubspec.yaml
--- a/pubspec.yaml	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/pubspec.yaml	(date 1715680195521)
@@ -38,6 +38,12 @@
   hexcolor: ^3.0.1
   flutter_svg: ^2.0.10+1
   shared_preferences: ^2.2.3
+  tlds_flutter:
+    git:
+      url: https://github.com/metIdeamate/tlds_flutter.git
+      ref: main
+  google_fonts: ^6.1.0
+  input_quantity: ^2.3.2
 
 dev_dependencies:
   flutter_test:
@@ -66,6 +72,7 @@
     - assets/
     - assets/icons/
     - assets/images/
+    - assets/fonts/
   # assets:
   #   - images/a_dot_burr.jpeg
   #   - images/a_dot_ham.jpeg
Index: lib/main.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:tlbilling/components/side_menu_navigation.dart';\r\n\r\n//import 'package:tlbilling/view/login/login_page.dart';\r\n\r\nvoid main() {\r\n  runApp(const MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({super.key});\r\n\r\n  // This widget is the root of your application.\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return const MaterialApp(\r\n      title: 'TL Billing',\r\n      home: SideMenuNavigation(),\r\n      debugShowCheckedModeBanner: false,\r\n    );\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/main.dart b/lib/main.dart
--- a/lib/main.dart	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/lib/main.dart	(date 1715848028421)
@@ -1,5 +1,7 @@
 import 'package:flutter/material.dart';
+import 'package:google_fonts/google_fonts.dart';
 import 'package:tlbilling/components/side_menu_navigation.dart';
+import 'package:tlbilling/utils/app_constants.dart';
 
 //import 'package:tlbilling/view/login/login_page.dart';
 
@@ -13,9 +15,12 @@
   // This widget is the root of your application.
   @override
   Widget build(BuildContext context) {
-    return const MaterialApp(
+    return MaterialApp(
+      theme: ThemeData(
+        fontFamily: AppConstants.poppinsRegular,
+      ),
       title: 'TL Billing',
-      home: SideMenuNavigation(),
+      home: const SideMenuNavigation(),
       debugShowCheckedModeBanner: false,
     );
   }
Index: lib/view/purchase/add_purchase/add_purchase.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/purchase/add_purchase/add_purchase.dart b/lib/view/purchase/add_purchase/add_purchase.dart
new file mode 100644
--- /dev/null	(date 1714387487808)
+++ b/lib/view/purchase/add_purchase/add_purchase.dart	(date 1714387487808)
@@ -0,0 +1,27 @@
+import 'package:flutter/material.dart';
+import 'package:google_fonts/google_fonts.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+import 'package:tlbilling/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories.dart';
+import 'package:tlbilling/view/purchase/add_purchase/purchase_table.dart';
+import 'package:tlds_flutter/export.dart';
+
+class AddPurchase extends StatefulWidget {
+  const AddPurchase({super.key});
+
+  @override
+  State<AddPurchase> createState() => _AddPurchaseState();
+}
+
+class _AddPurchaseState extends State<AddPurchase> {
+  final _appColors = AppColor();
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(appBar: AppBar(title: Text(AppConstants.purchase,
+      style: GoogleFonts.poppins(color: _appColors.primaryColor),
+    ),),
+    body: const Row(children: [
+      PurchaseTable(),
+      AddVehicleAndAccessories(),
+    ],),);
+  }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"FileEditorManager\">\r\n    <leaf>\r\n      <file leaf-file-name=\"main.dart\" pinned=\"false\" current-in-tab=\"true\">\r\n        <entry file=\"file://$PROJECT_DIR$/lib/main.dart\">\r\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\r\n            <state relative-caret-position=\"0\">\r\n              <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\r\n            </state>\r\n          </provider>\r\n        </entry>\r\n      </file>\r\n    </leaf>\r\n  </component>\r\n  <component name=\"ToolWindowManager\">\r\n    <editor active=\"true\" />\r\n    <layout>\r\n      <window_info id=\"Project\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"combo\" />\r\n    </layout>\r\n  </component>\r\n  <component name=\"ProjectView\">\r\n    <navigator currentView=\"ProjectPane\" proportions=\"\" version=\"1\">\r\n    </navigator>\r\n    <panes>\r\n      <pane id=\"ProjectPane\">\r\n        <option name=\"show-excluded-files\" value=\"false\" />\r\n      </pane>\r\n    </panes>\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"dart.analysis.tool.window.force.activate\" value=\"true\" />\r\n    <property name=\"show.migrate.to.gradle.popup\" value=\"false\" />\r\n  </component>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/.idea/workspace.xml	(date 1715846969775)
@@ -1,5 +1,75 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AndroidLayouts">
+    <shared>
+      <config />
+    </shared>
+  </component>
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="NONE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="46b8c2b5-0582-4264-9963-ab5d06895d77" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/assets/icons/ic_date.svg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/assets/icons/ic_filled_add.svg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/assets/icons/ic_filled_minus.svg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/assets/icons/ic_more.svg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/purchase/add_purchase/add_purchase.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/purchase/add_purchase/add_vehicle_and_accesories/accessories_purchase_details.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories_bloc.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/purchase/add_purchase/add_vehicle_and_accesories/vehicle_purchase_details.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/purchase/add_purchase/purchase_table.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/purchase/purchase_view.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/purchase/purchase_view_bloc.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/stocks/detail_stock_view.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/stocks/stocks_view.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/stocks/stocks_view_bloc.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/transfer/new_transfer/new_transfer.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/transfer/new_transfer/new_transfer_bloc.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/transfer/new_transfer/tranfer_details.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/transfer/transfer_view.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/view/transfer/transfer_view_bloc.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.dart_tool/chrome-device/Default/DIPS" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/chrome-device/Default/DIPS" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.dart_tool/chrome-device/Default/Favicons" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/chrome-device/Default/Favicons" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.dart_tool/chrome-device/Default/History" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/chrome-device/Default/History" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.dart_tool/dartpad/web_plugin_registrant.dart" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/dartpad/web_plugin_registrant.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.dart_tool/package_config.json" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/package_config.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.dart_tool/package_config_subset" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/package_config_subset" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.dart_tool/version" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/version" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.flutter-plugins" beforeDir="false" afterPath="$PROJECT_DIR$/.flutter-plugins" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.flutter-plugins-dependencies" beforeDir="false" afterPath="$PROJECT_DIR$/.flutter-plugins-dependencies" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/Dart_SDK.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Dart_SDK.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/flutter_assets/AssetManifest.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/flutter_assets/AssetManifest.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/flutter_assets/AssetManifest.bin.json" beforeDir="false" afterPath="$PROJECT_DIR$/build/flutter_assets/AssetManifest.bin.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/flutter_assets/AssetManifest.json" beforeDir="false" afterPath="$PROJECT_DIR$/build/flutter_assets/AssetManifest.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/flutter_assets/NOTICES" beforeDir="false" afterPath="$PROJECT_DIR$/build/flutter_assets/NOTICES" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/flutter_assets/shaders/ink_sparkle.frag" beforeDir="false" afterPath="$PROJECT_DIR$/build/flutter_assets/shaders/ink_sparkle.frag" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lib/components/side_menu_navigation.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/components/side_menu_navigation.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lib/main.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/main.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lib/utils/app_colors.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/utils/app_colors.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lib/utils/app_constants.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/utils/app_constants.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lib/utils/app_utils.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/utils/app_utils.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/linux/flutter/generated_plugin_registrant.cc" beforeDir="false" afterPath="$PROJECT_DIR$/linux/flutter/generated_plugin_registrant.cc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/linux/flutter/generated_plugin_registrant.h" beforeDir="false" afterPath="$PROJECT_DIR$/linux/flutter/generated_plugin_registrant.h" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/linux/flutter/generated_plugins.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/linux/flutter/generated_plugins.cmake" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/macos/Flutter/GeneratedPluginRegistrant.swift" beforeDir="false" afterPath="$PROJECT_DIR$/macos/Flutter/GeneratedPluginRegistrant.swift" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pubspec.lock" beforeDir="false" afterPath="$PROJECT_DIR$/pubspec.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pubspec.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/pubspec.yaml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/tlbilling.iml" beforeDir="false" afterPath="$PROJECT_DIR$/tlbilling.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/windows/flutter/generated_plugin_registrant.cc" beforeDir="false" afterPath="$PROJECT_DIR$/windows/flutter/generated_plugin_registrant.cc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/windows/flutter/generated_plugin_registrant.h" beforeDir="false" afterPath="$PROJECT_DIR$/windows/flutter/generated_plugin_registrant.h" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/windows/flutter/generated_plugins.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/windows/flutter/generated_plugins.cmake" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="ClangdSettings">
+    <option name="formatViaClangd" value="false" />
+  </component>
   <component name="FileEditorManager">
     <leaf>
       <file leaf-file-name="main.dart" pinned="false" current-in-tab="true">
@@ -13,24 +83,76 @@
       </file>
     </leaf>
   </component>
-  <component name="ToolWindowManager">
-    <editor active="true" />
-    <layout>
-      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
-    </layout>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Dart File" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$USER_HOME$/AppData/Local/Pub/Cache/git/tlds_flutter-01d0035caee890e3591c1fbcac61f46b0a5db548/lib/components/tlds_input_form_field.dart" root0="FORCE_HIGHLIGHTING" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
   </component>
+  <component name="ProjectColorInfo">{
+  &quot;customColor&quot;: &quot;&quot;,
+  &quot;associatedIndex&quot;: 1
+}</component>
+  <component name="ProjectId" id="2flCXePWYPspUZIbtXs9aPsDG2g" />
   <component name="ProjectView">
-    <navigator currentView="ProjectPane" proportions="" version="1">
-    </navigator>
+    <navigator currentView="ProjectPane" proportions="" version="1" />
     <panes>
       <pane id="ProjectPane">
         <option name="show-excluded-files" value="false" />
       </pane>
     </panes>
   </component>
-  <component name="PropertiesComponent">
-    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
-    <property name="dart.analysis.tool.window.force.activate" value="true" />
-    <property name="show.migrate.to.gradle.popup" value="false" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "ResourceManagerPrefKey.ResourceType": "LAYOUT",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.cidr.known.project.marker": "true",
+    "cf.first.check.clang-format": "false",
+    "cidr.known.project.marker": "true",
+    "dart.analysis.tool.window.visible": "false",
+    "git-widget-placeholder": "feature/purchase",
+    "io.flutter.reload.alreadyRun": "true",
+    "show.migrate.to.gradle.popup": "false"
+  }
+}]]></component>
+  <component name="RecentsManager">
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="E:\ajithtechlambdas\tlbilling\lib\view\purchase\add_purchase\add_vehicle_and_accesories" />
+    </key>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="46b8c2b5-0582-4264-9963-ab5d06895d77" name="Changes" comment="" />
+      <created>1714366325653</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1714366325653</updated>
+    </task>
+    <servers />
+  </component>
+  <component name="ToolWindowManager">
+    <editor active="true" />
+    <layout>
+      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
+    </layout>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <option name="LAST_COMMIT_MESSAGE" value="" />
   </component>
-</project>
+</project>
\ No newline at end of file
Index: macos/Flutter/GeneratedPluginRegistrant.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n//  Generated file. Do not edit.\r\n//\r\n\r\nimport FlutterMacOS\r\nimport Foundation\r\n\r\nimport shared_preferences_foundation\r\n\r\nfunc RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {\r\n  SharedPreferencesPlugin.register(with: registry.registrar(forPlugin: \"SharedPreferencesPlugin\"))\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/macos/Flutter/GeneratedPluginRegistrant.swift b/macos/Flutter/GeneratedPluginRegistrant.swift
--- a/macos/Flutter/GeneratedPluginRegistrant.swift	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/macos/Flutter/GeneratedPluginRegistrant.swift	(date 1715852885374)
@@ -5,8 +5,10 @@
 import FlutterMacOS
 import Foundation
 
+import path_provider_foundation
 import shared_preferences_foundation
 
 func RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {
+  PathProviderPlugin.register(with: registry.registrar(forPlugin: "PathProviderPlugin"))
   SharedPreferencesPlugin.register(with: registry.registrar(forPlugin: "SharedPreferencesPlugin"))
 }
Index: lib/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories_bloc.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories_bloc.dart b/lib/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories_bloc.dart
new file mode 100644
--- /dev/null	(date 1715775778606)
+++ b/lib/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories_bloc.dart	(date 1715775778606)
@@ -0,0 +1,141 @@
+import 'dart:async';
+
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+
+abstract class AddVehicleAndAccessoriesBloc {
+  TextEditingController get invoiceNumberController;
+
+  TextEditingController get purchaseRefController;
+
+  TextEditingController get carrierController;
+
+  TextEditingController get carrierNumberController;
+
+  TextEditingController get partNumberController;
+
+  TextEditingController get hsnCodeController;
+
+  TextEditingController get unitRateController;
+
+  TextEditingController get engineNumberController;
+
+  TextEditingController get frameNumberController;
+
+  TextEditingController get materialNumberController;
+
+  TextEditingController get materialNameController;
+
+  TextEditingController get quantityController;
+
+  TextEditingController get variantController;
+
+  TextEditingController get colorController;
+
+  TextEditingController get invoiceDateController;
+
+  Stream get selectedPurchaseTypeStream;
+
+  String? get vendorDropDownValue;
+
+  String? get selectedPurchaseType;
+}
+
+class AddVehicleAndAccessoriesBlocImpl extends AddVehicleAndAccessoriesBloc {
+  final _invoiceNumberController = TextEditingController();
+  final _purchaseRefController = TextEditingController();
+  final _carrierNumberController = TextEditingController();
+  final _carrierController = TextEditingController();
+  final _partNumberController = TextEditingController();
+  final _hsnCodeController = TextEditingController();
+  final _unitRateController = TextEditingController();
+  final _engineNumberController = TextEditingController();
+  final _frameNumberController = TextEditingController();
+  final _materialNumberController = TextEditingController();
+  final _materialNameController = TextEditingController();
+  final _quantityController = TextEditingController();
+  final _variantController = TextEditingController();
+  final _colorController = TextEditingController();
+  final _invoiceDateController = TextEditingController();
+  final _selectedPurchaseTypeStream = StreamController.broadcast();
+  String? _vendorDropDownValue;
+  String? _selectedPurchaseType;
+  List<String> selectVendor = ['Ajithkumar', 'Peter', 'Prasath'];
+  late Set<String> optionsSet = {selectedPurchaseType ?? ''};
+
+  @override
+  String? get vendorDropDownValue => _vendorDropDownValue;
+
+  set vendorDropDownValue(String? value) {
+    _vendorDropDownValue = value;
+  }
+
+  @override
+  TextEditingController get invoiceNumberController => _invoiceNumberController;
+
+  @override
+  TextEditingController get purchaseRefController => _purchaseRefController;
+
+  @override
+  TextEditingController get carrierController => _carrierController;
+
+  @override
+  TextEditingController get carrierNumberController => _carrierNumberController;
+
+  @override
+  TextEditingController get partNumberController => _partNumberController;
+
+  @override
+  TextEditingController get hsnCodeController => _hsnCodeController;
+
+  @override
+  TextEditingController get unitRateController => _unitRateController;
+
+  @override
+  TextEditingController get engineNumberController => _engineNumberController;
+
+  @override
+  TextEditingController get frameNumberController => _frameNumberController;
+
+  @override
+  String? get selectedPurchaseType => _selectedPurchaseType;
+
+  set selectedPurchaseType(String? newValue) {
+    _selectedPurchaseType = newValue;
+  }
+
+  @override
+  Stream get selectedPurchaseTypeStream => _selectedPurchaseTypeStream.stream;
+
+  selectedPurchaseTypeStreamController(bool streamValue) {
+    _selectedPurchaseTypeStream.add(streamValue);
+  }
+
+  @override
+  TextEditingController get materialNameController => _materialNameController;
+
+  @override
+  TextEditingController get materialNumberController =>
+      _materialNumberController;
+
+  @override
+  TextEditingController get quantityController => _quantityController;
+
+  changeSegmentedColor(Color color) {
+    return MaterialStateProperty.resolveWith((states) {
+      if (states.contains(MaterialState.selected)) {
+        return color;
+      }
+      return null;
+    });
+  }
+
+  @override
+  TextEditingController get colorController => _colorController;
+
+  @override
+  TextEditingController get variantController => _variantController;
+
+  @override
+  TextEditingController get invoiceDateController => _invoiceDateController;
+}
Index: lib/view/purchase/add_purchase/add_vehicle_and_accesories/vehicle_purchase_details.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/purchase/add_purchase/add_vehicle_and_accesories/vehicle_purchase_details.dart b/lib/view/purchase/add_purchase/add_vehicle_and_accesories/vehicle_purchase_details.dart
new file mode 100644
--- /dev/null	(date 1715854949077)
+++ b/lib/view/purchase/add_purchase/add_vehicle_and_accesories/vehicle_purchase_details.dart	(date 1715854949077)
@@ -0,0 +1,228 @@
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:google_fonts/google_fonts.dart';
+import 'package:tlbilling/utils/app_colors.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+import 'package:tlbilling/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories_bloc.dart';
+import 'package:tlds_flutter/export.dart';
+
+class VehiclePurchaseDetails extends StatefulWidget {
+  const VehiclePurchaseDetails({super.key});
+
+  @override
+  State<VehiclePurchaseDetails> createState() => _VehiclePurchaseDetailsState();
+}
+
+class _VehiclePurchaseDetailsState extends State<VehiclePurchaseDetails> {
+  final _appColors = AppColors();
+  final _addVehicleAndAccessoriesBloc = AddVehicleAndAccessoriesBlocImpl();
+  final List<String> vehicleAndAccessories = ['Vehicle', 'Accessories'];
+
+  @override
+  Widget build(BuildContext context) {
+    return Column(
+      children: [
+        _buildVehiclePurchaseDetails(),
+        _buildDefaultHeight(),
+        _buildEngineDetails(),
+      ],
+    );
+  }
+
+  Widget _buildVehiclePurchaseDetails() {
+    return Container(
+      width: MediaQuery.sizeOf(context).width * 0.36,
+      decoration: BoxDecoration(
+          border: Border(bottom: BorderSide(color: _appColors.greyColor))),
+      child: Padding(
+        padding: const EdgeInsets.all(12),
+        child: Column(
+          children: [
+            _buildPartNumberAndVehicleName(),
+            _buildDefaultHeight(),
+            _buildVariantAndColor(),
+            _buildDefaultHeight(),
+            _buildHSNCodeAndUniteRate(),
+            _buildDefaultHeight(),
+          ],
+        ),
+      ),
+    );
+  }
+
+  Widget _buildPartNumberAndVehicleName() {
+    return Row(
+      children: [
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.partNo,
+                hintText: AppConstants.partNo,
+                controller:
+                    _addVehicleAndAccessoriesBloc.partNumberController)),
+        _buildDefaultWidth(),
+        Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            _buildTextWidget(AppConstants.vehicleName, fontSize: 14),
+            AppWidgetUtils.buildSizedBox(
+                custHeight: MediaQuery.sizeOf(context).height * 0.01),
+            TldsDropDownButtonFormField(
+              height: 40,
+              width: MediaQuery.sizeOf(context).width * 0.165,
+              hintText: AppConstants.vehicleName,
+              dropDownItems: _addVehicleAndAccessoriesBloc.selectVendor,
+              onChange: (String? newValue) {
+                _addVehicleAndAccessoriesBloc.vendorDropDownValue =
+                    newValue ?? '';
+              },
+            )
+          ],
+        ),
+      ],
+    );
+  }
+
+  Widget _buildVariantAndColor() {
+    return Row(
+      children: [
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.variant,
+                hintText: AppConstants.variant,
+                controller: _addVehicleAndAccessoriesBloc.variantController)),
+        _buildDefaultWidth(),
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.color,
+                hintText: AppConstants.color,
+                controller: _addVehicleAndAccessoriesBloc.colorController)),
+      ],
+    );
+  }
+
+  Widget _buildHSNCodeAndUniteRate() {
+    return Row(
+      children: [
+        Expanded(
+            child: TldsInputFormField(
+                inputFormatters: [FilteringTextInputFormatter.allow(RegExp(r'^\d{0,8}'))],
+                height: 40,
+                labelText: AppConstants.hsnCode,
+                hintText: AppConstants.hsnCode,
+                controller: _addVehicleAndAccessoriesBloc.hsnCodeController)),
+        _buildDefaultWidth(),
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.unitRate,
+                hintText: AppConstants.unitRate,
+                controller: _addVehicleAndAccessoriesBloc.unitRateController)),
+      ],
+    );
+  }
+
+  Widget _buildEngineDetails() {
+    return SizedBox(
+      width: MediaQuery.sizeOf(context).width * 0.36,
+      child: Padding(
+        padding: const EdgeInsets.all(12),
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            Row(
+              mainAxisAlignment: MainAxisAlignment.spaceBetween,
+              children: [
+                _buildTextWidget(AppConstants.engineDetails,
+                    color: _appColors.primaryColor, fontSize: 20),
+                _buildTextWidget('QTY : 02',
+                    color: _appColors.primaryColor, fontSize: 20),
+              ],
+            ),
+            _buildDefaultHeight(),
+            _buildEngineNumberAndFrameNumber(),
+            _buildDefaultHeight(),
+            _buildEngineDetailsList(),
+            _buildDefaultHeight()
+          ],
+        ),
+      ),
+    );
+  }
+
+  Widget _buildEngineNumberAndFrameNumber() {
+    return Row(
+      children: [
+        Expanded(
+            child: TldsInputFormField(
+                inputFormatters: [],
+                height: 40,
+                labelText: AppConstants.engineNumber,
+                hintText: AppConstants.engineNumber,
+                controller:
+                    _addVehicleAndAccessoriesBloc.engineNumberController)),
+        _buildDefaultWidth(),
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.frameNumber,
+                hintText: AppConstants.frameNumber,
+                controller:
+                    _addVehicleAndAccessoriesBloc.frameNumberController)),
+      ],
+    );
+  }
+
+  Widget _buildEngineDetailsList() {
+    return SizedBox(
+      width: MediaQuery.sizeOf(context).width,
+      height: MediaQuery.sizeOf(context).height * 0.2,
+      child: ListView.builder(
+        itemCount: 2,
+        itemBuilder: (context, index) {
+          return Card(
+              elevation: 0,
+              shape: OutlineInputBorder(
+                  borderSide: BorderSide(color: _appColors.cardBorderColor)),
+              child: Padding(
+                padding: const EdgeInsets.all(8),
+                child: Row(
+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                  children: [
+                    _buildTextWidget('EngineNumber'),
+                    _buildTextWidget('FrameNumber'),
+                    IconButton(
+                        onPressed: () {},
+                        icon: Icon(
+                          Icons.cancel,
+                          color: _appColors.errorColor,
+                        )),
+                  ],
+                ),
+              ));
+        },
+      ),
+    );
+  }
+
+  Widget _buildDefaultWidth() {
+    return AppWidgetUtils.buildSizedBox(
+        custWidth: MediaQuery.sizeOf(context).width * 0.01);
+  }
+
+  Widget _buildDefaultHeight() {
+    return AppWidgetUtils.buildSizedBox(
+        custHeight: MediaQuery.sizeOf(context).height * 0.02);
+  }
+
+  Widget _buildTextWidget(String text,
+      {double? fontSize, FontWeight? fontWeight, Color? color}) {
+    return Text(
+      text,
+      style: GoogleFonts.poppins(
+          color: color, fontWeight: fontWeight, fontSize: fontSize),
+    );
+  }
+}
Index: lib/view/stocks/stocks_view_bloc.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/stocks/stocks_view_bloc.dart b/lib/view/stocks/stocks_view_bloc.dart
new file mode 100644
--- /dev/null	(date 1714392847084)
+++ b/lib/view/stocks/stocks_view_bloc.dart	(date 1714392847084)
@@ -0,0 +1,54 @@
+import 'dart:async';
+
+import 'package:flutter/material.dart';
+
+abstract class StocksViewBloc {
+  TextEditingController get partNumberSearchController;
+
+  TextEditingController get vehicleNameSearchController;
+
+  Stream get partNumberSearchControllerStream;
+
+  Stream get vehicleNameSearchControllerStream;
+
+  TabController get stocksTableTableController;
+}
+
+class StocksViewBlocImpl extends StocksViewBloc {
+  final _partNumberSearchController = TextEditingController();
+  final _vehicleNameSearchController = TextEditingController();
+  final _partNumberSearchControllerStream = StreamController.broadcast();
+  final _vehicleNameSearchControllerStream = StreamController.broadcast();
+  late TabController _stocksTableTableController;
+
+  @override
+  TextEditingController get partNumberSearchController =>
+      _partNumberSearchController;
+
+  @override
+  TextEditingController get vehicleNameSearchController =>
+      _vehicleNameSearchController;
+
+  @override
+  Stream get partNumberSearchControllerStream =>
+      _partNumberSearchControllerStream.stream;
+
+  partNumberSearchStreamController(bool streamValue) {
+    _partNumberSearchControllerStream.add(streamValue);
+  }
+
+  @override
+  Stream get vehicleNameSearchControllerStream =>
+      _vehicleNameSearchControllerStream.stream;
+
+  vehicleNameSearchStreamController(bool streamValue) {
+    _vehicleNameSearchControllerStream.add(streamValue);
+  }
+
+  @override
+  TabController get stocksTableTableController => _stocksTableTableController;
+
+  set stocksTableTableController(TabController tabValue) {
+    _stocksTableTableController = tabValue;
+  }
+}
Index: lib/view/stocks/detail_stock_view.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/stocks/detail_stock_view.dart b/lib/view/stocks/detail_stock_view.dart
new file mode 100644
--- /dev/null	(date 1714394858987)
+++ b/lib/view/stocks/detail_stock_view.dart	(date 1714394858987)
@@ -0,0 +1,88 @@
+import 'package:flutter/material.dart';
+import 'package:flutter_svg/flutter_svg.dart';
+import 'package:google_fonts/google_fonts.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+import 'package:tlds_flutter/export.dart';
+
+class DetailStockView extends StatefulWidget {
+  const DetailStockView({super.key});
+
+  @override
+  State<DetailStockView> createState() => _DetailStockViewState();
+}
+
+class _DetailStockViewState extends State<DetailStockView> {
+  final _appColors = AppColor();
+  List<Map<String, String>> rowData = [
+    {
+      AppConstants.sno: '1',
+      AppConstants.engineNumber: 'DG5BR1029320',
+      AppConstants.frameNumber: 'MD26CG5BR1C0023',
+      AppConstants.color: 'WALNUT BROWN',
+      AppConstants.hsnCode: '87112019',
+      AppConstants.branchCode: 'Main Branch',
+    },
+  ];
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(
+        title: Text(
+          'TVS JUPITER-OBDIIA WALN  ${rowData.length}',
+          style: GoogleFonts.poppins(color: _appColors.primaryColor),
+        ),
+      ),
+      body: Padding(
+        padding: const EdgeInsets.all(12),
+        child: _buildStockTableView(context),
+      ),
+    );
+  }
+
+  _buildStockTableView(BuildContext context) {
+    return Expanded(
+        child: SizedBox(
+      width: MediaQuery.sizeOf(context).width,
+      child: DataTable(
+        key: UniqueKey(),
+        dividerThickness: 0.01,
+        columns: [
+          _buildVehicleTableHeader(
+            AppConstants.sno,
+          ),
+          _buildVehicleTableHeader(AppConstants.engineNumber),
+          _buildVehicleTableHeader(AppConstants.frameNumber),
+          _buildVehicleTableHeader(AppConstants.color),
+          _buildVehicleTableHeader(AppConstants.hsnCode),
+          _buildVehicleTableHeader(AppConstants.branchCode),
+        ],
+        rows: List.generate(rowData.length, (index) {
+          final data = rowData[index];
+
+          final color = index.isEven
+              ? _appColors.whiteColor
+              : _appColors.transparentBlueColor;
+          return DataRow(
+            color: MaterialStateColor.resolveWith((states) => color),
+            cells: [
+              DataCell(Text(data[AppConstants.sno]!)),
+              DataCell(Text(data[AppConstants.engineNumber]!)),
+              DataCell(Text(data[AppConstants.frameNumber]!)),
+              DataCell(Text(data[AppConstants.color]!)),
+              DataCell(Text(data[AppConstants.hsnCode]!)),
+              DataCell(Text(data[AppConstants.branchCode]!)),
+            ],
+          );
+        }),
+      ),
+    ));
+  }
+
+  _buildVehicleTableHeader(String headerValue) => DataColumn(
+        label: Text(
+          headerValue,
+          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
+        ),
+      );
+}
Index: lib/view/purchase/add_purchase/purchase_table.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/purchase/add_purchase/purchase_table.dart b/lib/view/purchase/add_purchase/purchase_table.dart
new file mode 100644
--- /dev/null	(date 1715830233878)
+++ b/lib/view/purchase/add_purchase/purchase_table.dart	(date 1715830233878)
@@ -0,0 +1,133 @@
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_svg/svg.dart';
+import 'package:tlbilling/components/custom_action_button.dart';
+import 'package:tlbilling/components/custom_elevated_button.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+import 'package:tlds_flutter/export.dart';
+
+class PurchaseTable extends StatefulWidget {
+  const PurchaseTable({super.key});
+
+  @override
+  State<PurchaseTable> createState() => _PurchaseTableState();
+}
+
+class _PurchaseTableState extends State<PurchaseTable> {
+  final _appColors = AppColor();
+  List<Map<String, String>> rowData = [
+    {
+      AppConstants.sno: '1',
+      AppConstants.invoiceNo: 'INV-1234',
+      AppConstants.partNo: 'K61916304K',
+      AppConstants.vehicleDescription: 'TVS JUPITER-OBDIIA WALN',
+      AppConstants.hsnCode: '87112019',
+      AppConstants.quantity: '2',
+      AppConstants.totalInvAmount: '₹ 1,000,00',
+    },
+    {
+      AppConstants.sno: '2',
+      AppConstants.invoiceNo: 'INV-1235',
+      AppConstants.partNo: 'K61916304K',
+      AppConstants.vehicleDescription: 'TVS JUPITER-OBDIIA WALN',
+      AppConstants.hsnCode: '87112019',
+      AppConstants.quantity: '1',
+      AppConstants.totalInvAmount: '₹ 1,000,00',
+    },
+  ];
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+        width: MediaQuery.sizeOf(context).width * 0.64,
+        decoration: BoxDecoration(
+            border: Border(right: BorderSide(color: _appColors.greyColor),
+            top: BorderSide(color: _appColors.greyColor),)),
+        child: Padding(
+          padding: const EdgeInsets.all(12),
+          child: Column(
+            mainAxisAlignment: MainAxisAlignment.spaceBetween,
+            children: [
+              _buildAddedVehicleAndAccessoriesTable(),
+              _buildPreviewAndActionButton()],
+          ),
+        ));
+  }
+
+  Widget _buildAddedVehicleAndAccessoriesTable(){
+    return Expanded(
+      child: SingleChildScrollView(
+        scrollDirection: Axis.horizontal,
+        child: SingleChildScrollView(
+          scrollDirection: Axis.vertical,
+          child: SizedBox(
+            width: MediaQuery.of(context).size.width,
+            child: DataTable(
+              key: UniqueKey(),
+              dividerThickness: 0.01,
+              columns: [
+                _buildVehicleTableHeader(
+                  AppConstants.sno,
+                ),
+                _buildVehicleTableHeader(AppConstants.invoiceNo),
+                _buildVehicleTableHeader(AppConstants.partNo),
+                _buildVehicleTableHeader(AppConstants.vehicleDescription),
+                _buildVehicleTableHeader(AppConstants.hsnCode),
+                _buildVehicleTableHeader(AppConstants.quantity),
+                _buildVehicleTableHeader(AppConstants.totalInvAmount),
+                _buildVehicleTableHeader(AppConstants.action),
+              ],
+              rows: List.generate(rowData.length, (index) {
+                final data = rowData[index];
+
+                final color = index.isEven
+                    ? _appColors.whiteColor
+                    : _appColors.transparentBlueColor;
+                return DataRow(
+                  color: MaterialStateColor.resolveWith((states) => color),
+                  cells: [
+                    DataCell(Text(data[AppConstants.sno]!)),
+                    DataCell(Text(data[AppConstants.invoiceNo]!)),
+                    DataCell(Text(data[AppConstants.partNo]!)),
+                    DataCell(Text(data[AppConstants.vehicleDescription]!)),
+                    DataCell(Text(data[AppConstants.hsnCode]!)),
+                    DataCell(Text(data[AppConstants.quantity]!)),
+                    DataCell(Text(data[AppConstants.totalInvAmount]!)),
+                    DataCell(
+                      Row(
+                        children: [
+                          IconButton(
+                            icon: SvgPicture.asset(AppConstants.icEdit),
+                            onPressed: () {},
+                          ),
+                        ],
+                      ),
+                    ),
+                  ],
+                );
+              }),
+            ),
+          ),
+        ))
+    );
+  }
+
+  _buildVehicleTableHeader(String headerValue) => DataColumn(
+    label: Text(
+      headerValue,
+      style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
+    ),
+  );
+
+  Widget _buildPreviewAndActionButton() {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+      children: [
+        CustomElevatedButton(text: 'Preview', fontSize: 16,
+        buttonBackgroundColor: _appColors.primaryColor,
+        fontColor: _appColors.whiteColor,),
+        CustomActionButtons(onPressed: () {}, buttonText: 'Save')
+      ],
+    );
+  }
+}
Index: lib/view/purchase/purchase_view_bloc.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/purchase/purchase_view_bloc.dart b/lib/view/purchase/purchase_view_bloc.dart
new file mode 100644
--- /dev/null	(date 1714201603603)
+++ b/lib/view/purchase/purchase_view_bloc.dart	(date 1714201603603)
@@ -0,0 +1,91 @@
+import 'dart:async';
+
+import 'package:flutter/material.dart';
+
+abstract class PurchaseViewBloc {
+  TextEditingController get invoiceSearchFieldController;
+
+  TextEditingController get partNoSearchFieldController;
+
+  TextEditingController get vehicleSearchFieldController;
+
+  TextEditingController get hsnCodeSearchFieldController;
+
+  TabController get vehicleAndAccessoriesTabController;
+
+  Stream get invoiceSearchFieldControllerStream;
+
+  Stream get partNoSearchFieldControllerStream;
+
+  Stream get vehicleSearchFieldControllerStream;
+
+  Stream get hsnCodeSearchFieldControllerStream;
+}
+
+class PurchaseViewBlocImpl extends PurchaseViewBloc {
+  final _invoiceSearchFieldController = TextEditingController();
+  final _partNoSearchFieldController = TextEditingController();
+  final _vehicleSearchFieldController = TextEditingController();
+  final _hsnCodeSearchFieldController = TextEditingController();
+  final _hsnCodeSearchFieldControllerStream = StreamController.broadcast();
+  final _vehicleSearchFieldControllerStream = StreamController.broadcast();
+  final _partNoSearchFieldControllerStream = StreamController.broadcast();
+  final _invoiceSearchFieldControllerStream = StreamController.broadcast();
+  late TabController _vehicleAndAccessoriesTabController;
+
+  @override
+  TextEditingController get invoiceSearchFieldController =>
+      _invoiceSearchFieldController;
+
+  @override
+  TextEditingController get hsnCodeSearchFieldController =>
+      _hsnCodeSearchFieldController;
+
+  @override
+  TextEditingController get partNoSearchFieldController =>
+      _partNoSearchFieldController;
+
+  @override
+  TextEditingController get vehicleSearchFieldController =>
+      _vehicleSearchFieldController;
+
+  @override
+  Stream get hsnCodeSearchFieldControllerStream =>
+      _hsnCodeSearchFieldControllerStream.stream;
+
+  hsnCodeSearchFieldStreamController(bool streamValue) {
+    _hsnCodeSearchFieldControllerStream.add(streamValue);
+  }
+
+  @override
+  Stream get invoiceSearchFieldControllerStream =>
+      _invoiceSearchFieldControllerStream.stream;
+
+  invoiceSearchFieldStreamController(bool streamValue) {
+    _invoiceSearchFieldControllerStream.add(streamValue);
+  }
+
+  @override
+  Stream get partNoSearchFieldControllerStream =>
+      _partNoSearchFieldControllerStream.stream;
+
+  partNoSearchFieldStreamController(bool streamValue) {
+    _partNoSearchFieldControllerStream.add(streamValue);
+  }
+
+  @override
+  Stream get vehicleSearchFieldControllerStream =>
+      _vehicleSearchFieldControllerStream.stream;
+
+  vehicleSearchFieldStreamController(bool streamValue) {
+    _vehicleSearchFieldControllerStream.add(streamValue);
+  }
+
+  @override
+  TabController get vehicleAndAccessoriesTabController =>
+      _vehicleAndAccessoriesTabController;
+
+  set vehicleAndAccessoriesTabController(TabController tabValue) {
+    _vehicleAndAccessoriesTabController = tabValue;
+  }
+}
Index: build/flutter_assets/NOTICES
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build/flutter_assets/NOTICES b/build/flutter_assets/NOTICES
--- a/build/flutter_assets/NOTICES	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/build/flutter_assets/NOTICES	(date 1715852887801)
@@ -4537,6 +4537,38 @@
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
+--------------------------------------------------------------------------------
+crypto
+vm_service
+
+Copyright 2015, the Dart project authors.
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions are
+met:
+
+    * Redistributions of source code must retain the above copyright
+      notice, this list of conditions and the following disclaimer.
+    * Redistributions in binary form must reproduce the above
+      copyright notice, this list of conditions and the following
+      disclaimer in the documentation and/or other materials provided
+      with the distribution.
+    * Neither the name of Google LLC nor the names of its
+      contributors may be used to endorse or promote products derived
+      from this software without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
 --------------------------------------------------------------------------------
 cupertino_icons
 
@@ -6892,6 +6924,9 @@
 
 --------------------------------------------------------------------------------
 flutter_lints
+path_provider
+path_provider_android
+path_provider_foundation
 path_provider_linux
 path_provider_platform_interface
 path_provider_windows
@@ -11046,6 +11081,211 @@
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM,OUT OF OR IN CONNECTION WITH THE MATERIALS OR THE USE OR OTHER DEALINGS
 IN THE MATERIALS.
+--------------------------------------------------------------------------------
+google_fonts
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
 --------------------------------------------------------------------------------
 harfbuzz
 
@@ -28921,6 +29161,62 @@
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
+--------------------------------------------------------------------------------
+input_quantity
+
+MIT License
+
+Copyright (c) 2022 Matatias Situmorang (Petra)
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
+
+--------------------------------------------------------------------------------
+intl
+
+Copyright 2013, the Dart project authors.
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions are
+met:
+
+    * Redistributions of source code must retain the above copyright
+      notice, this list of conditions and the following disclaimer.
+    * Redistributions in binary form must reproduce the above
+      copyright notice, this list of conditions and the following
+      disclaimer in the documentation and/or other materials provided
+      with the distribution.
+    * Neither the name of Google LLC nor the names of its
+      contributors may be used to endorse or promote products derived
+      from this software without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
 --------------------------------------------------------------------------------
 json
 
@@ -33364,37 +33660,6 @@
    misrepresented as being the original software.
 3. This notice may not be removed or altered from any source distribution.
 
---------------------------------------------------------------------------------
-vm_service
-
-Copyright 2015, the Dart project authors.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-
-    * Redistributions of source code must retain the above copyright
-      notice, this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above
-      copyright notice, this list of conditions and the following
-      disclaimer in the documentation and/or other materials provided
-      with the distribution.
-    * Neither the name of Google LLC nor the names of its
-      contributors may be used to endorse or promote products derived
-      from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
 --------------------------------------------------------------------------------
 vulkan-validation-layers
 
Index: lib/view/purchase/add_purchase/add_vehicle_and_accesories/accessories_purchase_details.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/purchase/add_purchase/add_vehicle_and_accesories/accessories_purchase_details.dart b/lib/view/purchase/add_purchase/add_vehicle_and_accesories/accessories_purchase_details.dart
new file mode 100644
--- /dev/null	(date 1715855222264)
+++ b/lib/view/purchase/add_purchase/add_vehicle_and_accesories/accessories_purchase_details.dart	(date 1715855222264)
@@ -0,0 +1,100 @@
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/widgets.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+import 'package:tlbilling/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories_bloc.dart';
+import 'package:tlds_flutter/export.dart';
+
+class AccessoriesPurchaseDetails extends StatefulWidget {
+  const AccessoriesPurchaseDetails({super.key});
+
+  @override
+  State<AccessoriesPurchaseDetails> createState() =>
+      _AccessoriesPurchaseDetailsState();
+}
+
+class _AccessoriesPurchaseDetailsState
+    extends State<AccessoriesPurchaseDetails> {
+  final _addVehicleAndAccessoriesBloc = AddVehicleAndAccessoriesBlocImpl();
+  final List<String> vehicleAndAccessories = ['Vehicle', 'Accessories'];
+
+  @override
+  Widget build(BuildContext context) {
+    return Padding(padding: const EdgeInsets.all(12),
+    child: Column(
+      children: [
+        _buildMaterialNumberAndName(),
+        _buildDefaultHeight(),
+        _buildHSNCodeAndQty(),
+        _buildDefaultHeight(),
+        _buildUnitRate(),
+        _buildDefaultHeight()
+      ],
+    ),);
+  }
+
+  Widget _buildMaterialNumberAndName() {
+    return Row(
+      children: [
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.materialNumber,
+                hintText: AppConstants.materialNumber,
+                controller:
+                    _addVehicleAndAccessoriesBloc.materialNumberController)),
+        _buildDefaultWidth(),
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.materialName,
+                hintText: AppConstants.materialName,
+                controller:
+                    _addVehicleAndAccessoriesBloc.materialNameController)),
+      ],
+    );
+  }
+
+  Widget _buildHSNCodeAndQty() {
+    return Row(
+      children: [
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.hsnCode,
+                hintText: AppConstants.hsnCode,
+                controller: _addVehicleAndAccessoriesBloc.hsnCodeController)),
+        _buildDefaultWidth(),
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.quantity,
+                hintText: AppConstants.quantity,
+                controller: _addVehicleAndAccessoriesBloc.quantityController)),
+      ],
+    );
+  }
+
+  Widget _buildUnitRate() {
+    return Row(
+      children: [
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.unitRate,
+                hintText: AppConstants.unitRate,
+                controller: _addVehicleAndAccessoriesBloc.unitRateController)),
+      ],
+    );
+  }
+
+  Widget _buildDefaultWidth() {
+    return AppWidgetUtils.buildSizedBox(
+        custWidth: MediaQuery.sizeOf(context).width * 0.01);
+  }
+
+  Widget _buildDefaultHeight() {
+    return AppWidgetUtils.buildSizedBox(
+        custHeight: MediaQuery.sizeOf(context).height * 0.02);
+  }
+}
Index: lib/components/side_menu_navigation.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:flutter_svg/svg.dart';\r\nimport 'package:tlbilling/components/responsive.dart';\r\nimport 'package:tlbilling/components/side_menu_navigation_bloc.dart';\r\nimport 'package:tlbilling/utils/app_colors.dart';\r\nimport 'package:tlbilling/utils/app_constants.dart';\r\nimport 'package:tlbilling/utils/app_util_widgets.dart';\r\nimport 'package:tlbilling/view/customer/customer_view.dart';\r\nimport 'package:tlbilling/view/employee/employee_view_screen.dart';\r\nimport 'package:tlbilling/view/login/login_page.dart';\r\n\r\nimport 'package:tlbilling/view/transport/transport_view.dart';\r\nimport 'package:tlbilling/view/vendor/vendor_view.dart';\r\n\r\nclass SideMenuNavigation extends StatefulWidget {\r\n  const SideMenuNavigation({super.key});\r\n\r\n  @override\r\n  State<SideMenuNavigation> createState() => _SideMenuNavigationState();\r\n}\r\n\r\nclass _SideMenuNavigationState extends State<SideMenuNavigation> {\r\n  final _appcolors = AppColors();\r\n  final sideMenuBloc = SideMenuNavigationBlocImpl();\r\n  String selectedMenuItem = AppConstants.purchase;\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n\r\n    sideMenuBloc.sideMenuStreamController(true);\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Responsive(\r\n      mobile: _buildMobileView(),\r\n      tablet: _buildTabletView(),\r\n      desktop: _buildDesktopView(),\r\n    );\r\n  }\r\n\r\n  Widget _buildMobileView() {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: Text(selectedMenuItem),\r\n      ),\r\n      drawer: _buildDrawer(),\r\n      body: _buildPage(selectedMenuItem),\r\n    );\r\n  }\r\n\r\n  Widget _buildDesktopView() {\r\n    return Row(\r\n      children: [\r\n        SizedBox(\r\n          // height: MediaQuery.sizeOf(context).height + 60,\r\n          width: 210,\r\n          child: Container(\r\n            decoration: const BoxDecoration(color: Colors.deepPurple),\r\n            child: _buildDrawer(),\r\n          ),\r\n        ),\r\n        Expanded(\r\n          flex: 4,\r\n          child: Center(\r\n            child: Container(\r\n              color: Colors.grey[200],\r\n              child: _buildPage(selectedMenuItem),\r\n            ),\r\n          ),\r\n        ),\r\n      ],\r\n    );\r\n  }\r\n\r\n  Widget _buildTabletView() {\r\n    return Row(\r\n      children: [\r\n        Expanded(\r\n          flex: 1,\r\n          child: Container(\r\n            decoration: const BoxDecoration(color: Colors.deepPurple),\r\n            child: _buildDrawer(),\r\n          ),\r\n        ),\r\n        Expanded(\r\n          flex: 5,\r\n          child: _buildPage(selectedMenuItem),\r\n        ),\r\n      ],\r\n    );\r\n  }\r\n\r\n  Widget _buildDrawer() {\r\n    return StreamBuilder(\r\n      stream: sideMenuBloc.sideMenuStream,\r\n      builder: (context, snapshot) {\r\n        return Drawer(\r\n          backgroundColor: _appcolors.primaryColor,\r\n          child: ListView(\r\n            children: [\r\n              AppWidgetUtils.buildSizedBox(custHeight: 10),\r\n              Padding(\r\n                padding:\r\n                    const EdgeInsets.symmetric(horizontal: 10, vertical: 10),\r\n                child: Center(\r\n                  child: SvgPicture.asset(\r\n                    AppConstants.icCompanyLogo,\r\n                    colorFilter: ColorFilter.mode(\r\n                        _appcolors.whiteColor, BlendMode.srcIn),\r\n                  ),\r\n                ),\r\n              ),\r\n              Center(\r\n                child: Text(\r\n                  AppConstants.companyHeaderName,\r\n                  style: TextStyle(\r\n                      color: _appcolors.whiteColor,\r\n                      fontSize: 24,\r\n                      fontWeight: FontWeight.w400),\r\n                ),\r\n              ),\r\n              Padding(\r\n                padding:\r\n                    const EdgeInsets.symmetric(horizontal: 10, vertical: 18),\r\n                child: Divider(color: _appcolors.hintColor),\r\n              ),\r\n              _buildDrawerMenuItem(\r\n                AppConstants.icdashBoard,\r\n                AppConstants.dashboard,\r\n                () {\r\n                  _onMenuItemSelected(AppConstants.dashboard);\r\n                },\r\n              ),\r\n              _buildDrawerMenuItem(\r\n                AppConstants.icPurchase,\r\n                AppConstants.purchase,\r\n                () {\r\n                  _onMenuItemSelected(AppConstants.purchase);\r\n                },\r\n              ),\r\n              _buildDrawerMenuItem(\r\n                AppConstants.icSales,\r\n                AppConstants.sales,\r\n                () {\r\n                  _onMenuItemSelected(AppConstants.sales);\r\n                },\r\n              ),\r\n              _buildDrawerMenuItem(\r\n                AppConstants.icStocks,\r\n                AppConstants.stocks,\r\n                () {\r\n                  _onMenuItemSelected(AppConstants.stocks);\r\n                },\r\n              ),\r\n              _buildDrawerMenuItem(\r\n                AppConstants.icTransfer,\r\n                AppConstants.transfer,\r\n                () {\r\n                  _onMenuItemSelected(AppConstants.transfer);\r\n                },\r\n              ),\r\n              _buildDrawerMenuItem(\r\n                AppConstants.icCustomers,\r\n                AppConstants.customer,\r\n                () {\r\n                  _onMenuItemSelected(AppConstants.customer);\r\n                },\r\n              ),\r\n              _buildDrawerMenuItem(\r\n                AppConstants.icVendor,\r\n                AppConstants.vendor,\r\n                () {\r\n                  _onMenuItemSelected(AppConstants.vendor);\r\n                },\r\n              ),\r\n              _buildDrawerMenuItem(\r\n                AppConstants.icTransport,\r\n                AppConstants.transport,\r\n                () {\r\n                  _onMenuItemSelected(AppConstants.transport);\r\n                },\r\n              ),\r\n              _buildDrawerMenuItem(\r\n                AppConstants.icVendor,\r\n                AppConstants.employee,\r\n                () {\r\n                  _onMenuItemSelected(AppConstants.employee);\r\n                },\r\n              ),\r\n              _buildDrawerMenuItem(\r\n                AppConstants.icReport,\r\n                AppConstants.reports,\r\n                () {\r\n                  _onMenuItemSelected(AppConstants.reports);\r\n                },\r\n              ),\r\n              AppWidgetUtils.buildSizedBox(custHeight: 30),\r\n              _buildLogoutMenuItem(),\r\n              AppWidgetUtils.buildSizedBox(custHeight: 20),\r\n            ],\r\n          ),\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  Widget _buildDrawerMenuItem(\r\n    String svgIconPath,\r\n    String titleText,\r\n    Function() onTapFunction,\r\n  ) {\r\n    final isSelected = titleText == selectedMenuItem;\r\n    return Padding(\r\n      padding: const EdgeInsets.symmetric(horizontal: 10),\r\n      child: Container(\r\n        height: 43,\r\n        decoration: BoxDecoration(\r\n          borderRadius: const BorderRadius.all(Radius.circular(50)),\r\n          color: isSelected ? _appcolors.whiteColor : null,\r\n        ),\r\n        child: ListTile(\r\n          shape:\r\n              RoundedRectangleBorder(borderRadius: BorderRadius.circular(50)),\r\n          leading: SvgPicture.asset(\r\n            svgIconPath,\r\n            colorFilter: ColorFilter.mode(\r\n                isSelected ? _appcolors.primaryColor : _appcolors.whiteColor,\r\n                BlendMode.srcIn),\r\n          ),\r\n          title: Text(titleText,\r\n              style: TextStyle(\r\n                  color: isSelected\r\n                      ? _appcolors.primaryColor\r\n                      : _appcolors.whiteColor,\r\n                  fontSize: 14)),\r\n          onTap: () {\r\n            onTapFunction();\r\n            if (Responsive.isMobile(context) || Responsive.isTablet(context)) {\r\n              Navigator.pop(context);\r\n            }\r\n          },\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  void _onMenuItemSelected(String menuItem) {\r\n    setState(() {\r\n      selectedMenuItem = menuItem;\r\n    });\r\n  }\r\n\r\n  Widget _buildPage(String menuItem) {\r\n    switch (menuItem) {\r\n      case AppConstants.purchase:\r\n        return const Text('purchace');\r\n      case AppConstants.stocks:\r\n        return const Text('stock');\r\n      case AppConstants.sales:\r\n        return const Text('sales');\r\n      case AppConstants.customer:\r\n        return const CustomerView();\r\n      case AppConstants.transfer:\r\n        return const Text('tranfer');\r\n      case AppConstants.vendor:\r\n        return const VendorView();\r\n      case AppConstants.transport:\r\n        return const TransportView();\r\n      case AppConstants.employee:\r\n        return const EmployeeView();\r\n      case AppConstants.reports:\r\n        return const Text('reports');\r\n\r\n      case AppConstants.logOut:\r\n        return Container();\r\n      default:\r\n        return Container();\r\n    }\r\n  }\r\n\r\n  Widget _buildLogoutMenuItem() {\r\n    return Padding(\r\n      padding: const EdgeInsets.symmetric(horizontal: 10),\r\n      child: SizedBox(\r\n        child: InkWell(\r\n          onTap: () {\r\n            Navigator.pushReplacement(context, MaterialPageRoute(\r\n              builder: (context) {\r\n                return const LoginPage();\r\n              },\r\n            ));\r\n          },\r\n          child: Container(\r\n            decoration: const BoxDecoration(\r\n              borderRadius: BorderRadius.all(Radius.circular(5)),\r\n              color: AppColors.white12,\r\n            ),\r\n            child: Padding(\r\n              padding: const EdgeInsets.all(14),\r\n              child: Column(\r\n                children: [\r\n                  _buildName(),\r\n                  const Divider(),\r\n                  _buildBranch(),\r\n                ],\r\n              ),\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n    /*Card(\r\n      surfaceTintColor: null,\r\n      shadowColor: null,\r\n      shape: CircleBorder(side: BorderSide(style: BorderStyle.none), eccentricity: 0.5),\r\n      color: Colors.white12,\r\n      child: ,\r\n    );*/\r\n  }\r\n\r\n  _buildName() {\r\n    return Row(\r\n      mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n      children: [\r\n        Column(\r\n          crossAxisAlignment: CrossAxisAlignment.start,\r\n          children: [\r\n            Text(\r\n              'Ajithkumar',\r\n              style: TextStyle(color: _appcolors.whiteColor, fontSize: 14),\r\n            ),\r\n            Text(\r\n              'admin',\r\n              style: TextStyle(color: _appcolors.grey, fontSize: 9),\r\n            )\r\n          ],\r\n        ),\r\n        SvgPicture.asset(AppConstants.icLogout)\r\n      ],\r\n    );\r\n  }\r\n\r\n  _buildBranch() {\r\n    return Row(\r\n      mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n      children: [\r\n        Column(\r\n          crossAxisAlignment: CrossAxisAlignment.start,\r\n          children: [\r\n            Text(\r\n              'KovilPatti',\r\n              style: TextStyle(color: _appcolors.whiteColor, fontSize: 14),\r\n            ),\r\n            Row(\r\n              children: [\r\n                Container(\r\n                  height: 5,\r\n                  width: 5,\r\n                  decoration: const BoxDecoration(\r\n                    borderRadius: BorderRadius.all(Radius.circular(50)),\r\n                    color: Colors.green,\r\n                  ),\r\n                ),\r\n                _buildText(' Current Branch', _appcolors.whiteColor, 8),\r\n              ],\r\n            )\r\n          ],\r\n        ),\r\n        SvgPicture.asset(AppConstants.icDownArrow)\r\n      ],\r\n    );\r\n  }\r\n\r\n  _buildText(String? name, Color? color, double? fontSize) {\r\n    return Text(\r\n      name!,\r\n      style: TextStyle(\r\n        color: color,\r\n        fontSize: 9,\r\n      ),\r\n    );\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/components/side_menu_navigation.dart b/lib/components/side_menu_navigation.dart
--- a/lib/components/side_menu_navigation.dart	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/lib/components/side_menu_navigation.dart	(date 1715070785568)
@@ -8,6 +8,9 @@
 import 'package:tlbilling/view/customer/customer_view.dart';
 import 'package:tlbilling/view/employee/employee_view_screen.dart';
 import 'package:tlbilling/view/login/login_page.dart';
+import 'package:tlbilling/view/purchase/purchase_view.dart';
+import 'package:tlbilling/view/stocks/stocks_view.dart';
+import 'package:tlbilling/view/transfer/transfer_view.dart';
 
 import 'package:tlbilling/view/transport/transport_view.dart';
 import 'package:tlbilling/view/vendor/vendor_view.dart';
@@ -255,15 +258,15 @@
   Widget _buildPage(String menuItem) {
     switch (menuItem) {
       case AppConstants.purchase:
-        return const Text('purchace');
+        return const PurchaseView();
       case AppConstants.stocks:
-        return const Text('stock');
+        return const StocksView();
       case AppConstants.sales:
         return const Text('sales');
       case AppConstants.customer:
         return const CustomerView();
       case AppConstants.transfer:
-        return const Text('tranfer');
+        return const TransferView();
       case AppConstants.vendor:
         return const VendorView();
       case AppConstants.transport:
Index: lib/view/transfer/new_transfer/new_transfer.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/transfer/new_transfer/new_transfer.dart b/lib/view/transfer/new_transfer/new_transfer.dart
new file mode 100644
--- /dev/null	(date 1715768897899)
+++ b/lib/view/transfer/new_transfer/new_transfer.dart	(date 1715768897899)
@@ -0,0 +1,513 @@
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_svg/flutter_svg.dart';
+import 'package:google_fonts/google_fonts.dart';
+import 'package:input_quantity/input_quantity.dart';
+import 'package:tlbilling/utils/app_colors.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+import 'package:tlbilling/view/transfer/new_transfer/new_transfer_bloc.dart';
+import 'package:tlbilling/view/transfer/new_transfer/tranfer_details.dart';
+import 'package:tlds_flutter/export.dart';
+
+class NewTransfer extends StatefulWidget {
+  const NewTransfer({super.key});
+
+  @override
+  State<NewTransfer> createState() => _NewTransferState();
+}
+
+class _NewTransferState extends State<NewTransfer> {
+  final _appColors = AppColors();
+  final _newTransferBloc = NewTransferBlocImpl();
+
+  @override
+  void initState() {
+    super.initState();
+    _newTransferBloc.selectedVehicleAndAccessories = 'Vehicle';
+    _newTransferBloc.selectedVehicleAndAccessoriesStreamController(true);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(
+        title: const Text(AppConstants.newTransfer),
+      ),
+      body: Row(
+        children: [
+          _buildVehicleDetails(),
+          const TransferDetails(),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildVehicleDetails() {
+    return Container(
+      decoration:
+          BoxDecoration(border: Border.all(color: _appColors.greyColor)),
+      width: MediaQuery.sizeOf(context).width * 0.64,
+      child: Row(
+        children: [
+          _buildVehicleList(),
+          StreamBuilder(
+            stream: _newTransferBloc.selectedVehicleAndAccessoriesStream,
+            builder: (context, snapshot) {
+              return _newTransferBloc.selectedVehicleAndAccessories == 'Vehicle'
+                  ? _buildSelectedVehicle()
+                  : _newTransferBloc.selectedVehicleAndAccessories ==
+                          'Accessories'
+                      ? _buildSelectedAccessories()
+                      : Center(
+                          child: _buildCustomTextWidget(
+                              AppConstants.selectVehicleOrAccessories),
+                        );
+            },
+          )
+        ],
+      ),
+    );
+  }
+
+  Widget _buildVehicleList() {
+    return _buildCommonContainer(
+      Column(
+        children: [
+          _buildHeadingAndSegmentedButton(),
+          _buildDefaultHeight(),
+          _buildVehicleNameAndEngineNumberSearch(),
+          _buildDefaultHeight(),
+          StreamBuilder(
+            stream: _newTransferBloc.changeVehicleAndAccessoriesListStream,
+            builder: (context, snapshot) {
+              return _newTransferBloc.selectedVehicleAndAccessories == 'Vehicle'
+                  ? _buildAvailableVehicleList()
+                  : _newTransferBloc.selectedVehicleAndAccessories ==
+                          'Accessories'
+                      ? _buildAvailableAccessoriesList()
+                      : Center(
+                          child: _buildCustomTextWidget(
+                              AppConstants.selectVehicleOrAccessories),
+                        );
+            },
+          )
+        ],
+      ),
+    );
+  }
+
+  Widget _buildHeadingAndSegmentedButton() {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+      children: [
+        SizedBox(
+          width: MediaQuery.sizeOf(context).width * 0.28,
+          child: StreamBuilder(
+            stream: _newTransferBloc.selectedVehicleAndAccessoriesStream,
+            builder: (context, snapshot) {
+              return SegmentedButton(
+                multiSelectionEnabled: false,
+                segments: List.generate(
+                    _newTransferBloc.vehicleAndAccessoriesList.length,
+                    (index) => ButtonSegment(
+                        value:
+                            _newTransferBloc.vehicleAndAccessoriesList[index],
+                        label: Text(
+                          _newTransferBloc.vehicleAndAccessoriesList[index],
+                        ))),
+                selected: _newTransferBloc.optionsSet,
+                onSelectionChanged: (Set<String> newValue) {
+                  _newTransferBloc.optionsSet = newValue;
+                  _newTransferBloc.selectedVehicleAndAccessories =
+                      _newTransferBloc.optionsSet.first;
+                  _newTransferBloc.selectedVehicleAndAccessories ==
+                          'Accessories'
+                      ? _newTransferBloc.selectedVehicleList.clear()
+                      : null;
+                  _newTransferBloc
+                      .selectedVehicleAndAccessoriesStreamController(true);
+                  _newTransferBloc
+                      .changeVehicleAndAccessoriesListStreamController(true);
+                  _newTransferBloc
+                      .selectedVehicleAndAccessoriesListStreamController(true);
+                },
+                style: ButtonStyle(
+                  backgroundColor: _newTransferBloc
+                      .changeSegmentedColor(_appColors.segmentedButtonColor),
+                ),
+              );
+            },
+          ),
+        )
+      ],
+    );
+  }
+
+  Widget _buildVehicleNameAndEngineNumberSearch() {
+    return StreamBuilder(
+      stream: _newTransferBloc.vehicleAndEngineNumberStream,
+      builder: (context, snapshot) {
+        final bool isTextEmpty =
+            _newTransferBloc.vehicleAndEngineNumberController.text.isEmpty;
+        final IconData iconData = isTextEmpty ? Icons.search : Icons.close;
+        final Color iconColor =
+            isTextEmpty ? _appColors.primaryColor : Colors.red;
+        return TldsInputFormField(
+          width: MediaQuery.sizeOf(context).width,
+          height: 40,
+          controller: _newTransferBloc.vehicleAndEngineNumberController,
+          hintText: AppConstants.vehicleNameAndEngineNumber,
+          suffixIcon: IconButton(
+            onPressed: () {
+              isTextEmpty
+                  ? null
+                  : _newTransferBloc.vehicleAndEngineNumberController.clear();
+              _newTransferBloc.vehicleAndEngineNumberStreamController(true);
+            },
+            icon: Icon(
+              iconData,
+              color: iconColor,
+            ),
+          ),
+          onSubmit: (p0) {
+            _newTransferBloc.vehicleAndEngineNumberStreamController(true);
+          },
+        );
+      },
+    );
+  }
+
+  Widget _buildAvailableVehicleList() {
+    return Expanded(
+        child: ListView.builder(
+      itemCount: 10,
+      itemBuilder: (context, index) {
+        return Card(
+          elevation: 0,
+          shape: OutlineInputBorder(
+              borderSide: BorderSide(color: _appColors.cardBorderColor),
+              borderRadius: BorderRadius.circular(5)),
+          surfaceTintColor: _appColors.whiteColor,
+          child: Padding(
+            padding: const EdgeInsets.all(8),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                Row(
+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                  children: [
+                    _buildCustomTextWidget('TVS APACHE - 200',
+                        fontSize: 16, fontWeight: FontWeight.w500),
+                    _buildCustomTextWidget('Navy Blue',
+                        fontSize: 12, fontWeight: FontWeight.w500),
+                  ],
+                ),
+                _buildCustomTextWidget('K619163235',
+                    color: _appColors.greyColor),
+                Row(
+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                  children: [
+                    Row(
+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                      children: [
+                        _buildCustomTextWidget('DG5BR1034324',
+                            fontSize: 16, fontWeight: FontWeight.w500),
+                        AppWidgetUtils.buildSizedBox(custWidth: 12),
+                        _buildCustomTextWidget('MD26CG5BR6345',
+                            fontSize: 16, fontWeight: FontWeight.w500),
+                      ],
+                    ),
+                    Row(
+                      children: [
+                        IconButton(
+                            onPressed: () {
+                              _newTransferBloc.selectedVehicleList.add('');
+                              _newTransferBloc
+                                  .selectedVehicleListStreamController(true);
+                            },
+                            icon: SvgPicture.asset(
+                              AppConstants.icFilledAdd,
+                              height: 24,
+                              width: 24,
+                            ))
+                      ],
+                    )
+                  ],
+                )
+              ],
+            ),
+          ),
+        );
+      },
+    ));
+  }
+
+  Widget _buildAvailableAccessoriesList() {
+    return Expanded(
+        child: ListView.builder(
+      itemCount: 10,
+      itemBuilder: (context, index) {
+        return Card(
+          elevation: 0,
+          shape: OutlineInputBorder(
+              borderSide: BorderSide(color: _appColors.cardBorderColor),
+              borderRadius: BorderRadius.circular(5)),
+          surfaceTintColor: _appColors.whiteColor,
+          child: Padding(
+            padding: const EdgeInsets.all(8),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                Row(
+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                  children: [
+                    Column(
+                      crossAxisAlignment: CrossAxisAlignment.start,
+                      children: [
+                        _buildCustomTextWidget('TVS APACHE - 200',
+                            fontSize: 14, fontWeight: FontWeight.w500),
+                        _buildCustomTextWidget('Navy Blue',
+                            fontSize: 14,
+                            fontWeight: FontWeight.w500,
+                            color: _appColors.liteGrayColor),
+                      ],
+                    ),
+                    _buildCustomTextWidget('Qty - 20',
+                        fontSize: 14, fontWeight: FontWeight.w500),
+                    IconButton(
+                        onPressed: () {},
+                        icon: SvgPicture.asset(
+                          AppConstants.icFilledAdd,
+                          width: 24,
+                          height: 24,
+                        ))
+                  ],
+                ),
+              ],
+            ),
+          ),
+        );
+      },
+    ));
+  }
+
+  Widget _buildSelectedVehicle() {
+    return _buildCommonContainer(
+      color: _appColors.selectedVehicleAndAccessoriesColor,
+      Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          _buildCustomTextWidget(AppConstants.selectedVehicle,
+              color: _appColors.primaryColor,
+              fontWeight: FontWeight.w700,
+              fontSize: 19),
+          Expanded(
+              child: StreamBuilder(
+            stream: _newTransferBloc.selectedVehicleListStream,
+            builder: (context, snapshot) {
+              return ListView.builder(
+                itemCount: _newTransferBloc.selectedVehicleList.length,
+                itemBuilder: (context, index) {
+                  return _buildSelectedVehicleCard(index);
+                },
+              );
+            },
+          ))
+        ],
+      ),
+    );
+  }
+
+  Widget _buildSelectedVehicleCard(int index) {
+    return Card(
+      elevation: 0,
+      shape: OutlineInputBorder(
+          borderSide: BorderSide(color: _appColors.cardBorderColor),
+          borderRadius: BorderRadius.circular(5)),
+      surfaceTintColor: _appColors.whiteColor,
+      child: Padding(
+        padding: const EdgeInsets.all(8),
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            Row(
+              mainAxisAlignment: MainAxisAlignment.spaceBetween,
+              children: [
+                _buildCustomTextWidget('TVS APACHE - 200',
+                    fontSize: 16, fontWeight: FontWeight.w500),
+                _buildCustomTextWidget('Navy Blue',
+                    fontSize: 12, fontWeight: FontWeight.w500),
+              ],
+            ),
+            _buildCustomTextWidget('K619163235', color: _appColors.greyColor),
+            Row(
+              mainAxisAlignment: MainAxisAlignment.spaceBetween,
+              children: [
+                Row(
+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                  children: [
+                    _buildCustomTextWidget('DG5BR1034324',
+                        fontSize: 16, fontWeight: FontWeight.w500),
+                    AppWidgetUtils.buildSizedBox(custWidth: 12),
+                    _buildCustomTextWidget('MD26CG5BR6345',
+                        fontSize: 16, fontWeight: FontWeight.w500),
+                  ],
+                ),
+                Row(
+                  children: [
+                    IconButton(
+                        onPressed: () {
+                          _newTransferBloc.selectedVehicleList.removeAt(index);
+                          _newTransferBloc
+                              .selectedVehicleListStreamController(true);
+                        },
+                        icon: SvgPicture.asset(
+                          AppConstants.icFilledClose,
+                          height: 28,
+                          width: 28,
+                        ))
+                  ],
+                )
+              ],
+            )
+          ],
+        ),
+      ),
+    );
+  }
+
+  Widget _buildSelectedAccessories() {
+    return _buildCommonContainer(
+      color: _appColors.selectedVehicleAndAccessoriesColor,
+      Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          _buildCustomTextWidget(AppConstants.selectedAccessories,
+              color: _appColors.primaryColor,
+              fontWeight: FontWeight.w700,
+              fontSize: 19),
+          Expanded(
+              child: StreamBuilder(
+            stream: null,
+            builder: (context, snapshot) {
+              return ListView.builder(
+                itemCount: 2,
+                itemBuilder: (context, index) {
+                  return Card(
+                      elevation: 0,
+                      shape: OutlineInputBorder(
+                          borderSide: BorderSide(
+                              color: _appColors.cardBorderColor, width: 1)),
+                      surfaceTintColor: _appColors.whiteColor,
+                      child: Padding(
+                        padding: const EdgeInsets.all(8),
+                        child: _buildSelectedAccessoriesCardDetails(),
+                      ));
+                },
+              );
+            },
+          ))
+        ],
+      ),
+    );
+  }
+
+  Widget _buildSelectedAccessoriesCardDetails() {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+      children: [
+        Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            _buildCustomTextWidget('Tool Kit',
+                fontWeight: FontWeight.w500, fontSize: 14),
+            _buildCustomTextWidget('TK627856',
+                fontWeight: FontWeight.w500,
+                fontSize: 14,
+                color: _appColors.liteGrayColor)
+          ],
+        ),
+        StreamBuilder(
+          stream: _newTransferBloc.accessoriesIncrementStream,
+          builder: (context, snapshot) {
+            return InputQty(
+              decoration: QtyDecorationProps(
+                  constraints:
+                      const BoxConstraints(minWidth: 150, maxWidth: 150),
+                  plusBtn: IconButton(
+                      onPressed: () {
+                        setState(() {
+                          _newTransferBloc.initialValue++;
+                          _newTransferBloc
+                              .accessoriesIncrementStreamController(true);
+                        });
+                      },
+                      icon: SvgPicture.asset(
+                        AppConstants.icFilledAdd,
+                        width: 24,
+                        height: 24,
+                      )),
+                  minusBtn: IconButton(
+                      onPressed: () {
+                        setState(() {
+                          _newTransferBloc.initialValue--;
+                          _newTransferBloc
+                              .accessoriesIncrementStreamController(true);
+                        });
+                      },
+                      icon: SvgPicture.asset(
+                        AppConstants.icFilledMinus,
+                        width: 24,
+                        height: 24,
+                      )),
+                  border: OutlineInputBorder(
+                      borderSide: BorderSide(
+                          color: _appColors.liteBlueColor, width: 2.5),
+                      borderRadius: BorderRadius.circular(10))),
+              initVal: _newTransferBloc.initialValue,
+              steps: 1,
+            );
+          },
+        ),
+        IconButton(
+            onPressed: () {},
+            icon: SvgPicture.asset(AppConstants.icFilledClose))
+      ],
+    );
+  }
+
+  Widget _buildCommonContainer(Widget childWidget, {Color? color}) {
+    return Padding(
+      padding: const EdgeInsets.all(12),
+      child: Container(
+        width: MediaQuery.sizeOf(context).width * 0.30,
+        decoration: BoxDecoration(
+            border: Border.all(
+              color: _appColors.liteGrayColor,
+            ),
+            color: color,
+            borderRadius: BorderRadius.circular(10)),
+        child: Padding(padding: const EdgeInsets.all(12), child: childWidget),
+      ),
+    );
+  }
+
+  Widget _buildCustomTextWidget(String text,
+      {Color? color, FontWeight? fontWeight, double? fontSize}) {
+    return Text(
+      text,
+      style: GoogleFonts.poppins(
+          color: color, fontWeight: fontWeight, fontSize: fontSize),
+    );
+  }
+
+  Widget? _buildDefaultWidth({double? width}) {
+    return AppWidgetUtils.buildSizedBox(
+        custWidth: width ?? MediaQuery.sizeOf(context).width * 0.01);
+  }
+
+  Widget _buildDefaultHeight({double? height}) {
+    return AppWidgetUtils.buildSizedBox(
+        custHeight: height ?? MediaQuery.sizeOf(context).height * 0.02);
+  }
+}
Index: lib/view/transfer/new_transfer/tranfer_details.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/transfer/new_transfer/tranfer_details.dart b/lib/view/transfer/new_transfer/tranfer_details.dart
new file mode 100644
--- /dev/null	(date 1715767978536)
+++ b/lib/view/transfer/new_transfer/tranfer_details.dart	(date 1715767978536)
@@ -0,0 +1,206 @@
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/widgets.dart';
+import 'package:flutter_svg/flutter_svg.dart';
+import 'package:google_fonts/google_fonts.dart';
+import 'package:tlbilling/components/custom_action_button.dart';
+import 'package:tlbilling/components/custom_elevated_button.dart';
+import 'package:tlbilling/utils/app_colors.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+import 'package:tlbilling/view/transfer/new_transfer/new_transfer_bloc.dart';
+import 'package:tlds_flutter/export.dart';
+
+class TransferDetails extends StatefulWidget {
+  const TransferDetails({super.key});
+
+  @override
+  State<TransferDetails> createState() => _TransferDetailsState();
+}
+
+class _TransferDetailsState extends State<TransferDetails> {
+  final _appColors = AppColors();
+  final _transferBloc = NewTransferBlocImpl();
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+        decoration: BoxDecoration(
+            border: Border(top: BorderSide(color: _appColors.greyColor)),
+            color: _appColors.transferDetailsContainerColor),
+        width: MediaQuery.sizeOf(context).width * 0.36,
+        child: Padding(
+          padding: const EdgeInsets.all(
+            12,
+          ),
+          child: _buildTransferDetails(),
+        ));
+  }
+
+  Widget _buildTransferDetails() {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        _buildCustomTextWidget(AppConstants.transferDetails,
+            color: _appColors.primaryColor,
+            fontSize: 22,
+            fontWeight: FontWeight.w700),
+        _buildDefaultHeight(),
+        _buildSelectFromAndToBranch(),
+      ],
+    );
+  }
+
+  Widget _buildSelectFromAndToBranch() {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        _buildCustomTextWidget(AppConstants.selectFromBranchAndToBranch),
+        _buildDefaultHeight(),
+        _buildFromBranchAndToBranch(),
+        _buildDefaultHeight(),
+        _buildTransPorterDetails(),
+      ],
+    );
+  }
+
+  Widget _buildFromBranchAndToBranch() {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+      children: [
+        TldsDropDownButtonFormField(
+          height: 40,
+          width: MediaQuery.sizeOf(context).width * 0.15,
+          hintText: AppConstants.fromBranch,
+          dropDownItems: _transferBloc.branch,
+          onChange: (String? newValue) {
+            _transferBloc.selectedBranch = newValue ?? '';
+          },
+        ),
+        SvgPicture.asset(AppConstants.icSwapArrow),
+        TldsDropDownButtonFormField(
+          height: 40,
+          width: MediaQuery.sizeOf(context).width * 0.15,
+          hintText: AppConstants.toBranch,
+          dropDownItems: _transferBloc.branch,
+          onChange: (String? newValue) {
+            _transferBloc.selectedBranch = newValue ?? '';
+          },
+        ),
+      ],
+    );
+  }
+
+  Widget _buildTransPorterDetails() {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        _buildCustomTextWidget(AppConstants.transporterDetails,
+            color: _appColors.primaryColor,
+            fontWeight: FontWeight.w700,
+            fontSize: 22),
+        _buildDefaultHeight(),
+        _buildTransporterFilterAndAddNewTransporter(),
+        _buildDefaultHeight(),
+        _buildTransporterDetailsCard(),
+        _buildDefaultHeight(),
+        CustomActionButtons(onPressed: () {}, buttonText: AppConstants.save)
+      ],
+    );
+  }
+
+  Widget _buildTransporterFilterAndAddNewTransporter() {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+      children: [
+        TldsDropDownButtonFormField(
+          height: 40,
+          width: MediaQuery.sizeOf(context).width * 0.21,
+          hintText: AppConstants.selectTransporter,
+          dropDownItems: _transferBloc.branch,
+          onChange: (String? newValue) {
+            _transferBloc.selectedBranch = newValue ?? '';
+          },
+        ),
+        CustomElevatedButton(
+          height: 40,
+          width: MediaQuery.sizeOf(context).width * 0.12,
+          text: AppConstants.addNew,
+          fontSize: 16,
+          buttonBackgroundColor: _appColors.primaryColor,
+          fontColor: _appColors.whiteColor,
+          suffixIcon: SvgPicture.asset(AppConstants.icHumanAdd),
+        )
+      ],
+    );
+  }
+
+  Widget _buildTransporterDetailsCard() {
+    return Card(
+        elevation: 0,
+        shape: OutlineInputBorder(
+          borderRadius: BorderRadius.circular(5),
+          borderSide: BorderSide(
+              color: _appColors.transferDetailsContainerColor, width: 1),
+        ),
+        surfaceTintColor: _appColors.whiteColor,
+        child: Padding(
+          padding: const EdgeInsets.all(12),
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              _buildCustomTextWidget('AK Logistics Private Limited.',
+                  color: _appColors.primaryColor,
+                  fontSize: 22,
+                  fontWeight: FontWeight.w400),
+              _buildDefaultHeight(
+                  height: MediaQuery.sizeOf(context).width * 0.020),
+              Row(
+                mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                children: [
+                  Row(
+                    children: [
+                      SvgPicture.asset(AppConstants.icCall),
+                      AppWidgetUtils.buildSizedBox(custWidth: 10),
+                      _buildCustomTextWidget('+91 9876543210', fontSize: 14),
+                    ],
+                  ),
+                  Row(
+                    children: [
+                      SvgPicture.asset(AppConstants.icMail),
+                      AppWidgetUtils.buildSizedBox(custWidth: 10),
+                      _buildCustomTextWidget('ajith@techlambdas.com',
+                          fontSize: 14),
+                    ],
+                  )
+                ],
+              ),
+              _buildDefaultHeight(
+                  height: MediaQuery.sizeOf(context).width * 0.020),
+              TldsInputFormField(
+                  controller: _transferBloc.transporterVehicleNumberController,
+              width: MediaQuery.sizeOf(context).width,
+              hintText: AppConstants.vehicleNumber,)
+            ],
+          ),
+        ));
+  }
+
+  Widget _buildCustomTextWidget(String text,
+      {Color? color, FontWeight? fontWeight, double? fontSize}) {
+    return Text(
+      text,
+      style: GoogleFonts.nunitoSans(
+          color: color, fontWeight: fontWeight, fontSize: fontSize),
+    );
+  }
+
+  Widget? _buildDefaultWidth({double? width}) {
+    return AppWidgetUtils.buildSizedBox(
+        custWidth: width ?? MediaQuery.sizeOf(context).width * 0.01);
+  }
+
+  Widget _buildDefaultHeight({double? height}) {
+    return AppWidgetUtils.buildSizedBox(
+        custHeight: height ?? MediaQuery.sizeOf(context).height * 0.02);
+  }
+}
Index: assets/icons/ic_date.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assets/icons/ic_date.svg b/assets/icons/ic_date.svg
new file mode 100644
--- /dev/null	(date 1714219904926)
+++ b/assets/icons/ic_date.svg	(date 1714219904926)
@@ -0,0 +1,3 @@
+<svg width="24" height="23" viewBox="0 0 24 23" fill="none" xmlns="http://www.w3.org/2000/svg">
+<path fill-rule="evenodd" clip-rule="evenodd" d="M19.0496 16.6241C19.0496 17.7352 18.1529 18.6319 17.0418 18.6319H7.04635C5.93528 18.6319 5.03857 17.7352 5.03857 16.6241V6.62866C5.03857 5.51759 5.93528 4.62089 7.04635 4.62089H9.24187V3.92734C9.243 3.7625 9.30109 3.60312 9.4063 3.47621C9.5115 3.3493 9.65735 3.26267 9.81912 3.231L9.94242 3.21979C10.3291 3.21979 10.643 3.51962 10.643 3.92734V4.62089H13.4452V3.92734C13.4463 3.7625 13.5044 3.60312 13.6096 3.47621C13.7148 3.3493 13.8606 3.26267 14.0224 3.231L14.1457 3.21979C14.5324 3.21979 14.8463 3.51962 14.8463 3.92734V4.62089H17.0418C18.1529 4.62089 19.0496 5.51759 19.0496 6.62866V16.6241ZM6.43967 8.82418V16.292C6.43967 16.8104 6.86 17.2308 7.37841 17.2308H16.7097C17.2281 17.2308 17.6485 16.8104 17.6485 16.292V8.82418H6.43967ZM8.54132 14.4286C8.88459 14.4286 9.17182 14.685 9.23066 15.0058L9.24187 15.1291C9.24187 15.4724 8.98547 15.7596 8.66462 15.8185L8.54132 15.8297C8.35609 15.8279 8.17896 15.7535 8.04798 15.6225C7.91699 15.4915 7.8426 15.3144 7.84077 15.1291C7.84077 14.7859 8.09717 14.4986 8.41803 14.4398L8.54132 14.4286ZM12.0441 14.4286C12.3873 14.4286 12.6746 14.685 12.7334 15.0058L12.7446 15.1291C12.7446 15.4724 12.4882 15.7596 12.1674 15.8185L12.0441 15.8297C11.8588 15.8279 11.6817 15.7535 11.5507 15.6225C11.4197 15.4915 11.3453 15.3144 11.3435 15.1291C11.3435 14.7859 11.5999 14.4986 11.9208 14.4398L12.0441 14.4286ZM15.5468 14.4286C15.8901 14.4286 16.1773 14.685 16.2362 15.0058L16.2474 15.1291C16.2474 15.4724 15.991 15.7596 15.6701 15.8185L15.5468 15.8297C15.3616 15.8279 15.1845 15.7535 15.0535 15.6225C14.9225 15.4915 14.8481 15.3144 14.8463 15.1291C14.8463 14.7859 15.1027 14.4986 15.4235 14.4398L15.5468 14.4286ZM8.54132 12.3269C8.88459 12.3269 9.17182 12.5833 9.23066 12.9042L9.24187 13.0275C9.24187 13.3707 8.98547 13.658 8.66462 13.7168L8.54132 13.728C8.35609 13.7262 8.17896 13.6518 8.04798 13.5208C7.91699 13.3898 7.8426 13.2127 7.84077 13.0275C7.84077 12.6842 8.09717 12.397 8.41803 12.3381L8.54132 12.3269ZM12.0441 12.3269C12.3873 12.3269 12.6746 12.5833 12.7334 12.9042L12.7446 13.0275C12.7446 13.3707 12.4882 13.658 12.1674 13.7168L12.0441 13.728C11.8588 13.7262 11.6817 13.6518 11.5507 13.5208C11.4197 13.3898 11.3453 13.2127 11.3435 13.0275C11.3435 12.6842 11.5999 12.397 11.9208 12.3381L12.0441 12.3269ZM15.5468 12.3269C15.8901 12.3269 16.1773 12.5833 16.2362 12.9042L16.2474 13.0275C16.2474 13.3707 15.991 13.658 15.6701 13.7168L15.5468 13.728C15.3616 13.7262 15.1845 13.6518 15.0535 13.5208C14.9225 13.3898 14.8481 13.2127 14.8463 13.0275C14.8463 12.6842 15.1027 12.397 15.4235 12.3381L15.5468 12.3269ZM8.54132 10.2253C8.88459 10.2253 9.17182 10.4817 9.23066 10.8025L9.24187 10.9258C9.24187 11.2691 8.98547 11.5563 8.66462 11.6152L8.54132 11.6264C8.35609 11.6246 8.17896 11.5502 8.04798 11.4192C7.91699 11.2882 7.8426 11.1111 7.84077 10.9258C7.84077 10.5826 8.09717 10.2953 8.41803 10.2365L8.54132 10.2253ZM12.0441 10.2253C12.3873 10.2253 12.6746 10.4817 12.7334 10.8025L12.7446 10.9258C12.7446 11.2691 12.4882 11.5563 12.1674 11.6152L12.0441 11.6264C11.8588 11.6246 11.6817 11.5502 11.5507 11.4192C11.4197 11.2882 11.3453 11.1111 11.3435 10.9258C11.3435 10.5826 11.5999 10.2953 11.9208 10.2365L12.0441 10.2253ZM15.5468 10.2253C15.8901 10.2253 16.1773 10.4817 16.2362 10.8025L16.2474 10.9258C16.2474 11.2691 15.991 11.5563 15.6701 11.6152L15.5468 11.6264C15.3616 11.6246 15.1845 11.5502 15.0535 11.4192C14.9225 11.2882 14.8481 11.1111 14.8463 10.9258C14.8463 10.5826 15.1027 10.2953 15.4235 10.2365L15.5468 10.2253ZM6.43967 7.42308H17.6485V6.96072C17.6485 6.44232 17.2281 6.02199 16.7097 6.02199H7.37841C6.86 6.02199 6.43967 6.44232 6.43967 6.96072V7.42308Z" fill="#718EBF"/>
+</svg>
Index: build/flutter_assets/AssetManifest.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"assets/icons/ic_add.svg\":[\"assets/icons/ic_add.svg\"],\"assets/icons/ic_camera.svg\":[\"assets/icons/ic_camera.svg\"],\"assets/icons/ic_customer.svg\":[\"assets/icons/ic_customer.svg\"],\"assets/icons/ic_dashboard.svg\":[\"assets/icons/ic_dashboard.svg\"],\"assets/icons/ic_down_arrow.svg\":[\"assets/icons/ic_down_arrow.svg\"],\"assets/icons/ic_edit.svg\":[\"assets/icons/ic_edit.svg\"],\"assets/icons/ic_forenquiry_login.svg\":[\"assets/icons/ic_forenquiry_login.svg\"],\"assets/icons/ic_logout.svg\":[\"assets/icons/ic_logout.svg\"],\"assets/icons/ic_purchase.svg\":[\"assets/icons/ic_purchase.svg\"],\"assets/icons/ic_report.svg\":[\"assets/icons/ic_report.svg\"],\"assets/icons/ic_sales.svg\":[\"assets/icons/ic_sales.svg\"],\"assets/icons/ic_search.svg\":[\"assets/icons/ic_search.svg\"],\"assets/icons/ic_slock.svg\":[\"assets/icons/ic_slock.svg\"],\"assets/icons/ic_techlambdas_logo.svg\":[\"assets/icons/ic_techlambdas_logo.svg\"],\"assets/icons/ic_transfer.svg\":[\"assets/icons/ic_transfer.svg\"],\"assets/icons/ic_transport.svg\":[\"assets/icons/ic_transport.svg\"],\"assets/icons/ic_vendor.svg\":[\"assets/icons/ic_vendor.svg\"],\"assets/images/img_nodata.svg\":[\"assets/images/img_nodata.svg\"],\"assets/images/img_tvs.png\":[\"assets/images/img_tvs.png\"],\"packages/cupertino_icons/assets/CupertinoIcons.ttf\":[\"packages/cupertino_icons/assets/CupertinoIcons.ttf\"]}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build/flutter_assets/AssetManifest.json b/build/flutter_assets/AssetManifest.json
--- a/build/flutter_assets/AssetManifest.json	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/build/flutter_assets/AssetManifest.json	(date 1715852887785)
@@ -1,1 +1,1 @@
-{"assets/icons/ic_add.svg":["assets/icons/ic_add.svg"],"assets/icons/ic_camera.svg":["assets/icons/ic_camera.svg"],"assets/icons/ic_customer.svg":["assets/icons/ic_customer.svg"],"assets/icons/ic_dashboard.svg":["assets/icons/ic_dashboard.svg"],"assets/icons/ic_down_arrow.svg":["assets/icons/ic_down_arrow.svg"],"assets/icons/ic_edit.svg":["assets/icons/ic_edit.svg"],"assets/icons/ic_forenquiry_login.svg":["assets/icons/ic_forenquiry_login.svg"],"assets/icons/ic_logout.svg":["assets/icons/ic_logout.svg"],"assets/icons/ic_purchase.svg":["assets/icons/ic_purchase.svg"],"assets/icons/ic_report.svg":["assets/icons/ic_report.svg"],"assets/icons/ic_sales.svg":["assets/icons/ic_sales.svg"],"assets/icons/ic_search.svg":["assets/icons/ic_search.svg"],"assets/icons/ic_slock.svg":["assets/icons/ic_slock.svg"],"assets/icons/ic_techlambdas_logo.svg":["assets/icons/ic_techlambdas_logo.svg"],"assets/icons/ic_transfer.svg":["assets/icons/ic_transfer.svg"],"assets/icons/ic_transport.svg":["assets/icons/ic_transport.svg"],"assets/icons/ic_vendor.svg":["assets/icons/ic_vendor.svg"],"assets/images/img_nodata.svg":["assets/images/img_nodata.svg"],"assets/images/img_tvs.png":["assets/images/img_tvs.png"],"packages/cupertino_icons/assets/CupertinoIcons.ttf":["packages/cupertino_icons/assets/CupertinoIcons.ttf"]}
\ No newline at end of file
+{"assets/fonts/OFL.txt":["assets/fonts/OFL.txt"],"assets/fonts/Poppins-Black.ttf":["assets/fonts/Poppins-Black.ttf"],"assets/fonts/Poppins-BlackItalic.ttf":["assets/fonts/Poppins-BlackItalic.ttf"],"assets/fonts/Poppins-Bold.ttf":["assets/fonts/Poppins-Bold.ttf"],"assets/fonts/Poppins-BoldItalic.ttf":["assets/fonts/Poppins-BoldItalic.ttf"],"assets/fonts/Poppins-ExtraBold.ttf":["assets/fonts/Poppins-ExtraBold.ttf"],"assets/fonts/Poppins-ExtraBoldItalic.ttf":["assets/fonts/Poppins-ExtraBoldItalic.ttf"],"assets/fonts/Poppins-ExtraLight.ttf":["assets/fonts/Poppins-ExtraLight.ttf"],"assets/fonts/Poppins-ExtraLightItalic.ttf":["assets/fonts/Poppins-ExtraLightItalic.ttf"],"assets/fonts/Poppins-Italic.ttf":["assets/fonts/Poppins-Italic.ttf"],"assets/fonts/Poppins-Light.ttf":["assets/fonts/Poppins-Light.ttf"],"assets/fonts/Poppins-LightItalic.ttf":["assets/fonts/Poppins-LightItalic.ttf"],"assets/fonts/Poppins-Medium.ttf":["assets/fonts/Poppins-Medium.ttf"],"assets/fonts/Poppins-MediumItalic.ttf":["assets/fonts/Poppins-MediumItalic.ttf"],"assets/fonts/Poppins-Regular.ttf":["assets/fonts/Poppins-Regular.ttf"],"assets/fonts/Poppins-SemiBold.ttf":["assets/fonts/Poppins-SemiBold.ttf"],"assets/fonts/Poppins-SemiBoldItalic.ttf":["assets/fonts/Poppins-SemiBoldItalic.ttf"],"assets/fonts/Poppins-Thin.ttf":["assets/fonts/Poppins-Thin.ttf"],"assets/fonts/Poppins-ThinItalic.ttf":["assets/fonts/Poppins-ThinItalic.ttf"],"assets/icons/ic_add.svg":["assets/icons/ic_add.svg"],"assets/icons/ic_call.svg":["assets/icons/ic_call.svg"],"assets/icons/ic_camera.svg":["assets/icons/ic_camera.svg"],"assets/icons/ic_customer.svg":["assets/icons/ic_customer.svg"],"assets/icons/ic_dashboard.svg":["assets/icons/ic_dashboard.svg"],"assets/icons/ic_date.svg":["assets/icons/ic_date.svg"],"assets/icons/ic_down_arrow.svg":["assets/icons/ic_down_arrow.svg"],"assets/icons/ic_edit.svg":["assets/icons/ic_edit.svg"],"assets/icons/ic_filled_add.svg":["assets/icons/ic_filled_add.svg"],"assets/icons/ic_filled_close.svg":["assets/icons/ic_filled_close.svg"],"assets/icons/ic_filled_minus.svg":["assets/icons/ic_filled_minus.svg"],"assets/icons/ic_forenquiry_login.svg":["assets/icons/ic_forenquiry_login.svg"],"assets/icons/ic_human_add.svg":["assets/icons/ic_human_add.svg"],"assets/icons/ic_logout.svg":["assets/icons/ic_logout.svg"],"assets/icons/ic_mail.svg":["assets/icons/ic_mail.svg"],"assets/icons/ic_more.svg":["assets/icons/ic_more.svg"],"assets/icons/ic_purchase.svg":["assets/icons/ic_purchase.svg"],"assets/icons/ic_report.svg":["assets/icons/ic_report.svg"],"assets/icons/ic_sales.svg":["assets/icons/ic_sales.svg"],"assets/icons/ic_search.svg":["assets/icons/ic_search.svg"],"assets/icons/ic_slock.svg":["assets/icons/ic_slock.svg"],"assets/icons/ic_swap_arrow.svg":["assets/icons/ic_swap_arrow.svg"],"assets/icons/ic_techlambdas_logo.svg":["assets/icons/ic_techlambdas_logo.svg"],"assets/icons/ic_transfer.svg":["assets/icons/ic_transfer.svg"],"assets/icons/ic_transport.svg":["assets/icons/ic_transport.svg"],"assets/icons/ic_vendor.svg":["assets/icons/ic_vendor.svg"],"assets/images/img_nodata.svg":["assets/images/img_nodata.svg"],"assets/images/img_tvs.png":["assets/images/img_tvs.png"],"packages/cupertino_icons/assets/CupertinoIcons.ttf":["packages/cupertino_icons/assets/CupertinoIcons.ttf"]}
\ No newline at end of file
Index: lib/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories.dart b/lib/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories.dart
new file mode 100644
--- /dev/null	(date 1715855605370)
+++ b/lib/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories.dart	(date 1715855605370)
@@ -0,0 +1,351 @@
+import 'package:flutter/material.dart';
+import 'package:flutter_svg/svg.dart';
+import 'package:google_fonts/google_fonts.dart';
+import 'package:tlbilling/components/custom_elevated_button.dart';
+import 'package:tlbilling/utils/app_colors.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+import 'package:tlbilling/utils/app_utils.dart';
+import 'package:tlbilling/view/purchase/add_purchase/add_vehicle_and_accesories/accessories_purchase_details.dart';
+import 'package:tlbilling/view/purchase/add_purchase/add_vehicle_and_accesories/add_vehicle_and_accessories_bloc.dart';
+import 'package:tlbilling/view/purchase/add_purchase/add_vehicle_and_accesories/vehicle_purchase_details.dart';
+import 'package:tlds_flutter/export.dart';
+
+class AddVehicleAndAccessories extends StatefulWidget {
+  const AddVehicleAndAccessories({super.key});
+
+  @override
+  State<AddVehicleAndAccessories> createState() =>
+      _AddVehicleAndAccessoriesState();
+}
+
+class _AddVehicleAndAccessoriesState extends State<AddVehicleAndAccessories> {
+  final _appColors = AppColors();
+  final _addVehicleAndAccessoriesBloc = AddVehicleAndAccessoriesBlocImpl();
+  final List<String> _options = ['GST %', 'ISGST %'];
+  final List<String> vehicleAndAccessories = ['Vehicle', 'Accessories'];
+  String? _selectedOption;
+
+  @override
+  void initState() {
+    super.initState();
+    _addVehicleAndAccessoriesBloc.selectedPurchaseType = 'Vehicle';
+    _addVehicleAndAccessoriesBloc.selectedPurchaseTypeStreamController(true);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+        width: MediaQuery.sizeOf(context).width * 0.36,
+        decoration: BoxDecoration(
+            border: Border(
+          top: BorderSide(color: _appColors.greyColor),
+        )),
+        child: SingleChildScrollView(
+          scrollDirection: Axis.vertical,
+          child: Column(
+            children: [
+              _buildVendorDetails(),
+              _buildVehicleAndAccessoriesDetails()
+            ],
+          ),
+        ));
+  }
+
+  Widget _buildVendorDetails() {
+    return Container(
+        width: MediaQuery.sizeOf(context).width * 0.36,
+        decoration: BoxDecoration(
+            border: Border(bottom: BorderSide(color: _appColors.greyColor))),
+        child: Padding(
+          padding: const EdgeInsets.all(12),
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              _buildCustomTextWidget(
+                AppConstants.vendorDetails,
+                fontSize: 20,
+                color: _appColors.primaryColor,
+              ),
+              _buildDefaultHeight(),
+              _buildSelectVendorDropDownAndAddNewButton(),
+              _buildDefaultHeight(),
+              _buildInvoiceDateAndNumber(),
+              _buildDefaultHeight(),
+              _buildPurchaseRefGstAndIGST(),
+              _buildDefaultHeight(),
+              _buildCarrierAndCarrierNumber()
+            ],
+          ),
+        ));
+  }
+
+  Widget _buildSelectVendorDropDownAndAddNewButton() {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+      children: [
+        TldsDropDownButtonFormField(
+          height: 40,
+          width: MediaQuery.sizeOf(context).width * 0.22,
+          hintText: AppConstants.selectVendor,
+          dropDownItems: _addVehicleAndAccessoriesBloc.selectVendor,
+          onChange: (String? newValue) {
+            _addVehicleAndAccessoriesBloc.vendorDropDownValue = newValue ?? '';
+          },
+        ),
+        _buildDefaultWidth(),
+        Expanded(
+            child: CustomElevatedButton(
+          fontColor: _appColors.whiteColor,
+          buttonBackgroundColor: _appColors.primaryColor,
+          suffixIcon: SvgPicture.asset(AppConstants.icHumanAdd),
+          height: 40,
+          text: AppConstants.addNew,
+          fontSize: 14,
+        )),
+      ],
+    );
+  }
+
+  Widget _buildInvoiceDateAndNumber() {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+      children: [
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.invoiceNo,
+                hintText: AppConstants.invoiceNo,
+                controller:
+                    _addVehicleAndAccessoriesBloc.invoiceNumberController)),
+        _buildDefaultWidth(),
+        Expanded(
+          child: TldsInputFormField(
+            controller: _addVehicleAndAccessoriesBloc.invoiceDateController,
+            requiredLabelText: const Text(AppConstants.invoiceDate),
+            width: 246.43,
+            height: 40,
+            hintText: 'dd/mm/yyyy',
+            suffixIcon: IconButton(
+                onPressed: () => _selectDate(context,
+                    _addVehicleAndAccessoriesBloc.invoiceDateController),
+                icon: SvgPicture.asset(AppConstants.icDate)),
+            validator: (value) {
+              if (value == null || value.isEmpty) {
+                return 'Enter Appointment Date';
+              }
+              return null;
+            },
+            onTap: () => _selectDate(
+                context, _addVehicleAndAccessoriesBloc.invoiceDateController),
+          ),
+        ),
+      ],
+    );
+  }
+
+  Future<void> _selectDate(
+      BuildContext context, TextEditingController date) async {
+    final DateTime? picked = await showDatePicker(
+      context: context,
+      initialDate: date.text.isEmpty
+          ? DateTime.now()
+          : AppUtils.appStringToDateTime(date.text),
+      firstDate: DateTime(0001, 01, 01),
+      lastDate: DateTime(9999, 12, 31),
+    );
+    if (picked != null) {
+      final formattedDate = AppUtils.apiToAppDateFormat(picked.toString());
+      _addVehicleAndAccessoriesBloc.invoiceDateController.text = formattedDate;
+    }
+  }
+
+  Future<void> _selectTime(
+      BuildContext context, TextEditingController timeController) async {
+    final TimeOfDay? pickedTime = await showTimePicker(
+      context: context,
+      initialTime: TimeOfDay.now(),
+      builder: (BuildContext context, Widget? child) {
+        return MediaQuery(
+          data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),
+          child: child!,
+        );
+      },
+    );
+
+    if (pickedTime != null) {
+      final formattedTime = pickedTime.format(context);
+      timeController.text = formattedTime;
+    }
+  }
+
+  Widget _buildPurchaseRefGstAndIGST() {
+    return Container(
+      child: Row(
+        crossAxisAlignment: CrossAxisAlignment.end,
+        children: [
+          Expanded(
+              child: TldsInputFormField(
+                  height: 40,
+                  labelText: AppConstants.purchaseRef,
+                  hintText: AppConstants.purchaseOrderRef,
+                  controller:
+                      _addVehicleAndAccessoriesBloc.purchaseRefController)),
+          Row(
+            children: _options.map((option) {
+              return Padding(
+                padding: EdgeInsets.all(8),
+                child: Container(
+                  child: Row(
+                    children: [
+                      Radio(
+                        value: option,
+                        groupValue: _selectedOption,
+                        onChanged: (String? value) {
+                          setState(() {
+                            _selectedOption = value;
+                          });
+                        },
+                      ),
+                      Text(option),
+                    ],
+                  ),
+                ),
+              );
+            }).toList(),
+          ),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildCarrierAndCarrierNumber() {
+    return Row(
+      children: [
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.carrier,
+                hintText: AppConstants.name,
+                controller: _addVehicleAndAccessoriesBloc.carrierController)),
+        _buildDefaultWidth(),
+        Expanded(
+            child: TldsInputFormField(
+                height: 40,
+                labelText: AppConstants.carrierNumber,
+                hintText: AppConstants.carrierNumber,
+                controller:
+                    _addVehicleAndAccessoriesBloc.carrierNumberController)),
+      ],
+    );
+  }
+
+  Widget _buildVehicleAndAccessoriesDetails() {
+    return SizedBox(
+      width: MediaQuery.sizeOf(context).width * 0.36,
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          Padding(padding: const EdgeInsets.symmetric(horizontal: 12),
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              _buildDefaultHeight(),
+            StreamBuilder(
+              stream: _addVehicleAndAccessoriesBloc.selectedPurchaseTypeStream,
+              builder: (context, snapshot) {
+                return _addVehicleAndAccessoriesBloc.selectedPurchaseType ==
+                    'Vehicle'
+                    ? _buildCustomTextWidget(
+                  AppConstants.vehicleDetails,
+                  fontSize: 20,
+                  color: _appColors.primaryColor,
+                )
+                    : _buildCustomTextWidget(
+                  AppConstants.accessoriesDetails,
+                  fontSize: 20,
+                  color: _appColors.primaryColor,
+                );
+              },
+            ),
+            _buildDefaultHeight(),
+            _buildVehicleAccessoriesSegmentedButton(),
+          ],),),
+          _buildDefaultHeight(),
+          StreamBuilder(
+            stream: _addVehicleAndAccessoriesBloc.selectedPurchaseTypeStream,
+            builder: (context, snapshot) {
+              if (_addVehicleAndAccessoriesBloc.selectedPurchaseType ==
+                  'Vehicle') {
+                return const VehiclePurchaseDetails();
+              } else if (_addVehicleAndAccessoriesBloc.selectedPurchaseType ==
+                  'Accessories') {
+                return const AccessoriesPurchaseDetails();
+              }
+              return Container();
+            },
+          ),
+          Padding(padding: const EdgeInsets.all(12),
+          child: _buildAddToTableButton(),)
+        ],
+      )
+    );
+  }
+
+  Widget _buildVehicleAccessoriesSegmentedButton() {
+    return SizedBox(
+      width: MediaQuery.sizeOf(context).width,
+      child: SegmentedButton(
+        multiSelectionEnabled: false,
+        segments: List.generate(
+            vehicleAndAccessories.length,
+            (index) => ButtonSegment(
+                value: vehicleAndAccessories[index],
+                label: Text(
+                  vehicleAndAccessories[index],
+                ))),
+        selected: _addVehicleAndAccessoriesBloc.optionsSet,
+        onSelectionChanged: (Set<String> newValue) {
+          setState(() {
+            _addVehicleAndAccessoriesBloc.optionsSet = newValue;
+            _addVehicleAndAccessoriesBloc.selectedPurchaseType =
+                _addVehicleAndAccessoriesBloc.optionsSet.first;
+            _addVehicleAndAccessoriesBloc
+                .selectedPurchaseTypeStreamController(true);
+          });
+        },
+        style: ButtonStyle(
+          backgroundColor: _addVehicleAndAccessoriesBloc
+              .changeSegmentedColor(_appColors.segmentedButtonColor),
+        ),
+      ),
+    );
+  }
+
+  Widget _buildAddToTableButton() {
+    return CustomElevatedButton(
+        suffixIcon: SvgPicture.asset(AppConstants.icAdd),
+        buttonBackgroundColor: _appColors.primaryColor,
+        fontColor: _appColors.whiteColor,
+        text: AppConstants.addToTable,
+        fontSize: 16);
+  }
+
+  Widget _buildDefaultWidth() {
+    return AppWidgetUtils.buildSizedBox(
+        custWidth: MediaQuery.sizeOf(context).width * 0.01);
+  }
+
+  Widget _buildDefaultHeight() {
+    return AppWidgetUtils.buildSizedBox(
+        custHeight: MediaQuery.sizeOf(context).height * 0.02);
+  }
+
+  Widget _buildCustomTextWidget(String text,
+      {Color? color, double? fontSize, FontWeight? fontWeight}) {
+    return Text(
+      text,
+      style: GoogleFonts.poppins(
+          color: color, fontWeight: fontWeight, fontSize: fontSize),
+    );
+  }
+}
Index: lib/utils/app_constants.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class AppConstants {\r\n  static const companyHeaderName = 'TechLambdas';\r\n  static const forEnquiry = 'For Enquiry';\r\n  static const companyNumber = '+91 4632212477';\r\n  static const filter = 'Filters';\r\n  static const no = 'No';\r\n  static const yes = 'Yes';\r\n  static const cancel = 'Cancel';\r\n\r\n//LoginPage\r\n\r\n  static const loginheader = 'Login to your account';\r\n  static const mobileNumberLable = 'Mobile Number';\r\n  static const passwordLable = 'Password';\r\n  static const loginButtonLable = 'Login';\r\n  static const logOut = 'Log Out';\r\n\r\n  static const mobileNumberHint = 'Enter your mobile number';\r\n  static const passwordHint = 'Enter your password';\r\n\r\n  //validation\r\n  static const mobileNumberErrorText = 'Please Enter mobile number';\r\n  static const gstNumberErrorText = 'Please Enter GST number';\r\n\r\n  static const nameValidationErrorText = 'Please enter name correctly';\r\n  static const nameValidationText = 'Please enter name';\r\n  static const mailValidationText = 'Please enter mail';\r\n  static const mailValidationErrorText = 'Please enter mail correctly';\r\n  static const ageValidationText = 'Please enter age';\r\n  static const genderValidationText = 'Please select gender';\r\n  static const treatmentTypeValidationText = 'Please select treatmentType';\r\n  static const cityValidationText = 'Please enter city';\r\n  static const addressValidationText = 'Please enter address';\r\n  static const passwordErrorText = 'Please Enter password';\r\n  static const accountNoErrorText = 'Please Enter Account Number';\r\n  static const dateValidation = 'Enter Appointment Date';\r\n  static const timeValidation = 'Enter Appointment Time';\r\n  static const aadharValidation = 'Please Enter Aadhar';\r\n  static const gstDigitErrorText = 'Please enter a 15-digit Digit number';\r\n  static const aadharDigitErrorText = 'Please enter a 16-digit mobile number';\r\n  static const mobileNumberDigitErrorText =\r\n      'Please enter a 10-digit mobile number';\r\n\r\n  //icons\r\n  static const icEnquiry = 'assets/icons/ic_forenquiry_login.svg';\r\n  static const icDownArrow = 'assets/icons/ic_down_arrow.svg';\r\n  static const icCompanyLogo = 'assets/icons/ic_techlambdas_logo.svg';\r\n  static const icPurchase = 'assets/icons/ic_purchase.svg';\r\n  static const icStocks = 'assets/icons/ic_slock.svg';\r\n  static const icCustomers = 'assets/icons/ic_customer.svg';\r\n  static const icSales = 'assets/icons/ic_sales.svg';\r\n  static const icTransfer = 'assets/icons/ic_transfer.svg';\r\n  static const icLogout = 'assets/icons/ic_logout.svg';\r\n  static const icSearch = 'assets/icons/ic_search.svg';\r\n  static const icAdd = 'assets/icons/ic_add.svg';\r\n  static const icCamera = 'assets/icons/ic_camera.svg';\r\n  static const icEdit = 'assets/icons/ic_edit.svg';\r\n  static const icVendor = 'assets/icons/ic_vendor.svg';\r\n  static const icTransport = 'assets/icons/ic_transport.svg';\r\n  static const icReport = 'assets/icons/ic_report.svg';\r\n  static const icdashBoard = 'assets/icons/ic_dashboard.svg';\r\n\r\n  //images\r\n  static const imgNoData = 'assets/images/img_nodata.svg';\r\n  static const imgLoginPagebg = 'assets/images/img_tvs.png';\r\n\r\n  //SideMenu\r\n  static const purchase = 'Purchase';\r\n  static const stocks = 'Stocks';\r\n  static const transfer = 'Transfer';\r\n  static const customer = 'Customer';\r\n  static const sales = 'Sales';\r\n  static const logout = 'Logout';\r\n  static const vendor = 'Vendor';\r\n  static const transport = 'Transport';\r\n  static const reports = 'Reports';\r\n\r\n  static const employee = 'Employee';\r\n\r\n  //Customer\r\n\r\n  static const addCustomer = 'Add Customer';\r\n  static const noDataStore = 'No more data to show';\r\n  static const name = 'Name';\r\n  static const mobileNumber = 'Mobile Number';\r\n  static const mailid = 'Mail Id';\r\n  static const panNo = 'Pan Number';\r\n  static const aadharNo = 'Aadhar Number';\r\n  static const city = 'City';\r\n  static const address = 'Address';\r\n  static const uploadCustomerPhoto = 'Upload Customer Photo';\r\n  static const customerName = 'Customer Name';\r\n  static const sno = 'S.No';\r\n  static const action = 'Action';\r\n\r\n  //vendor\r\n\r\n  static const addVendor = 'Add Vendor';\r\n  static const gstNo = 'GST IN';\r\n  static const fax = 'Fax Number';\r\n  static const exGst = 'Ex. GSTIN26523';\r\n  static const exPan = 'Ex. 86452657';\r\n\r\n  static const vendorName = 'Vendor Name';\r\n  static const telephoneNumber = 'Telephone Number';\r\n\r\n  static const dashboard = 'Dashboard';\r\n\r\n  //transport\r\n\r\n  static const addTransport = 'Add Transport';\r\n  static const transportName = 'Transport Name';\r\n\r\n  //employee\r\n\r\n  static const addEmployee = 'Add Employee';\r\n  static const addNew = 'Add New';\r\n  static const empName = 'Employee Name';\r\n  static const allCity = 'All City';\r\n  static const allWorkType = 'All Work Type';\r\n  static const allBranch = 'All Branch';\r\n  static const workType = 'Work Type';\r\n  static const branchName = 'Branch name';\r\n  static const empFilterHint = 'Employee Name / Mobile Number';\r\n\r\n  static const empType = 'Employee Type';\r\n  static const branch = 'branch';\r\n  static const age = 'Age';\r\n  static const gender = 'gender';\r\n\r\n  static const typeHere = 'Type Here';\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/utils/app_constants.dart b/lib/utils/app_constants.dart
--- a/lib/utils/app_constants.dart	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/lib/utils/app_constants.dart	(date 1715846955520)
@@ -6,6 +6,7 @@
   static const no = 'No';
   static const yes = 'Yes';
   static const cancel = 'Cancel';
+  static const save = 'Save';
 
 //LoginPage
 
@@ -55,10 +56,22 @@
   static const icAdd = 'assets/icons/ic_add.svg';
   static const icCamera = 'assets/icons/ic_camera.svg';
   static const icEdit = 'assets/icons/ic_edit.svg';
+  static const icMore = 'assets/icons/ic_more.svg';
   static const icVendor = 'assets/icons/ic_vendor.svg';
   static const icTransport = 'assets/icons/ic_transport.svg';
   static const icReport = 'assets/icons/ic_report.svg';
   static const icdashBoard = 'assets/icons/ic_dashboard.svg';
+  static const icDate = 'assets/icons/ic_date.svg';
+  static const icFilledAdd = 'assets/icons/ic_filled_add.svg';
+  static const icFilledMinus = 'assets/icons/ic_filled_minus.svg';
+  static const icFilledClose = 'assets/icons/ic_filled_close.svg';
+  static const icSwapArrow = 'assets/icons/ic_swap_arrow.svg';
+  static const icHumanAdd = 'assets/icons/ic_human_add.svg';
+  static const icMail = 'assets/icons/ic_mail.svg';
+  static const icCall = 'assets/icons/ic_call.svg';
+
+  //fonts
+  static const poppinsRegular = 'assets/fonts/Poppins-Regular.ttf';
 
   //images
   static const imgNoData = 'assets/images/img_nodata.svg';
@@ -129,4 +142,56 @@
   static const gender = 'gender';
 
   static const typeHere = 'Type Here';
+
+  //purchase
+  static const invoiceNo = 'Invoice No';
+  static const invoiceDate = 'Invoice Date';
+  static const partNo = 'Part No';
+  static const vehicle = 'Vehicle';
+  static const engineNumber = 'Engine Number';
+  static const frameNumber = 'Frame Number';
+  static const vehicleName = 'Vehicle Name';
+  static const vehicleDescription = 'Vehicle Description';
+  static const vehicleDetails = 'Vehicle Details';
+  static const hsnCode = 'HSN Code';
+  static const addPurchase = 'Add Purchase';
+  static const accessories = 'Accessories';
+  static const quantity = 'Qty';
+  static const totalInvAmount = 'Total Inv Amount';
+  static const vendorDetails = 'Vendor Details';
+  static const selectVendor = 'Select Vendor';
+  static const purchaseRef = 'Purchase Ref';
+  static const purchaseOrderRef = 'Purchase Order Ref';
+  static const gstPercent = 'GST(%)';
+  static const unitRate = 'Unit Rate (Rs)';
+  static const carrier = 'Carrier';
+  static const carrierNumber = 'Carrier Number';
+  static const selectPurchaseType = 'Select Purchase Type';
+  static const engineDetails = 'Engine Details';
+  static const materialName = 'Material Name';
+  static const materialNumber = 'Material Number';
+  static const variant = 'Variant';
+  static const color = 'Color';
+  static const addToTable = 'Add To Table';
+  static const accessoriesDetails = 'Accessories Details';
+
+  //Stocks
+  static const branchCode = 'Branch Code';
+
+  //transfer
+  static const transporterName = 'Transporter Name';
+  static const vehicleNumber = 'Vehicle No';
+  static const fromBranch = 'From Branch';
+  static const toBranch = 'To Branch';
+  static const status = 'status';
+  static const newTransfer = 'New Transfer';
+  static const vehicleList = 'Vehicle list';
+  static const vehicleNameAndEngineNumber = 'Vehicle Name / Engine Number';
+  static const selectVehicleOrAccessories = 'Select Vehicle Or Accessories';
+  static const selectedVehicle = 'Selected Vehicle';
+  static const selectedAccessories = 'Selected Accessories';
+  static const transferDetails = 'Transfer Details';
+  static const selectFromBranchAndToBranch = 'Select From Branch & To Branch';
+  static const transporterDetails = 'Transporter Details';
+  static const selectTransporter = 'Select Transporter';
 }
Index: lib/view/purchase/purchase_view.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/purchase/purchase_view.dart b/lib/view/purchase/purchase_view.dart
new file mode 100644
--- /dev/null	(date 1715843684533)
+++ b/lib/view/purchase/purchase_view.dart	(date 1715843684533)
@@ -0,0 +1,288 @@
+import 'dart:async';
+
+import 'package:flutter/material.dart';
+import 'package:flutter_svg/flutter_svg.dart';
+import 'package:tlbilling/components/custom_elevated_button.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+import 'package:tlbilling/utils/app_util_widgets.dart';
+import 'package:tlbilling/view/purchase/add_purchase/add_purchase.dart';
+import 'package:tlbilling/view/purchase/purchase_view_bloc.dart';
+import 'package:tlds_flutter/components/tlds_input_form_field.dart';
+import 'package:tlds_flutter/util/app_colors.dart';
+
+class PurchaseView extends StatefulWidget {
+  const PurchaseView({super.key});
+
+  @override
+  State<PurchaseView> createState() => _PurchaseViewState();
+}
+
+class _PurchaseViewState extends State<PurchaseView>
+    with SingleTickerProviderStateMixin {
+  final _appColors = AppColor();
+  final _purchaseViewBloc = PurchaseViewBlocImpl();
+  List<Map<String, String>> rowData = [
+    {
+      AppConstants.sno: '1',
+      AppConstants.invoiceNo: 'INV-1234',
+      AppConstants.partNo: 'K61916304K',
+      AppConstants.vehicleDescription: 'TVS JUPITER-OBDIIA WALN',
+      AppConstants.hsnCode: '87112019',
+      AppConstants.quantity: '2',
+      AppConstants.totalInvAmount: '₹ 1,000,00',
+    },
+    {
+      AppConstants.sno: '2',
+      AppConstants.invoiceNo: 'INV-1235',
+      AppConstants.partNo: 'K61916304K',
+      AppConstants.vehicleDescription: 'TVS JUPITER-OBDIIA WALN',
+      AppConstants.hsnCode: '87112019',
+      AppConstants.quantity: '1',
+      AppConstants.totalInvAmount: '₹ 1,000,00',
+    },
+  ];
+
+  @override
+  void initState() {
+    super.initState();
+    _purchaseViewBloc.vehicleAndAccessoriesTabController =
+        TabController(length: 2, vsync: this);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      body: Padding(
+        padding: const EdgeInsets.symmetric(
+          horizontal: 21,
+          vertical: 28,
+        ),
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            AppWidgetUtils.buildHeaderText(AppConstants.purchase),
+            _buildSearchFilters(),
+            AppWidgetUtils.buildSizedBox(
+                custHeight: MediaQuery
+                    .sizeOf(context)
+                    .height * 0.02),
+            _buildTabBar(),
+            _buildTabBarView(),
+          ],
+        ),
+      ),
+    );
+  }
+
+  Widget _buildSearchFilters() {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+      children: [
+        Row(
+          mainAxisAlignment: MainAxisAlignment.spaceBetween,
+          children: [
+            StreamBuilder(
+              stream: _purchaseViewBloc.invoiceSearchFieldControllerStream,
+              builder: (context, snapshot) {
+                return _buildFormField(
+                    _purchaseViewBloc.invoiceSearchFieldController,
+                    AppConstants.invoiceNo);
+              },
+            ),
+            AppWidgetUtils.buildSizedBox(
+              custWidth: MediaQuery
+                  .sizeOf(context)
+                  .width * 0.01,
+            ),
+            StreamBuilder(
+              stream: _purchaseViewBloc.partNoSearchFieldControllerStream,
+              builder: (context, snapshot) {
+                return _buildFormField(
+                    _purchaseViewBloc.partNoSearchFieldController,
+                    AppConstants.partNo);
+              },
+            ),
+            AppWidgetUtils.buildSizedBox(
+              custWidth: MediaQuery
+                  .sizeOf(context)
+                  .width * 0.01,
+            ),
+            StreamBuilder(
+              stream: _purchaseViewBloc.vehicleSearchFieldControllerStream,
+              builder: (context, snapshot) {
+                return _buildFormField(
+                    _purchaseViewBloc.vehicleSearchFieldController,
+                    AppConstants.vehicleNumber);
+              },
+            ),
+            AppWidgetUtils.buildSizedBox(
+              custWidth: MediaQuery
+                  .sizeOf(context)
+                  .width * 0.01,
+            ),
+            StreamBuilder(
+              stream: _purchaseViewBloc.hsnCodeSearchFieldControllerStream,
+              builder: (context, snapshot) {
+                return _buildFormField(
+                    _purchaseViewBloc.hsnCodeSearchFieldController,
+                    AppConstants.hsnCode);
+              },
+            ),
+          ],
+        ),
+        Row(
+          children: [
+            CustomElevatedButton(
+              height: 40,
+              width: 189,
+              text: AppConstants.addPurchase,
+              fontSize: 16,
+              buttonBackgroundColor: _appColors.primaryColor,
+              fontColor: _appColors.whiteColor,
+              suffixIcon: SvgPicture.asset(AppConstants.icAdd),
+              onPressed: () {
+                Navigator.push(
+                    context,
+                    MaterialPageRoute(
+                      builder: (context) => const AddPurchase(),
+                    ));
+              },
+            )
+          ],
+        )
+      ],
+    );
+  }
+
+  Widget _buildFormField(TextEditingController textController,
+      String hintText) {
+    final bool isTextEmpty =
+        textController.text.isEmpty;
+    final IconData iconData = isTextEmpty ? Icons.search : Icons.close;
+    final Color iconColor =
+    isTextEmpty ? _appColors.primaryColor : Colors.red;
+    return TldsInputFormField(
+      width: 203,
+      height: 40,
+      controller: textController,
+      hintText: hintText,
+      suffixIcon: IconButton(
+        onPressed: iconData == Icons.search ? () {
+          //add search cont here
+          _checkController(hintText);
+        } : () {
+          textController.clear();
+          _checkController(hintText);
+        },
+        icon: Icon(
+          iconData,
+          color: iconColor,
+        ),
+      ),
+      onSubmit: (p0) {
+        //add search cont here
+        _checkController(hintText);
+      },
+    );
+  }
+
+  void _checkController(String hintText) {
+    if (AppConstants.invoiceNo == hintText) {
+      _purchaseViewBloc.invoiceSearchFieldStreamController(true);
+    } else if (AppConstants.vehicleNumber == hintText) {
+      _purchaseViewBloc.vehicleSearchFieldStreamController(true);
+    }else if(AppConstants.partNo == hintText){
+      _purchaseViewBloc.partNoSearchFieldStreamController(true);
+    }else if(AppConstants.hsnCode == hintText){
+      _purchaseViewBloc.hsnCodeSearchFieldStreamController(true);
+    }
+  }
+
+  Widget _buildTabBar() {
+    return SizedBox(
+      width: 250,
+      child: TabBar(
+        controller: _purchaseViewBloc.vehicleAndAccessoriesTabController,
+        tabs: const [
+          Tab(text: AppConstants.vehicle),
+          Tab(text: AppConstants.accessories),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildTabBarView() {
+    return Expanded(
+      child: TabBarView(
+        physics: const NeverScrollableScrollPhysics(),
+        controller: _purchaseViewBloc.vehicleAndAccessoriesTabController,
+        children: [
+          _buildCustomerTableView(context),
+          _buildCustomerTableView(context),
+        ],
+      ),
+    );
+  }
+
+  _buildCustomerTableView(BuildContext context) {
+    return SizedBox(
+      width: MediaQuery
+          .of(context)
+          .size
+          .width,
+      child: DataTable(
+        key: UniqueKey(),
+        dividerThickness: 0.01,
+        columns: [
+          _buildVehicleTableHeader(
+            AppConstants.sno,
+          ),
+          _buildVehicleTableHeader(AppConstants.invoiceNo),
+          _buildVehicleTableHeader(AppConstants.partNo),
+          _buildVehicleTableHeader(AppConstants.vehicleDescription),
+          _buildVehicleTableHeader(AppConstants.hsnCode),
+          _buildVehicleTableHeader(AppConstants.quantity),
+          _buildVehicleTableHeader(AppConstants.totalInvAmount),
+          _buildVehicleTableHeader(AppConstants.action),
+        ],
+        rows: List.generate(rowData.length, (index) {
+          final data = rowData[index];
+
+          final color = index.isEven
+              ? _appColors.whiteColor
+              : _appColors.transparentBlueColor;
+          return DataRow(
+            color: MaterialStateColor.resolveWith((states) => color),
+            cells: [
+              DataCell(Text(data[AppConstants.sno]!)),
+              DataCell(Text(data[AppConstants.invoiceNo]!)),
+              DataCell(Text(data[AppConstants.partNo]!)),
+              DataCell(Text(data[AppConstants.vehicleDescription]!)),
+              DataCell(Text(data[AppConstants.hsnCode]!)),
+              DataCell(Text(data[AppConstants.quantity]!)),
+              DataCell(Text(data[AppConstants.totalInvAmount]!)),
+              DataCell(
+                Row(
+                  children: [
+                    IconButton(
+                      icon: SvgPicture.asset(AppConstants.icEdit),
+                      onPressed: () {},
+                    ),
+                  ],
+                ),
+              ),
+            ],
+          );
+        }),
+      ),
+    );
+  }
+
+  _buildVehicleTableHeader(String headerValue) =>
+      DataColumn(
+        label: Text(
+          headerValue,
+          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
+        ),
+      );
+}
Index: lib/view/stocks/stocks_view.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/stocks/stocks_view.dart b/lib/view/stocks/stocks_view.dart
new file mode 100644
--- /dev/null	(date 1715769590016)
+++ b/lib/view/stocks/stocks_view.dart	(date 1715769590016)
@@ -0,0 +1,221 @@
+import 'package:flutter/material.dart';
+import 'package:flutter_svg/flutter_svg.dart';
+import 'package:tlbilling/utils/app_colors.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+import 'package:tlbilling/utils/app_util_widgets.dart';
+import 'package:tlbilling/view/stocks/detail_stock_view.dart';
+import 'package:tlbilling/view/stocks/stocks_view_bloc.dart';
+import 'package:tlds_flutter/components/tlds_input_form_field.dart';
+
+class StocksView extends StatefulWidget {
+  const StocksView({super.key});
+
+  @override
+  State<StocksView> createState() => _StocksViewState();
+}
+
+class _StocksViewState extends State<StocksView>
+    with SingleTickerProviderStateMixin {
+  final _appColors = AppColors();
+  final _stocksViewBloc = StocksViewBlocImpl();
+  List<Map<String, String>> rowData = [
+    {
+      AppConstants.sno: '2',
+      AppConstants.partNo: 'K61916304K',
+      AppConstants.vehicleName: 'TVS JUPITER-OBDIIA WALN',
+      AppConstants.hsnCode: '87112019',
+      AppConstants.quantity: '1',
+      AppConstants.totalInvAmount: '₹ 1,000,00',
+    },
+  ];
+
+  @override
+  void initState() {
+    super.initState();
+    _stocksViewBloc.stocksTableTableController =
+        TabController(length: 2, vsync: this);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+        body: Padding(
+      padding: const EdgeInsets.symmetric(vertical: 28, horizontal: 22),
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          AppWidgetUtils.buildHeaderText(AppConstants.stocks),
+          _buildDefaultHeight(),
+          _buildStocksFilters(),
+          _buildTabBar(),
+          _buildTabBarView(),
+        ],
+      ),
+    ));
+  }
+
+  Widget _buildStocksFilters() {
+    return Row(
+      children: [
+        StreamBuilder(
+          stream: _stocksViewBloc.partNumberSearchControllerStream,
+          builder: (context, snapshot) {
+            final bool isTextEmpty =
+                _stocksViewBloc.partNumberSearchController.text.isEmpty;
+            final IconData iconData = isTextEmpty ? Icons.search : Icons.close;
+            final Color iconColor =
+            isTextEmpty ? _appColors.primaryColor : Colors.red;
+            return TldsInputFormField(
+              width: 203,
+              height: 40,
+              controller: _stocksViewBloc.partNumberSearchController,
+              hintText: AppConstants.partNo,
+              suffixIcon: IconButton(
+                onPressed: () {
+                  isTextEmpty
+                      ? null
+                      : _stocksViewBloc.partNumberSearchController.clear();
+                  _stocksViewBloc.partNumberSearchStreamController(true);
+                },
+                icon: Icon(
+                  iconData,
+                  color: iconColor,
+                ),
+              ),
+              onSubmit: (p0) {
+                _stocksViewBloc.partNumberSearchStreamController(true);
+              },
+            );
+          },
+        ),
+        _buildDefaultWidth(),
+        StreamBuilder(
+          stream: _stocksViewBloc.vehicleNameSearchControllerStream,
+          builder: (context, snapshot) {
+            final bool isTextEmpty =
+                _stocksViewBloc.vehicleNameSearchController.text.isEmpty;
+            final IconData iconData = isTextEmpty ? Icons.search : Icons.close;
+            final Color iconColor =
+            isTextEmpty ? _appColors.primaryColor : Colors.red;
+            return TldsInputFormField(
+              width: 203,
+              height: 40,
+              controller: _stocksViewBloc.vehicleNameSearchController,
+              hintText: AppConstants.vehicleName,
+              suffixIcon: IconButton(
+                onPressed: () {
+                  isTextEmpty
+                      ? null
+                      : _stocksViewBloc.vehicleNameSearchController.clear();
+                  _stocksViewBloc.vehicleNameSearchStreamController(true);
+                },
+                icon: Icon(
+                  iconData,
+                  color: iconColor,
+                ),
+              ),
+              onSubmit: (p0) {
+                _stocksViewBloc.vehicleNameSearchStreamController(true);
+              },
+            );
+          },
+        ),
+      ],
+    );
+  }
+
+  Widget _buildTabBar() {
+    return SizedBox(
+      width: 250,
+      child: TabBar(
+        controller: _stocksViewBloc.stocksTableTableController,
+        tabs: const [
+          Tab(text: AppConstants.vehicle),
+          Tab(text: AppConstants.accessories),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildTabBarView() {
+    return Expanded(
+        child: TabBarView(
+      physics: const NeverScrollableScrollPhysics(),
+      controller: _stocksViewBloc.stocksTableTableController,
+      children: [
+        _buildStockTableView(context),
+        _buildStockTableView(context),
+      ],
+    ));
+  }
+
+  _buildStockTableView(BuildContext context) {
+    return SizedBox(
+      width: MediaQuery.sizeOf(context).width,
+      child: DataTable(
+        key: UniqueKey(),
+        dividerThickness: 0.01,
+        columns: [
+          _buildStockTableHeader(
+            AppConstants.sno,
+          ),
+          _buildStockTableHeader(AppConstants.partNo),
+          _buildStockTableHeader(AppConstants.vehicleName),
+          _buildStockTableHeader(AppConstants.hsnCode),
+          _buildStockTableHeader(AppConstants.quantity),
+          _buildStockTableHeader(AppConstants.action),
+        ],
+        rows: List.generate(rowData.length, (index) {
+          final data = rowData[index];
+
+          final color = index.isEven
+              ? _appColors.whiteColor
+              : _appColors.transparentBlueColor;
+          return DataRow(
+            color: MaterialStateColor.resolveWith((states) => color),
+            cells: [
+              DataCell(Text(data[AppConstants.sno]!)),
+              DataCell(Text(data[AppConstants.partNo]!)),
+              DataCell(Text(data[AppConstants.vehicleName]!)),
+              DataCell(Text(data[AppConstants.hsnCode]!)),
+              DataCell(Text(data[AppConstants.quantity]!)),
+              DataCell(
+                Row(
+                  children: [
+                    IconButton(
+                      icon: SvgPicture.asset(AppConstants.icMore),
+                      onPressed: () {
+                        Navigator.push(
+                            context,
+                            MaterialPageRoute(
+                              builder: (context) => const DetailStockView(),
+                            ));
+                      },
+                    ),
+                  ],
+                ),
+              ),
+            ],
+          );
+        }),
+      ),
+    );
+  }
+
+  _buildStockTableHeader(String headerValue) => DataColumn(
+        label: Text(
+          headerValue,
+          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
+        ),
+      );
+
+  Widget _buildDefaultWidth() {
+    return AppWidgetUtils.buildSizedBox(
+        custWidth: MediaQuery.sizeOf(context).width * 0.01);
+  }
+
+  Widget _buildDefaultHeight() {
+    return AppWidgetUtils.buildSizedBox(
+        custHeight: MediaQuery.sizeOf(context).height * 0.02);
+  }
+}
Index: build/flutter_assets/AssetManifest.bin.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"DRQHF2Fzc2V0cy9pY29ucy9pY19hZGQuc3ZnDAENAQcFYXNzZXQHF2Fzc2V0cy9pY29ucy9pY19hZGQuc3ZnBxphc3NldHMvaWNvbnMvaWNfY2FtZXJhLnN2ZwwBDQEHBWFzc2V0Bxphc3NldHMvaWNvbnMvaWNfY2FtZXJhLnN2ZwccYXNzZXRzL2ljb25zL2ljX2N1c3RvbWVyLnN2ZwwBDQEHBWFzc2V0Bxxhc3NldHMvaWNvbnMvaWNfY3VzdG9tZXIuc3ZnBx1hc3NldHMvaWNvbnMvaWNfZGFzaGJvYXJkLnN2ZwwBDQEHBWFzc2V0Bx1hc3NldHMvaWNvbnMvaWNfZGFzaGJvYXJkLnN2ZwceYXNzZXRzL2ljb25zL2ljX2Rvd25fYXJyb3cuc3ZnDAENAQcFYXNzZXQHHmFzc2V0cy9pY29ucy9pY19kb3duX2Fycm93LnN2ZwcYYXNzZXRzL2ljb25zL2ljX2VkaXQuc3ZnDAENAQcFYXNzZXQHGGFzc2V0cy9pY29ucy9pY19lZGl0LnN2ZwckYXNzZXRzL2ljb25zL2ljX2ZvcmVucXVpcnlfbG9naW4uc3ZnDAENAQcFYXNzZXQHJGFzc2V0cy9pY29ucy9pY19mb3JlbnF1aXJ5X2xvZ2luLnN2ZwcaYXNzZXRzL2ljb25zL2ljX2xvZ291dC5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX2xvZ291dC5zdmcHHGFzc2V0cy9pY29ucy9pY19wdXJjaGFzZS5zdmcMAQ0BBwVhc3NldAccYXNzZXRzL2ljb25zL2ljX3B1cmNoYXNlLnN2ZwcaYXNzZXRzL2ljb25zL2ljX3JlcG9ydC5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX3JlcG9ydC5zdmcHGWFzc2V0cy9pY29ucy9pY19zYWxlcy5zdmcMAQ0BBwVhc3NldAcZYXNzZXRzL2ljb25zL2ljX3NhbGVzLnN2ZwcaYXNzZXRzL2ljb25zL2ljX3NlYXJjaC5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX3NlYXJjaC5zdmcHGWFzc2V0cy9pY29ucy9pY19zbG9jay5zdmcMAQ0BBwVhc3NldAcZYXNzZXRzL2ljb25zL2ljX3Nsb2NrLnN2ZwckYXNzZXRzL2ljb25zL2ljX3RlY2hsYW1iZGFzX2xvZ28uc3ZnDAENAQcFYXNzZXQHJGFzc2V0cy9pY29ucy9pY190ZWNobGFtYmRhc19sb2dvLnN2ZwccYXNzZXRzL2ljb25zL2ljX3RyYW5zZmVyLnN2ZwwBDQEHBWFzc2V0Bxxhc3NldHMvaWNvbnMvaWNfdHJhbnNmZXIuc3ZnBx1hc3NldHMvaWNvbnMvaWNfdHJhbnNwb3J0LnN2ZwwBDQEHBWFzc2V0Bx1hc3NldHMvaWNvbnMvaWNfdHJhbnNwb3J0LnN2ZwcaYXNzZXRzL2ljb25zL2ljX3ZlbmRvci5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX3ZlbmRvci5zdmcHHGFzc2V0cy9pbWFnZXMvaW1nX25vZGF0YS5zdmcMAQ0BBwVhc3NldAccYXNzZXRzL2ltYWdlcy9pbWdfbm9kYXRhLnN2ZwcZYXNzZXRzL2ltYWdlcy9pbWdfdHZzLnBuZwwBDQEHBWFzc2V0Bxlhc3NldHMvaW1hZ2VzL2ltZ190dnMucG5nBzJwYWNrYWdlcy9jdXBlcnRpbm9faWNvbnMvYXNzZXRzL0N1cGVydGlub0ljb25zLnR0ZgwBDQEHBWFzc2V0BzJwYWNrYWdlcy9jdXBlcnRpbm9faWNvbnMvYXNzZXRzL0N1cGVydGlub0ljb25zLnR0Zg==\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build/flutter_assets/AssetManifest.bin.json b/build/flutter_assets/AssetManifest.bin.json
--- a/build/flutter_assets/AssetManifest.bin.json	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/build/flutter_assets/AssetManifest.bin.json	(date 1715852887785)
@@ -1,1 +1,1 @@
-"DRQHF2Fzc2V0cy9pY29ucy9pY19hZGQuc3ZnDAENAQcFYXNzZXQHF2Fzc2V0cy9pY29ucy9pY19hZGQuc3ZnBxphc3NldHMvaWNvbnMvaWNfY2FtZXJhLnN2ZwwBDQEHBWFzc2V0Bxphc3NldHMvaWNvbnMvaWNfY2FtZXJhLnN2ZwccYXNzZXRzL2ljb25zL2ljX2N1c3RvbWVyLnN2ZwwBDQEHBWFzc2V0Bxxhc3NldHMvaWNvbnMvaWNfY3VzdG9tZXIuc3ZnBx1hc3NldHMvaWNvbnMvaWNfZGFzaGJvYXJkLnN2ZwwBDQEHBWFzc2V0Bx1hc3NldHMvaWNvbnMvaWNfZGFzaGJvYXJkLnN2ZwceYXNzZXRzL2ljb25zL2ljX2Rvd25fYXJyb3cuc3ZnDAENAQcFYXNzZXQHHmFzc2V0cy9pY29ucy9pY19kb3duX2Fycm93LnN2ZwcYYXNzZXRzL2ljb25zL2ljX2VkaXQuc3ZnDAENAQcFYXNzZXQHGGFzc2V0cy9pY29ucy9pY19lZGl0LnN2ZwckYXNzZXRzL2ljb25zL2ljX2ZvcmVucXVpcnlfbG9naW4uc3ZnDAENAQcFYXNzZXQHJGFzc2V0cy9pY29ucy9pY19mb3JlbnF1aXJ5X2xvZ2luLnN2ZwcaYXNzZXRzL2ljb25zL2ljX2xvZ291dC5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX2xvZ291dC5zdmcHHGFzc2V0cy9pY29ucy9pY19wdXJjaGFzZS5zdmcMAQ0BBwVhc3NldAccYXNzZXRzL2ljb25zL2ljX3B1cmNoYXNlLnN2ZwcaYXNzZXRzL2ljb25zL2ljX3JlcG9ydC5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX3JlcG9ydC5zdmcHGWFzc2V0cy9pY29ucy9pY19zYWxlcy5zdmcMAQ0BBwVhc3NldAcZYXNzZXRzL2ljb25zL2ljX3NhbGVzLnN2ZwcaYXNzZXRzL2ljb25zL2ljX3NlYXJjaC5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX3NlYXJjaC5zdmcHGWFzc2V0cy9pY29ucy9pY19zbG9jay5zdmcMAQ0BBwVhc3NldAcZYXNzZXRzL2ljb25zL2ljX3Nsb2NrLnN2ZwckYXNzZXRzL2ljb25zL2ljX3RlY2hsYW1iZGFzX2xvZ28uc3ZnDAENAQcFYXNzZXQHJGFzc2V0cy9pY29ucy9pY190ZWNobGFtYmRhc19sb2dvLnN2ZwccYXNzZXRzL2ljb25zL2ljX3RyYW5zZmVyLnN2ZwwBDQEHBWFzc2V0Bxxhc3NldHMvaWNvbnMvaWNfdHJhbnNmZXIuc3ZnBx1hc3NldHMvaWNvbnMvaWNfdHJhbnNwb3J0LnN2ZwwBDQEHBWFzc2V0Bx1hc3NldHMvaWNvbnMvaWNfdHJhbnNwb3J0LnN2ZwcaYXNzZXRzL2ljb25zL2ljX3ZlbmRvci5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX3ZlbmRvci5zdmcHHGFzc2V0cy9pbWFnZXMvaW1nX25vZGF0YS5zdmcMAQ0BBwVhc3NldAccYXNzZXRzL2ltYWdlcy9pbWdfbm9kYXRhLnN2ZwcZYXNzZXRzL2ltYWdlcy9pbWdfdHZzLnBuZwwBDQEHBWFzc2V0Bxlhc3NldHMvaW1hZ2VzL2ltZ190dnMucG5nBzJwYWNrYWdlcy9jdXBlcnRpbm9faWNvbnMvYXNzZXRzL0N1cGVydGlub0ljb25zLnR0ZgwBDQEHBWFzc2V0BzJwYWNrYWdlcy9jdXBlcnRpbm9faWNvbnMvYXNzZXRzL0N1cGVydGlub0ljb25zLnR0Zg=="
\ No newline at end of file
+"DTAHFGFzc2V0cy9mb250cy9PRkwudHh0DAENAQcFYXNzZXQHFGFzc2V0cy9mb250cy9PRkwudHh0Bx5hc3NldHMvZm9udHMvUG9wcGlucy1CbGFjay50dGYMAQ0BBwVhc3NldAceYXNzZXRzL2ZvbnRzL1BvcHBpbnMtQmxhY2sudHRmByRhc3NldHMvZm9udHMvUG9wcGlucy1CbGFja0l0YWxpYy50dGYMAQ0BBwVhc3NldAckYXNzZXRzL2ZvbnRzL1BvcHBpbnMtQmxhY2tJdGFsaWMudHRmBx1hc3NldHMvZm9udHMvUG9wcGlucy1Cb2xkLnR0ZgwBDQEHBWFzc2V0Bx1hc3NldHMvZm9udHMvUG9wcGlucy1Cb2xkLnR0ZgcjYXNzZXRzL2ZvbnRzL1BvcHBpbnMtQm9sZEl0YWxpYy50dGYMAQ0BBwVhc3NldAcjYXNzZXRzL2ZvbnRzL1BvcHBpbnMtQm9sZEl0YWxpYy50dGYHImFzc2V0cy9mb250cy9Qb3BwaW5zLUV4dHJhQm9sZC50dGYMAQ0BBwVhc3NldAciYXNzZXRzL2ZvbnRzL1BvcHBpbnMtRXh0cmFCb2xkLnR0ZgcoYXNzZXRzL2ZvbnRzL1BvcHBpbnMtRXh0cmFCb2xkSXRhbGljLnR0ZgwBDQEHBWFzc2V0Byhhc3NldHMvZm9udHMvUG9wcGlucy1FeHRyYUJvbGRJdGFsaWMudHRmByNhc3NldHMvZm9udHMvUG9wcGlucy1FeHRyYUxpZ2h0LnR0ZgwBDQEHBWFzc2V0ByNhc3NldHMvZm9udHMvUG9wcGlucy1FeHRyYUxpZ2h0LnR0ZgcpYXNzZXRzL2ZvbnRzL1BvcHBpbnMtRXh0cmFMaWdodEl0YWxpYy50dGYMAQ0BBwVhc3NldAcpYXNzZXRzL2ZvbnRzL1BvcHBpbnMtRXh0cmFMaWdodEl0YWxpYy50dGYHH2Fzc2V0cy9mb250cy9Qb3BwaW5zLUl0YWxpYy50dGYMAQ0BBwVhc3NldAcfYXNzZXRzL2ZvbnRzL1BvcHBpbnMtSXRhbGljLnR0ZgceYXNzZXRzL2ZvbnRzL1BvcHBpbnMtTGlnaHQudHRmDAENAQcFYXNzZXQHHmFzc2V0cy9mb250cy9Qb3BwaW5zLUxpZ2h0LnR0ZgckYXNzZXRzL2ZvbnRzL1BvcHBpbnMtTGlnaHRJdGFsaWMudHRmDAENAQcFYXNzZXQHJGFzc2V0cy9mb250cy9Qb3BwaW5zLUxpZ2h0SXRhbGljLnR0ZgcfYXNzZXRzL2ZvbnRzL1BvcHBpbnMtTWVkaXVtLnR0ZgwBDQEHBWFzc2V0Bx9hc3NldHMvZm9udHMvUG9wcGlucy1NZWRpdW0udHRmByVhc3NldHMvZm9udHMvUG9wcGlucy1NZWRpdW1JdGFsaWMudHRmDAENAQcFYXNzZXQHJWFzc2V0cy9mb250cy9Qb3BwaW5zLU1lZGl1bUl0YWxpYy50dGYHIGFzc2V0cy9mb250cy9Qb3BwaW5zLVJlZ3VsYXIudHRmDAENAQcFYXNzZXQHIGFzc2V0cy9mb250cy9Qb3BwaW5zLVJlZ3VsYXIudHRmByFhc3NldHMvZm9udHMvUG9wcGlucy1TZW1pQm9sZC50dGYMAQ0BBwVhc3NldAchYXNzZXRzL2ZvbnRzL1BvcHBpbnMtU2VtaUJvbGQudHRmBydhc3NldHMvZm9udHMvUG9wcGlucy1TZW1pQm9sZEl0YWxpYy50dGYMAQ0BBwVhc3NldAcnYXNzZXRzL2ZvbnRzL1BvcHBpbnMtU2VtaUJvbGRJdGFsaWMudHRmBx1hc3NldHMvZm9udHMvUG9wcGlucy1UaGluLnR0ZgwBDQEHBWFzc2V0Bx1hc3NldHMvZm9udHMvUG9wcGlucy1UaGluLnR0ZgcjYXNzZXRzL2ZvbnRzL1BvcHBpbnMtVGhpbkl0YWxpYy50dGYMAQ0BBwVhc3NldAcjYXNzZXRzL2ZvbnRzL1BvcHBpbnMtVGhpbkl0YWxpYy50dGYHF2Fzc2V0cy9pY29ucy9pY19hZGQuc3ZnDAENAQcFYXNzZXQHF2Fzc2V0cy9pY29ucy9pY19hZGQuc3ZnBxhhc3NldHMvaWNvbnMvaWNfY2FsbC5zdmcMAQ0BBwVhc3NldAcYYXNzZXRzL2ljb25zL2ljX2NhbGwuc3ZnBxphc3NldHMvaWNvbnMvaWNfY2FtZXJhLnN2ZwwBDQEHBWFzc2V0Bxphc3NldHMvaWNvbnMvaWNfY2FtZXJhLnN2ZwccYXNzZXRzL2ljb25zL2ljX2N1c3RvbWVyLnN2ZwwBDQEHBWFzc2V0Bxxhc3NldHMvaWNvbnMvaWNfY3VzdG9tZXIuc3ZnBx1hc3NldHMvaWNvbnMvaWNfZGFzaGJvYXJkLnN2ZwwBDQEHBWFzc2V0Bx1hc3NldHMvaWNvbnMvaWNfZGFzaGJvYXJkLnN2ZwcYYXNzZXRzL2ljb25zL2ljX2RhdGUuc3ZnDAENAQcFYXNzZXQHGGFzc2V0cy9pY29ucy9pY19kYXRlLnN2ZwceYXNzZXRzL2ljb25zL2ljX2Rvd25fYXJyb3cuc3ZnDAENAQcFYXNzZXQHHmFzc2V0cy9pY29ucy9pY19kb3duX2Fycm93LnN2ZwcYYXNzZXRzL2ljb25zL2ljX2VkaXQuc3ZnDAENAQcFYXNzZXQHGGFzc2V0cy9pY29ucy9pY19lZGl0LnN2ZwceYXNzZXRzL2ljb25zL2ljX2ZpbGxlZF9hZGQuc3ZnDAENAQcFYXNzZXQHHmFzc2V0cy9pY29ucy9pY19maWxsZWRfYWRkLnN2ZwcgYXNzZXRzL2ljb25zL2ljX2ZpbGxlZF9jbG9zZS5zdmcMAQ0BBwVhc3NldAcgYXNzZXRzL2ljb25zL2ljX2ZpbGxlZF9jbG9zZS5zdmcHIGFzc2V0cy9pY29ucy9pY19maWxsZWRfbWludXMuc3ZnDAENAQcFYXNzZXQHIGFzc2V0cy9pY29ucy9pY19maWxsZWRfbWludXMuc3ZnByRhc3NldHMvaWNvbnMvaWNfZm9yZW5xdWlyeV9sb2dpbi5zdmcMAQ0BBwVhc3NldAckYXNzZXRzL2ljb25zL2ljX2ZvcmVucXVpcnlfbG9naW4uc3ZnBx1hc3NldHMvaWNvbnMvaWNfaHVtYW5fYWRkLnN2ZwwBDQEHBWFzc2V0Bx1hc3NldHMvaWNvbnMvaWNfaHVtYW5fYWRkLnN2ZwcaYXNzZXRzL2ljb25zL2ljX2xvZ291dC5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX2xvZ291dC5zdmcHGGFzc2V0cy9pY29ucy9pY19tYWlsLnN2ZwwBDQEHBWFzc2V0Bxhhc3NldHMvaWNvbnMvaWNfbWFpbC5zdmcHGGFzc2V0cy9pY29ucy9pY19tb3JlLnN2ZwwBDQEHBWFzc2V0Bxhhc3NldHMvaWNvbnMvaWNfbW9yZS5zdmcHHGFzc2V0cy9pY29ucy9pY19wdXJjaGFzZS5zdmcMAQ0BBwVhc3NldAccYXNzZXRzL2ljb25zL2ljX3B1cmNoYXNlLnN2ZwcaYXNzZXRzL2ljb25zL2ljX3JlcG9ydC5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX3JlcG9ydC5zdmcHGWFzc2V0cy9pY29ucy9pY19zYWxlcy5zdmcMAQ0BBwVhc3NldAcZYXNzZXRzL2ljb25zL2ljX3NhbGVzLnN2ZwcaYXNzZXRzL2ljb25zL2ljX3NlYXJjaC5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX3NlYXJjaC5zdmcHGWFzc2V0cy9pY29ucy9pY19zbG9jay5zdmcMAQ0BBwVhc3NldAcZYXNzZXRzL2ljb25zL2ljX3Nsb2NrLnN2ZwceYXNzZXRzL2ljb25zL2ljX3N3YXBfYXJyb3cuc3ZnDAENAQcFYXNzZXQHHmFzc2V0cy9pY29ucy9pY19zd2FwX2Fycm93LnN2ZwckYXNzZXRzL2ljb25zL2ljX3RlY2hsYW1iZGFzX2xvZ28uc3ZnDAENAQcFYXNzZXQHJGFzc2V0cy9pY29ucy9pY190ZWNobGFtYmRhc19sb2dvLnN2ZwccYXNzZXRzL2ljb25zL2ljX3RyYW5zZmVyLnN2ZwwBDQEHBWFzc2V0Bxxhc3NldHMvaWNvbnMvaWNfdHJhbnNmZXIuc3ZnBx1hc3NldHMvaWNvbnMvaWNfdHJhbnNwb3J0LnN2ZwwBDQEHBWFzc2V0Bx1hc3NldHMvaWNvbnMvaWNfdHJhbnNwb3J0LnN2ZwcaYXNzZXRzL2ljb25zL2ljX3ZlbmRvci5zdmcMAQ0BBwVhc3NldAcaYXNzZXRzL2ljb25zL2ljX3ZlbmRvci5zdmcHHGFzc2V0cy9pbWFnZXMvaW1nX25vZGF0YS5zdmcMAQ0BBwVhc3NldAccYXNzZXRzL2ltYWdlcy9pbWdfbm9kYXRhLnN2ZwcZYXNzZXRzL2ltYWdlcy9pbWdfdHZzLnBuZwwBDQEHBWFzc2V0Bxlhc3NldHMvaW1hZ2VzL2ltZ190dnMucG5nBzJwYWNrYWdlcy9jdXBlcnRpbm9faWNvbnMvYXNzZXRzL0N1cGVydGlub0ljb25zLnR0ZgwBDQEHBWFzc2V0BzJwYWNrYWdlcy9jdXBlcnRpbm9faWNvbnMvYXNzZXRzL0N1cGVydGlub0ljb25zLnR0Zg=="
\ No newline at end of file
Index: lib/view/transfer/transfer_view_bloc.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/transfer/transfer_view_bloc.dart b/lib/view/transfer/transfer_view_bloc.dart
new file mode 100644
--- /dev/null	(date 1715583327778)
+++ b/lib/view/transfer/transfer_view_bloc.dart	(date 1715583327778)
@@ -0,0 +1,75 @@
+import 'dart:async';
+
+import 'package:flutter/material.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+
+abstract class TransferViewBloc {
+  Stream get transporterNameSearchStream;
+
+  Stream get vehicleNameSearchStream;
+
+  TextEditingController get transporterNameSearchController;
+
+  TextEditingController get vehicleNameSearchController;
+
+  TabController get transferScreenTabController;
+}
+
+class TransferViewBlocImpl extends TransferViewBloc {
+  final _transporterNameSearchController = TextEditingController();
+  final _vehicleNameSearchController = TextEditingController();
+  final _transporterNameSearchStream = StreamController.broadcast();
+  final _vehicleNameSearchStream = StreamController.broadcast();
+  late TabController _transferScreenTabController;
+  final List<String> status = ['Transferred', 'Not Transferred'];
+  List<Map<String, String>> rowData = [
+    {
+      AppConstants.sno: '1',
+      AppConstants.fromBranch: 'Kovilpatti',
+      AppConstants.toBranch: 'Sattur',
+      AppConstants.transporterName: 'AK Logistics PVT LTD',
+      AppConstants.mobileNumber: '9876543210',
+      AppConstants.vehicleNumber: 'TN9834212',
+      AppConstants.status: 'Transferred',
+    },
+    {
+      AppConstants.sno: '2',
+      AppConstants.fromBranch: 'Virudhunagar',
+      AppConstants.toBranch: 'Sattur',
+      AppConstants.transporterName: 'AK Transporters',
+      AppConstants.mobileNumber: '7654321890',
+      AppConstants.vehicleNumber: 'TN2348234',
+      AppConstants.status: 'Not Transferred',
+    },
+  ];
+  String? selectedStatus;
+
+  @override
+  TextEditingController get transporterNameSearchController =>
+      _transporterNameSearchController;
+
+  @override
+  TextEditingController get vehicleNameSearchController =>
+      _vehicleNameSearchController;
+
+  @override
+  Stream get transporterNameSearchStream => _transporterNameSearchStream.stream;
+
+  transporterNameStreamController(bool streamValue) {
+    _transporterNameSearchStream.add(streamValue);
+  }
+
+  @override
+  Stream get vehicleNameSearchStream => _vehicleNameSearchStream.stream;
+
+  vehicleNameSearchStreamController(bool streamValue) {
+    _vehicleNameSearchStream.add(streamValue);
+  }
+
+  @override
+  TabController get transferScreenTabController => _transferScreenTabController;
+
+  set transferScreenTabController(TabController controllerValue) {
+    _transferScreenTabController = controllerValue;
+  }
+}
Index: tlbilling.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/lib\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/test\" isTestSource=\"true\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/.dart_tool\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/.idea\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/build\" />\r\n    </content>\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Dart SDK\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Flutter Plugins\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Dart Packages\" level=\"project\" />\r\n  </component>\r\n</module>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tlbilling.iml b/tlbilling.iml
--- a/tlbilling.iml	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/tlbilling.iml	(date 1715582809017)
@@ -8,10 +8,38 @@
       <excludeFolder url="file://$MODULE_DIR$/.dart_tool" />
       <excludeFolder url="file://$MODULE_DIR$/.idea" />
       <excludeFolder url="file://$MODULE_DIR$/build" />
+      <excludeFolder url="file://$MODULE_DIR$/.pub" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/.dart_tool" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/.pub" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/build" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/.dart_tool" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/.pub" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/build" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/.dart_tool" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/.pub" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/build" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/.dart_tool" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/.pub" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/build" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/.dart_tool" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/.pub" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/build" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/.dart_tool" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/.pub" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/build" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/.dart_tool" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/.pub" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/build" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/.dart_tool" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/.pub" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/build" />
+      <excludeFolder url="file://$MODULE_DIR$/linux/flutter/ephemeral" />
+      <excludeFolder url="file://$MODULE_DIR$/macos/Flutter/ephemeral" />
+      <excludeFolder url="file://$MODULE_DIR$/windows/flutter/ephemeral" />
     </content>
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" name="Dart SDK" level="project" />
     <orderEntry type="library" name="Flutter Plugins" level="project" />
     <orderEntry type="library" name="Dart Packages" level="project" />
   </component>
-</module>
+</module>
\ No newline at end of file
Index: assets/icons/ic_more.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assets/icons/ic_more.svg b/assets/icons/ic_more.svg
new file mode 100644
--- /dev/null	(date 1714393970742)
+++ b/assets/icons/ic_more.svg	(date 1714393970742)
@@ -0,0 +1,3 @@
+<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
+<path d="M3.25311 11.996L5.75244 12.007C6.16654 12.0088 6.50076 12.3461 6.49895 12.7603C6.49726 13.14 6.2138 13.4525 5.84761 13.5006L5.74583 13.507L3.9996 13.498V18.999L5.74914 19C6.12873 19 6.44245 19.2821 6.4921 19.6482L6.49895 19.75C6.49895 20.1297 6.21686 20.4435 5.85088 20.4931L5.74914 20.5H3.2498C2.87021 20.5 2.55649 20.2178 2.50684 19.8518L2.5 19.75V12.7459C2.5 12.3651 2.78377 12.0507 3.15103 12.0024L3.25311 11.996ZM21.7449 17.5C22.159 17.5 22.4947 17.8358 22.4947 18.25C22.4947 18.6297 22.2126 18.9435 21.8466 18.9931L21.7449 19H8.24848C7.83437 19 7.49868 18.6642 7.49868 18.25C7.49868 17.8703 7.78076 17.5565 8.14673 17.5068L8.24848 17.5H21.7449ZM21.7449 13.5C22.159 13.5 22.4947 13.8358 22.4947 14.25C22.4947 14.6297 22.2126 14.9435 21.8466 14.9931L21.7449 15H8.24848C7.83437 15 7.49868 14.6642 7.49868 14.25C7.49868 13.8703 7.78076 13.5565 8.14673 13.5068L8.24848 13.5H21.7449ZM3.25311 2.5L5.75244 2.51102C6.16654 2.51284 6.50076 2.85011 6.49895 3.26432C6.49726 3.64401 6.2138 3.95656 5.84761 4.00461L5.74583 4.011L3.9996 4.00299V9.49499L5.74914 9.49505C6.12873 9.49505 6.44245 9.77721 6.4921 10.1433L6.49895 10.2451C6.49895 10.6247 6.21686 10.9385 5.85088 10.9882L5.74914 10.9951H3.2498C2.87021 10.9951 2.55649 10.7129 2.50684 10.3468L2.5 10.2451V3.24999C2.5 2.86911 2.78377 2.55477 3.15103 2.50644L3.25311 2.5ZM21.7449 8.00431C22.159 8.00431 22.4947 8.34009 22.4947 8.75431C22.4947 9.134 22.2126 9.4478 21.8466 9.49746L21.7449 9.50431H8.24848C7.83437 9.50431 7.49868 9.16852 7.49868 8.75431C7.49868 8.37461 7.78076 8.06082 8.14673 8.01115L8.24848 8.00431H21.7449ZM21.7502 4.00431C22.1643 4.00431 22.5 4.34009 22.5 4.75431C22.5 5.134 22.2179 5.4478 21.8519 5.49746L21.7502 5.50431H8.25377C7.83967 5.50431 7.50397 5.16852 7.50397 4.75431C7.50397 4.37461 7.78605 4.06082 8.15203 4.01115L8.25377 4.00431H21.7502Z" fill="#6527BE"/>
+</svg>
Index: pubspec.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by pub\r\n# See https://dart.dev/tools/pub/glossary#lockfile\r\npackages:\r\n  args:\r\n    dependency: transitive\r\n    description:\r\n      name: args\r\n      sha256: \"7cf60b9f0cc88203c5a190b4cd62a99feea42759a7fa695010eb5de1c0b2252a\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.5.0\"\r\n  async:\r\n    dependency: transitive\r\n    description:\r\n      name: async\r\n      sha256: \"947bfcf187f74dbc5e146c9eb9c0f10c9f8b30743e341481c1e2ed3ecc18c20c\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.11.0\"\r\n  boolean_selector:\r\n    dependency: transitive\r\n    description:\r\n      name: boolean_selector\r\n      sha256: \"6cfb5af12253eaf2b368f07bacc5a80d1301a071c73360d746b7f2e32d762c66\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.1\"\r\n  characters:\r\n    dependency: transitive\r\n    description:\r\n      name: characters\r\n      sha256: \"04a925763edad70e8443c99234dc3328f442e811f1d8fd1a72f1c8ad0f69a605\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.3.0\"\r\n  clock:\r\n    dependency: transitive\r\n    description:\r\n      name: clock\r\n      sha256: cb6d7f03e1de671e34607e909a7213e31d7752be4fb66a86d29fe1eb14bfb5cf\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.1.1\"\r\n  collection:\r\n    dependency: transitive\r\n    description:\r\n      name: collection\r\n      sha256: ee67cb0715911d28db6bf4af1026078bd6f0128b07a5f66fb2ed94ec6783c09a\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.18.0\"\r\n  cupertino_icons:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: cupertino_icons\r\n      sha256: ba631d1c7f7bef6b729a622b7b752645a2d076dba9976925b8f25725a30e1ee6\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.8\"\r\n  fake_async:\r\n    dependency: transitive\r\n    description:\r\n      name: fake_async\r\n      sha256: \"511392330127add0b769b75a987850d136345d9227c6b94c96a04cf4a391bf78\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.3.1\"\r\n  ffi:\r\n    dependency: transitive\r\n    description:\r\n      name: ffi\r\n      sha256: \"493f37e7df1804778ff3a53bd691d8692ddf69702cf4c1c1096a2e41b4779e21\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.2\"\r\n  file:\r\n    dependency: transitive\r\n    description:\r\n      name: file\r\n      sha256: \"5fc22d7c25582e38ad9a8515372cd9a93834027aacf1801cf01164dac0ffa08c\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"7.0.0\"\r\n  flutter:\r\n    dependency: \"direct main\"\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.0\"\r\n  flutter_lints:\r\n    dependency: \"direct dev\"\r\n    description:\r\n      name: flutter_lints\r\n      sha256: \"9e8c3858111da373efc5aa341de011d9bd23e2c5c5e0c62bccf32438e192d7b1\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.2\"\r\n  flutter_svg:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: flutter_svg\r\n      sha256: \"7b4ca6cf3304575fe9c8ec64813c8d02ee41d2afe60bcfe0678bcb5375d596a2\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.10+1\"\r\n  flutter_test:\r\n    dependency: \"direct dev\"\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.0\"\r\n  flutter_web_plugins:\r\n    dependency: transitive\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.0\"\r\n  hexcolor:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: hexcolor\r\n      sha256: c07f4bbb9095df87eeca87e7c69e8c3d60f70c66102d7b8d61c4af0453add3f6\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.1\"\r\n  http:\r\n    dependency: transitive\r\n    description:\r\n      name: http\r\n      sha256: \"761a297c042deedc1ffbb156d6e2af13886bb305c2a343a4d972504cd67dd938\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.2.1\"\r\n  http_parser:\r\n    dependency: transitive\r\n    description:\r\n      name: http_parser\r\n      sha256: \"2aa08ce0341cc9b354a498388e30986515406668dbcc4f7c950c3e715496693b\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.0.2\"\r\n  leak_tracker:\r\n    dependency: transitive\r\n    description:\r\n      name: leak_tracker\r\n      sha256: \"78eb209deea09858f5269f5a5b02be4049535f568c07b275096836f01ea323fa\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"10.0.0\"\r\n  leak_tracker_flutter_testing:\r\n    dependency: transitive\r\n    description:\r\n      name: leak_tracker_flutter_testing\r\n      sha256: b46c5e37c19120a8a01918cfaf293547f47269f7cb4b0058f21531c2465d6ef0\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.1\"\r\n  leak_tracker_testing:\r\n    dependency: transitive\r\n    description:\r\n      name: leak_tracker_testing\r\n      sha256: a597f72a664dbd293f3bfc51f9ba69816f84dcd403cdac7066cb3f6003f3ab47\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.1\"\r\n  lints:\r\n    dependency: transitive\r\n    description:\r\n      name: lints\r\n      sha256: cbf8d4b858bb0134ef3ef87841abdf8d63bfc255c266b7bf6b39daa1085c4290\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.0\"\r\n  matcher:\r\n    dependency: transitive\r\n    description:\r\n      name: matcher\r\n      sha256: d2323aa2060500f906aa31a895b4030b6da3ebdcc5619d14ce1aada65cd161cb\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.12.16+1\"\r\n  material_color_utilities:\r\n    dependency: transitive\r\n    description:\r\n      name: material_color_utilities\r\n      sha256: \"0e0a020085b65b6083975e499759762399b4475f766c21668c4ecca34ea74e5a\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.8.0\"\r\n  meta:\r\n    dependency: transitive\r\n    description:\r\n      name: meta\r\n      sha256: d584fa6707a52763a52446f02cc621b077888fb63b93bbcb1143a7be5a0c0c04\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.11.0\"\r\n  path:\r\n    dependency: transitive\r\n    description:\r\n      name: path\r\n      sha256: \"087ce49c3f0dc39180befefc60fdb4acd8f8620e5682fe2476afd0b3688bb4af\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.9.0\"\r\n  path_parsing:\r\n    dependency: transitive\r\n    description:\r\n      name: path_parsing\r\n      sha256: e3e67b1629e6f7e8100b367d3db6ba6af4b1f0bb80f64db18ef1fbabd2fa9ccf\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.1\"\r\n  path_provider_linux:\r\n    dependency: transitive\r\n    description:\r\n      name: path_provider_linux\r\n      sha256: f7a1fe3a634fe7734c8d3f2766ad746ae2a2884abe22e241a8b301bf5cac3279\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.1\"\r\n  path_provider_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: path_provider_platform_interface\r\n      sha256: \"88f5779f72ba699763fa3a3b06aa4bf6de76c8e5de842cf6f29e2e06476c2334\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.2\"\r\n  path_provider_windows:\r\n    dependency: transitive\r\n    description:\r\n      name: path_provider_windows\r\n      sha256: \"8bc9f22eee8690981c22aa7fc602f5c85b497a6fb2ceb35ee5a5e5ed85ad8170\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.1\"\r\n  petitparser:\r\n    dependency: transitive\r\n    description:\r\n      name: petitparser\r\n      sha256: c15605cd28af66339f8eb6fbe0e541bfe2d1b72d5825efc6598f3e0a31b9ad27\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.0.2\"\r\n  platform:\r\n    dependency: transitive\r\n    description:\r\n      name: platform\r\n      sha256: \"12220bb4b65720483f8fa9450b4332347737cf8213dd2840d8b2c823e47243ec\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.1.4\"\r\n  plugin_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: plugin_platform_interface\r\n      sha256: \"4820fbfdb9478b1ebae27888254d445073732dae3d6ea81f0b7e06d5dedc3f02\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.8\"\r\n  shared_preferences:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: shared_preferences\r\n      sha256: d3bbe5553a986e83980916ded2f0b435ef2e1893dfaa29d5a7a790d0eca12180\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.3\"\r\n  shared_preferences_android:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_android\r\n      sha256: \"1ee8bf911094a1b592de7ab29add6f826a7331fb854273d55918693d5364a1f2\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.2\"\r\n  shared_preferences_foundation:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_foundation\r\n      sha256: \"7708d83064f38060c7b39db12aefe449cb8cdc031d6062280087bc4cdb988f5c\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.3.5\"\r\n  shared_preferences_linux:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_linux\r\n      sha256: \"9f2cbcf46d4270ea8be39fa156d86379077c8a5228d9dfdb1164ae0bb93f1faa\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.3.2\"\r\n  shared_preferences_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_platform_interface\r\n      sha256: \"22e2ecac9419b4246d7c22bfbbda589e3acf5c0351137d87dd2939d984d37c3b\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.3.2\"\r\n  shared_preferences_web:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_web\r\n      sha256: \"9aee1089b36bd2aafe06582b7d7817fd317ef05fc30e6ba14bff247d0933042a\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.3.0\"\r\n  shared_preferences_windows:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_windows\r\n      sha256: \"841ad54f3c8381c480d0c9b508b89a34036f512482c407e6df7a9c4aa2ef8f59\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.3.2\"\r\n  sky_engine:\r\n    dependency: transitive\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.99\"\r\n  source_span:\r\n    dependency: transitive\r\n    description:\r\n      name: source_span\r\n      sha256: \"53e943d4206a5e30df338fd4c6e7a077e02254531b138a15aec3bd143c1a8b3c\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.10.0\"\r\n  stack_trace:\r\n    dependency: transitive\r\n    description:\r\n      name: stack_trace\r\n      sha256: \"73713990125a6d93122541237550ee3352a2d84baad52d375a4cad2eb9b7ce0b\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.11.1\"\r\n  stream_channel:\r\n    dependency: transitive\r\n    description:\r\n      name: stream_channel\r\n      sha256: ba2aa5d8cc609d96bbb2899c28934f9e1af5cddbd60a827822ea467161eb54e7\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.2\"\r\n  string_scanner:\r\n    dependency: transitive\r\n    description:\r\n      name: string_scanner\r\n      sha256: \"556692adab6cfa87322a115640c11f13cb77b3f076ddcc5d6ae3c20242bedcde\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.2.0\"\r\n  term_glyph:\r\n    dependency: transitive\r\n    description:\r\n      name: term_glyph\r\n      sha256: a29248a84fbb7c79282b40b8c72a1209db169a2e0542bce341da992fe1bc7e84\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.2.1\"\r\n  test_api:\r\n    dependency: transitive\r\n    description:\r\n      name: test_api\r\n      sha256: \"5c2f730018264d276c20e4f1503fd1308dfbbae39ec8ee63c5236311ac06954b\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.6.1\"\r\n  typed_data:\r\n    dependency: transitive\r\n    description:\r\n      name: typed_data\r\n      sha256: facc8d6582f16042dd49f2463ff1bd6e2c9ef9f3d5da3d9b087e244a7b564b3c\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.3.2\"\r\n  vector_graphics:\r\n    dependency: transitive\r\n    description:\r\n      name: vector_graphics\r\n      sha256: \"32c3c684e02f9bc0afb0ae0aa653337a2fe022e8ab064bcd7ffda27a74e288e3\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.1.11+1\"\r\n  vector_graphics_codec:\r\n    dependency: transitive\r\n    description:\r\n      name: vector_graphics_codec\r\n      sha256: c86987475f162fadff579e7320c7ddda04cd2fdeffbe1129227a85d9ac9e03da\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.1.11+1\"\r\n  vector_graphics_compiler:\r\n    dependency: transitive\r\n    description:\r\n      name: vector_graphics_compiler\r\n      sha256: \"12faff3f73b1741a36ca7e31b292ddeb629af819ca9efe9953b70bd63fc8cd81\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.1.11+1\"\r\n  vector_math:\r\n    dependency: transitive\r\n    description:\r\n      name: vector_math\r\n      sha256: \"80b3257d1492ce4d091729e3a67a60407d227c27241d6927be0130c98e741803\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.4\"\r\n  vm_service:\r\n    dependency: transitive\r\n    description:\r\n      name: vm_service\r\n      sha256: b3d56ff4341b8f182b96aceb2fa20e3dcb336b9f867bc0eafc0de10f1048e957\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"13.0.0\"\r\n  web:\r\n    dependency: transitive\r\n    description:\r\n      name: web\r\n      sha256: \"97da13628db363c635202ad97068d47c5b8aa555808e7a9411963c533b449b27\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.5.1\"\r\n  win32:\r\n    dependency: transitive\r\n    description:\r\n      name: win32\r\n      sha256: \"0a989dc7ca2bb51eac91e8fd00851297cfffd641aa7538b165c62637ca0eaa4a\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"5.4.0\"\r\n  xdg_directories:\r\n    dependency: transitive\r\n    description:\r\n      name: xdg_directories\r\n      sha256: faea9dee56b520b55a566385b84f2e8de55e7496104adada9962e0bd11bcff1d\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.4\"\r\n  xml:\r\n    dependency: transitive\r\n    description:\r\n      name: xml\r\n      sha256: b015a8ad1c488f66851d762d3090a21c600e479dc75e68328c52774040cf9226\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.5.0\"\r\nsdks:\r\n  dart: \">=3.3.0 <4.0.0\"\r\n  flutter: \">=3.19.0\"\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pubspec.lock b/pubspec.lock
--- a/pubspec.lock	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/pubspec.lock	(date 1715680211871)
@@ -49,6 +49,14 @@
       url: "https://pub.dev"
     source: hosted
     version: "1.18.0"
+  crypto:
+    dependency: transitive
+    description:
+      name: crypto
+      sha256: ff625774173754681d66daaf4a448684fb04b78f902da9cb3d308c19cc5e8bab
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.3"
   cupertino_icons:
     dependency: "direct main"
     description:
@@ -112,6 +120,14 @@
     description: flutter
     source: sdk
     version: "0.0.0"
+  google_fonts:
+    dependency: "direct main"
+    description:
+      name: google_fonts
+      sha256: f0b8d115a13ecf827013ec9fc883390ccc0e87a96ed5347a3114cac177ef18e8
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.1.0"
   hexcolor:
     dependency: "direct main"
     description:
@@ -136,6 +152,22 @@
       url: "https://pub.dev"
     source: hosted
     version: "4.0.2"
+  input_quantity:
+    dependency: "direct main"
+    description:
+      name: input_quantity
+      sha256: "50d8da78bdcee682771a3e1a200595d91d1b86f1bcf105b6788d6d2ac1dec374"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.3.2"
+  intl:
+    dependency: transitive
+    description:
+      name: intl
+      sha256: d6f56758b7d3014a48af9701c085700aac781a92a87a62b1333b46d8879661cf
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.19.0"
   leak_tracker:
     dependency: transitive
     description:
@@ -208,6 +240,30 @@
       url: "https://pub.dev"
     source: hosted
     version: "1.0.1"
+  path_provider:
+    dependency: transitive
+    description:
+      name: path_provider
+      sha256: c9e7d3a4cd1410877472158bee69963a4579f78b68c65a2b7d40d1a7a88bb161
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.3"
+  path_provider_android:
+    dependency: transitive
+    description:
+      name: path_provider_android
+      sha256: a248d8146ee5983446bf03ed5ea8f6533129a12b11f12057ad1b4a67a2b3b41d
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.4"
+  path_provider_foundation:
+    dependency: transitive
+    description:
+      name: path_provider_foundation
+      sha256: "5a7999be66e000916500be4f15a3633ebceb8302719b47b9cc49ce924125350f"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.3.2"
   path_provider_linux:
     dependency: transitive
     description:
@@ -365,6 +421,15 @@
       url: "https://pub.dev"
     source: hosted
     version: "0.6.1"
+  tlds_flutter:
+    dependency: "direct main"
+    description:
+      path: "."
+      ref: main
+      resolved-ref: "01d0035caee890e3591c1fbcac61f46b0a5db548"
+      url: "https://github.com/metIdeamate/tlds_flutter.git"
+    source: git
+    version: "1.0.1+1"
   typed_data:
     dependency: transitive
     description:
Index: lib/utils/app_colors.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:hexcolor/hexcolor.dart';\r\n\r\nclass AppColors {\r\n  Color primaryColor = HexColor(\"#6527BE\");\r\n  Color disabledColor = HexColor('#DADADA');\r\n  Color blackColor = HexColor('#000000');\r\n  Color whiteColor = HexColor('#FFFFFF');\r\n  Color blueColor = HexColor('#0063FF');\r\n  Color orangeColor = HexColor('#FF7A00');\r\n  Color yellowColor = HexColor('#EAE100');\r\n  Color lightBlueColor = HexColor('#176B87');\r\n  Color hintColor = HexColor('#718EBF');\r\n  Color grey = HexColor('#ADADAD');\r\n  static const Color white12 = Color.fromRGBO(255, 255, 255, 0.14);\r\n  Color greyColor = Colors.grey;\r\n  Color red = Colors.red;\r\n  Color transparentColor = HexColor('#DFEAF2');\r\n  Color transparentGreenColor = HexColor('#EBF9F1');\r\n  Color transparentBlueColor = HexColor('#F7F6FE');\r\n  Color hightlightColor = HexColor('#F0E6FF');\r\n  Color borderColor = HexColor('#718EBF');\r\n  Color primaryLight = HexColor('#EADCFF');\r\n  Color errorColor = HexColor('#EB0006');\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/utils/app_colors.dart b/lib/utils/app_colors.dart
--- a/lib/utils/app_colors.dart	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/lib/utils/app_colors.dart	(date 1715760886231)
@@ -22,4 +22,11 @@
   Color borderColor = HexColor('#718EBF');
   Color primaryLight = HexColor('#EADCFF');
   Color errorColor = HexColor('#EB0006');
+  Color successColor = HexColor('#00C25A');
+  Color liteGrayColor = HexColor('#E0E0E0');
+  Color liteBlueColor = HexColor('#DFEAF2');
+  Color segmentedButtonColor = HexColor('#E8DEF8');
+  Color selectedVehicleAndAccessoriesColor = HexColor('#FAFAFA');
+  Color transferDetailsContainerColor = HexColor('#F4F4F4');
+  Color cardBorderColor = HexColor('#E0E0E0');
 }
Index: lib/utils/app_utils.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:tlbilling/utils/app_colors.dart';\r\n\r\nclass AppUtils {\r\n  static OutlineInputBorder outlineInputBorder({Color? color}) {\r\n    return OutlineInputBorder(\r\n        borderRadius: BorderRadius.circular(5),\r\n        borderSide: BorderSide(\r\n          color: color ?? AppColors().primaryColor,\r\n        ));\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/utils/app_utils.dart b/lib/utils/app_utils.dart
--- a/lib/utils/app_utils.dart	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/lib/utils/app_utils.dart	(date 1715779770927)
@@ -1,8 +1,41 @@
 import 'package:flutter/material.dart';
+import 'package:intl/intl.dart';
 import 'package:tlbilling/utils/app_colors.dart';
 
 class AppUtils {
-  static OutlineInputBorder outlineInputBorder({Color? color}) {
+  static final DateFormat _appDateFormat = DateFormat('dd-MM-yyyy');
+  static final DateFormat _apiDateFormat = DateFormat('yyyy-MM-dd');
+
+  static String formatCurrency(double amount) {
+    final formatCurrency = NumberFormat.currency(locale: "en_IN", symbol: "₹");
+    return formatCurrency.format(amount);
+  }
+
+  static String appToAPIDateFormat(String dateText) {
+    final date = appStringToDateTime(dateText);
+    final formattedDate = _apiDateFormat.format(date);
+    return formattedDate;
+  }
+
+  static String apiToAppDateFormat(String dateText) {
+    final date = apiStringToDateTime(dateText);
+    final formattedDate = _appDateFormat.format(date);
+    return formattedDate;
+  }
+
+  static DateTime appStringToDateTime(String inputDateTime) {
+    return _appDateFormat.parse(inputDateTime);
+  }
+
+  static String apiDateTimeToString(DateTime inputDateTime) {
+    return _apiDateFormat.format(inputDateTime);
+  }
+
+  static DateTime apiStringToDateTime(String inputDateTime) {
+    return _apiDateFormat.parse(inputDateTime);
+  }
+
+  static OutlineInputBorder outlineInputBorder({Color? color}){
     return OutlineInputBorder(
         borderRadius: BorderRadius.circular(5),
         borderSide: BorderSide(
Index: .flutter-plugins-dependencies
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"info\":\"This is a generated file; do not edit or check into version control.\",\"plugins\":{\"ios\":[{\"name\":\"shared_preferences_foundation\",\"path\":\"C:\\\\\\\\Users\\\\\\\\New\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_foundation-2.3.5\\\\\\\\\",\"shared_darwin_source\":true,\"native_build\":true,\"dependencies\":[]}],\"android\":[{\"name\":\"shared_preferences_android\",\"path\":\"C:\\\\\\\\Users\\\\\\\\New\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_android-2.2.2\\\\\\\\\",\"native_build\":true,\"dependencies\":[]}],\"macos\":[{\"name\":\"shared_preferences_foundation\",\"path\":\"C:\\\\\\\\Users\\\\\\\\New\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_foundation-2.3.5\\\\\\\\\",\"shared_darwin_source\":true,\"native_build\":true,\"dependencies\":[]}],\"linux\":[{\"name\":\"path_provider_linux\",\"path\":\"C:\\\\\\\\Users\\\\\\\\New\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\path_provider_linux-2.2.1\\\\\\\\\",\"native_build\":false,\"dependencies\":[]},{\"name\":\"shared_preferences_linux\",\"path\":\"C:\\\\\\\\Users\\\\\\\\New\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_linux-2.3.2\\\\\\\\\",\"native_build\":false,\"dependencies\":[\"path_provider_linux\"]}],\"windows\":[{\"name\":\"path_provider_windows\",\"path\":\"C:\\\\\\\\Users\\\\\\\\New\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\path_provider_windows-2.2.1\\\\\\\\\",\"native_build\":false,\"dependencies\":[]},{\"name\":\"shared_preferences_windows\",\"path\":\"C:\\\\\\\\Users\\\\\\\\New\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_windows-2.3.2\\\\\\\\\",\"native_build\":false,\"dependencies\":[\"path_provider_windows\"]}],\"web\":[{\"name\":\"shared_preferences_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\New\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_web-2.3.0\\\\\\\\\",\"dependencies\":[]}]},\"dependencyGraph\":[{\"name\":\"path_provider_linux\",\"dependencies\":[]},{\"name\":\"path_provider_windows\",\"dependencies\":[]},{\"name\":\"shared_preferences\",\"dependencies\":[\"shared_preferences_android\",\"shared_preferences_foundation\",\"shared_preferences_linux\",\"shared_preferences_web\",\"shared_preferences_windows\"]},{\"name\":\"shared_preferences_android\",\"dependencies\":[]},{\"name\":\"shared_preferences_foundation\",\"dependencies\":[]},{\"name\":\"shared_preferences_linux\",\"dependencies\":[\"path_provider_linux\"]},{\"name\":\"shared_preferences_web\",\"dependencies\":[]},{\"name\":\"shared_preferences_windows\",\"dependencies\":[\"path_provider_windows\"]}],\"date_created\":\"2024-04-26 17:12:53.337469\",\"version\":\"3.19.1\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.flutter-plugins-dependencies b/.flutter-plugins-dependencies
--- a/.flutter-plugins-dependencies	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/.flutter-plugins-dependencies	(date 1715852884858)
@@ -1,1 +1,1 @@
-{"info":"This is a generated file; do not edit or check into version control.","plugins":{"ios":[{"name":"shared_preferences_foundation","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_foundation-2.3.5\\\\","shared_darwin_source":true,"native_build":true,"dependencies":[]}],"android":[{"name":"shared_preferences_android","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_android-2.2.2\\\\","native_build":true,"dependencies":[]}],"macos":[{"name":"shared_preferences_foundation","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_foundation-2.3.5\\\\","shared_darwin_source":true,"native_build":true,"dependencies":[]}],"linux":[{"name":"path_provider_linux","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_linux-2.2.1\\\\","native_build":false,"dependencies":[]},{"name":"shared_preferences_linux","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_linux-2.3.2\\\\","native_build":false,"dependencies":["path_provider_linux"]}],"windows":[{"name":"path_provider_windows","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_windows-2.2.1\\\\","native_build":false,"dependencies":[]},{"name":"shared_preferences_windows","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_windows-2.3.2\\\\","native_build":false,"dependencies":["path_provider_windows"]}],"web":[{"name":"shared_preferences_web","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_web-2.3.0\\\\","dependencies":[]}]},"dependencyGraph":[{"name":"path_provider_linux","dependencies":[]},{"name":"path_provider_windows","dependencies":[]},{"name":"shared_preferences","dependencies":["shared_preferences_android","shared_preferences_foundation","shared_preferences_linux","shared_preferences_web","shared_preferences_windows"]},{"name":"shared_preferences_android","dependencies":[]},{"name":"shared_preferences_foundation","dependencies":[]},{"name":"shared_preferences_linux","dependencies":["path_provider_linux"]},{"name":"shared_preferences_web","dependencies":[]},{"name":"shared_preferences_windows","dependencies":["path_provider_windows"]}],"date_created":"2024-04-26 17:12:53.337469","version":"3.19.1"}
\ No newline at end of file
+{"info":"This is a generated file; do not edit or check into version control.","plugins":{"ios":[{"name":"path_provider_foundation","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_foundation-2.3.2\\\\","shared_darwin_source":true,"native_build":true,"dependencies":[]},{"name":"shared_preferences_foundation","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_foundation-2.3.5\\\\","shared_darwin_source":true,"native_build":true,"dependencies":[]}],"android":[{"name":"path_provider_android","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_android-2.2.4\\\\","native_build":true,"dependencies":[]},{"name":"shared_preferences_android","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_android-2.2.2\\\\","native_build":true,"dependencies":[]}],"macos":[{"name":"path_provider_foundation","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_foundation-2.3.2\\\\","shared_darwin_source":true,"native_build":true,"dependencies":[]},{"name":"shared_preferences_foundation","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_foundation-2.3.5\\\\","shared_darwin_source":true,"native_build":true,"dependencies":[]}],"linux":[{"name":"path_provider_linux","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_linux-2.2.1\\\\","native_build":false,"dependencies":[]},{"name":"shared_preferences_linux","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_linux-2.3.2\\\\","native_build":false,"dependencies":["path_provider_linux"]}],"windows":[{"name":"path_provider_windows","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_windows-2.2.1\\\\","native_build":false,"dependencies":[]},{"name":"shared_preferences_windows","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_windows-2.3.2\\\\","native_build":false,"dependencies":["path_provider_windows"]}],"web":[{"name":"shared_preferences_web","path":"C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_web-2.3.0\\\\","dependencies":[]}]},"dependencyGraph":[{"name":"path_provider","dependencies":["path_provider_android","path_provider_foundation","path_provider_linux","path_provider_windows"]},{"name":"path_provider_android","dependencies":[]},{"name":"path_provider_foundation","dependencies":[]},{"name":"path_provider_linux","dependencies":[]},{"name":"path_provider_windows","dependencies":[]},{"name":"shared_preferences","dependencies":["shared_preferences_android","shared_preferences_foundation","shared_preferences_linux","shared_preferences_web","shared_preferences_windows"]},{"name":"shared_preferences_android","dependencies":[]},{"name":"shared_preferences_foundation","dependencies":[]},{"name":"shared_preferences_linux","dependencies":["path_provider_linux"]},{"name":"shared_preferences_web","dependencies":[]},{"name":"shared_preferences_windows","dependencies":["path_provider_windows"]}],"date_created":"2024-05-16 15:18:04.843368","version":"3.19.6"}
\ No newline at end of file
Index: assets/icons/ic_filled_add.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assets/icons/ic_filled_add.svg b/assets/icons/ic_filled_add.svg
new file mode 100644
--- /dev/null	(date 1715681731545)
+++ b/assets/icons/ic_filled_add.svg	(date 1715681731545)
@@ -0,0 +1,4 @@
+<svg width="17" height="16" viewBox="0 0 17 16" fill="none" xmlns="http://www.w3.org/2000/svg">
+<circle cx="8.43613" cy="7.77798" r="7.77817" transform="rotate(-90 8.43613 7.77798)" fill="#6527BE"/>
+<path d="M5.3927 7.86204C5.3927 7.73363 5.48807 7.62747 5.61187 7.61067L5.64629 7.60833L8.09815 7.60793L8.09815 5.15506C8.09815 5.01499 8.21171 4.90143 8.35179 4.90143C8.4802 4.90143 8.58632 4.99686 8.60312 5.12063L8.60542 5.15506L8.60542 7.60793L11.0569 7.60725C11.197 7.60722 11.3106 7.72074 11.3106 7.86082C11.3106 7.98923 11.2153 8.09538 11.0915 8.11219L11.057 8.11452L8.60542 8.1152L8.60542 10.5667C8.60542 10.7068 8.49186 10.8203 8.35179 10.8203C8.22338 10.8203 8.11726 10.7249 8.10045 10.6011L8.09815 10.5667L8.09815 8.1152L5.64639 8.1156C5.50631 8.11564 5.3927 8.00211 5.3927 7.86204Z" fill="white"/>
+</svg>
Index: assets/icons/ic_filled_minus.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assets/icons/ic_filled_minus.svg b/assets/icons/ic_filled_minus.svg
new file mode 100644
--- /dev/null	(date 1715681714059)
+++ b/assets/icons/ic_filled_minus.svg	(date 1715681714059)
@@ -0,0 +1,11 @@
+<svg width="17" height="16" viewBox="0 0 17 16" fill="none" xmlns="http://www.w3.org/2000/svg">
+<circle cx="8.43613" cy="7.77798" r="7.77817" transform="rotate(-90 8.43613 7.77798)" fill="#6527BE"/>
+<g clip-path="url(#clip0_323_6449)">
+<path d="M11.0352 7.26V8.604H5.28123V7.26H11.0352Z" fill="white"/>
+</g>
+<defs>
+<clipPath id="clip0_323_6449">
+<rect width="8.11636" height="8.11636" fill="white" transform="translate(4.37817 11.8359) rotate(-90)"/>
+</clipPath>
+</defs>
+</svg>
Index: .flutter-plugins
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># This is a generated file; do not edit or check into version control.\r\npath_provider_linux=C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_linux-2.2.1\\\\\r\npath_provider_windows=C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_windows-2.2.1\\\\\r\nshared_preferences=C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences-2.2.3\\\\\r\nshared_preferences_android=C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_android-2.2.2\\\\\r\nshared_preferences_foundation=C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_foundation-2.3.5\\\\\r\nshared_preferences_linux=C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_linux-2.3.2\\\\\r\nshared_preferences_web=C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_web-2.3.0\\\\\r\nshared_preferences_windows=C:\\\\Users\\\\New\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_windows-2.3.2\\\\\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.flutter-plugins b/.flutter-plugins
--- a/.flutter-plugins	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/.flutter-plugins	(date 1715852884377)
@@ -1,4 +1,7 @@
 # This is a generated file; do not edit or check into version control.
+path_provider=C:\\Users\\New\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\path_provider-2.1.3\\
+path_provider_android=C:\\Users\\New\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\path_provider_android-2.2.4\\
+path_provider_foundation=C:\\Users\\New\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\path_provider_foundation-2.3.2\\
 path_provider_linux=C:\\Users\\New\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\path_provider_linux-2.2.1\\
 path_provider_windows=C:\\Users\\New\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\path_provider_windows-2.2.1\\
 shared_preferences=C:\\Users\\New\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\shared_preferences-2.2.3\\
Index: lib/view/transfer/transfer_view.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/view/transfer/transfer_view.dart b/lib/view/transfer/transfer_view.dart
new file mode 100644
--- /dev/null	(date 1715839515005)
+++ b/lib/view/transfer/transfer_view.dart	(date 1715839515005)
@@ -0,0 +1,298 @@
+import 'package:flutter/material.dart';
+import 'package:flutter_svg/flutter_svg.dart';
+import 'package:google_fonts/google_fonts.dart';
+import 'package:tlbilling/components/custom_elevated_button.dart';
+import 'package:tlbilling/utils/app_colors.dart';
+import 'package:tlbilling/utils/app_constants.dart';
+import 'package:tlbilling/utils/app_util_widgets.dart';
+import 'package:tlbilling/view/transfer/new_transfer/new_transfer.dart';
+import 'package:tlbilling/view/transfer/transfer_view_bloc.dart';
+import 'package:tlds_flutter/components/tlds_dropdown_button_form_field.dart';
+import 'package:tlds_flutter/components/tlds_input_form_field.dart';
+
+class TransferView extends StatefulWidget {
+  const TransferView({super.key});
+
+  @override
+  State<TransferView> createState() => _TransferViewState();
+}
+
+class _TransferViewState extends State<TransferView>
+    with SingleTickerProviderStateMixin {
+  final _transferViewBloc = TransferViewBlocImpl();
+  final _appColors = AppColors();
+
+  @override
+  void initState() {
+    super.initState();
+    _transferViewBloc.transferScreenTabController =
+        TabController(length: 2, vsync: this);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      body: Padding(
+        padding: const EdgeInsets.all(12),
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            AppWidgetUtils.buildHeaderText(AppConstants.transfer),
+            _buildDefaultHeight(),
+            _buildSearchFilter(),
+            _buildTabBar(),
+            _buildTabBarView(),
+          ],
+        ),
+      ),
+    );
+  }
+
+  Widget _buildSearchFilter() {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+      children: [
+        Row(children: [
+          StreamBuilder(
+            stream: _transferViewBloc.transporterNameSearchStream,
+            builder: (context, snapshot) {
+              return _buildFormField(_transferViewBloc.transporterNameSearchController,
+              AppConstants.transporterName);
+            },
+          ),
+          _buildDefaultWidth(),
+          StreamBuilder(
+            stream: _transferViewBloc.vehicleNameSearchStream,
+            builder: (context, snapshot) {
+              return _buildFormField(_transferViewBloc.vehicleNameSearchController,
+                  AppConstants.vehicleName);
+            },
+          ),
+          _buildDefaultWidth(),
+          TldsDropDownButtonFormField(
+            height: 40,
+            width: MediaQuery.sizeOf(context).width * 0.15,
+            hintText: AppConstants.selectVendor,
+            dropDownItems: _transferViewBloc.status,
+            onChange: (String? newValue) {
+              _transferViewBloc.selectedStatus = newValue ?? '';
+            },
+          ),
+        ],),
+        Row(children: [
+          _buildNewTransfer()
+        ],)
+      ],
+    );
+  }
+
+
+  Widget _buildNewTransfer(){
+    return CustomElevatedButton(
+      height: 40,
+      width: 189,
+      text: AppConstants.newTransfer,
+      fontSize: 16,
+      buttonBackgroundColor: _appColors.primaryColor,
+      fontColor: _appColors.whiteColor,
+      suffixIcon: SvgPicture.asset(AppConstants.icAdd),
+      onPressed: () {
+        Navigator.push(
+            context,
+            MaterialPageRoute(
+              builder: (context) => const NewTransfer(),
+            ));
+      },
+    );
+  }
+
+  Widget _buildTabBar() {
+    return SizedBox(
+      width: 300,
+      child: TabBar(
+        controller: _transferViewBloc.transferScreenTabController,
+        tabs: [
+          Tab(
+              //text: AppConstants.vehicle,
+              child: _buildTabBarRow('Transferred', '2')),
+          Tab(
+              //text: AppConstants.accessories,
+              child: _buildTabBarRow('Received', '4')),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildTabBarRow(String title, String count) {
+    return Row(
+      children: [
+        Text(title),
+        AppWidgetUtils.buildSizedBox(custWidth: 8),
+        CircleAvatar(
+          radius: 10,
+          backgroundColor: _appColors.red,
+          child: Text(
+            count,
+            style: GoogleFonts.nunitoSans(color: _appColors.whiteColor),
+          ),
+        ),
+      ],
+    );
+  }
+
+  Widget _buildTabBarView() {
+    return Expanded(
+      child: TabBarView(
+        physics: const NeverScrollableScrollPhysics(),
+        controller: _transferViewBloc.transferScreenTabController,
+        children: [
+          _buildTransferTableView(context),
+          _buildTransferTableView(context),
+        ],
+      ),
+    );
+  }
+
+  _buildTransferTableView(BuildContext context) {
+    return SizedBox(
+      width: MediaQuery.sizeOf(context).width,
+      child: DataTable(
+        key: UniqueKey(),
+        dividerThickness: 0.01,
+        columns: [
+          _buildTransferTableHeader(
+            AppConstants.sno,
+          ),
+          _buildTransferTableHeader(AppConstants.fromBranch),
+          _buildTransferTableHeader(AppConstants.toBranch),
+          _buildTransferTableHeader(AppConstants.transporterName),
+          _buildTransferTableHeader(AppConstants.mobileNumber),
+          _buildTransferTableHeader(AppConstants.vehicleNumber),
+          _buildTransferTableHeader(AppConstants.status),
+          _buildTransferTableHeader(AppConstants.action),
+        ],
+        rows: List.generate(_transferViewBloc.rowData.length, (index) {
+          final data = _transferViewBloc.rowData[index];
+
+          final color = index.isEven
+              ? _appColors.whiteColor
+              : _appColors.transparentBlueColor;
+          return DataRow(
+            color: MaterialStateColor.resolveWith((states) => color),
+            cells: [
+              DataCell(Text(data[AppConstants.sno] ?? '')),
+              DataCell(Text(data[AppConstants.fromBranch] ?? '')),
+              DataCell(Text(data[AppConstants.toBranch] ?? '')),
+              DataCell(Text(data[AppConstants.transporterName] ?? '')),
+              DataCell(Text(data[AppConstants.mobileNumber] ?? '')),
+              DataCell(Text(data[AppConstants.vehicleNumber] ?? '')),
+              DataCell(Container(
+                decoration: BoxDecoration(
+                  borderRadius: BorderRadius.circular(50),
+                    border: Border.all(
+                        color: data[AppConstants.status] == 'Transferred'
+                            ? _appColors.whiteColor
+                            : _appColors.yellowColor)),
+                child: Padding(padding: const EdgeInsets.all(4),
+                child: _buildTransferStatus(data))
+              ),),
+              DataCell(
+                Row(
+                  children: [
+                    IconButton(
+                      icon: SvgPicture.asset(AppConstants.icMore),
+                      onPressed: () {
+                        Navigator.push(
+                            context,
+                            MaterialPageRoute(
+                              builder: (context) => const NewTransfer(),
+                            ));
+                      },
+                    ),
+                  ],
+                ),
+              ),
+            ],
+          );
+        }),
+      ),
+    );
+  }
+
+  Widget _buildTransferStatus(Map<String, String> data){
+    return Row(
+      children: [
+        Text(data[AppConstants.status] ?? '',style: TextStyle(color:
+        data[AppConstants.status] == 'Transferred'
+            ? _appColors.successColor
+            : _appColors.yellowColor),),
+        AppWidgetUtils.buildSizedBox(custWidth: 4),
+        data[AppConstants.status] == 'Transferred'
+            ? Icon(
+          Icons.check,
+          color: _appColors.successColor,
+        )
+            : Icon(
+          Icons.info_outline,
+          color: _appColors.yellowColor,
+        ),
+      ],
+    );
+  }
+
+  _buildTransferTableHeader(String headerValue) => DataColumn(
+        label: Text(
+          headerValue,
+          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 14),
+        ),
+      );
+
+  Widget _buildDefaultWidth() {
+    return AppWidgetUtils.buildSizedBox(
+        custWidth: MediaQuery.sizeOf(context).width * 0.01);
+  }
+
+  Widget _buildDefaultHeight() {
+    return AppWidgetUtils.buildSizedBox(
+        custHeight: MediaQuery.sizeOf(context).height * 0.02);
+  }
+
+  Widget _buildFormField(TextEditingController textController, String hintText) {
+    final bool isTextEmpty =
+        textController.text.isEmpty;
+    final IconData iconData = isTextEmpty ? Icons.search : Icons.close;
+    final Color iconColor =
+    isTextEmpty ? _appColors.primaryColor : Colors.red;
+    return TldsInputFormField(
+      width: 203,
+      height: 40,
+      controller: textController,
+      hintText: hintText,
+      suffixIcon: IconButton(
+        onPressed: iconData == Icons.search ? (){
+          //add search cont here
+          _checkController(hintText);
+        } : () {
+          textController.clear();
+          _checkController(hintText);
+        },
+        icon: Icon(
+          iconData,
+          color: iconColor,
+        ),
+      ),
+      onSubmit: (p0) {
+        //add search cont here
+        _checkController(hintText);
+      },
+    );
+  }
+
+  void _checkController(String transporterName) {
+    if(AppConstants.transporterName == transporterName){
+      _transferViewBloc.transporterNameStreamController(true);
+    }else{
+      _transferViewBloc.vehicleNameSearchStreamController(true);
+    }
+  }
+}
Index: .dart_tool/package_config.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"configVersion\": 2,\r\n  \"packages\": [\r\n    {\r\n      \"name\": \"args\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/args-2.5.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"async\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/async-2.11.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.18\"\r\n    },\r\n    {\r\n      \"name\": \"boolean_selector\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/boolean_selector-2.1.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.17\"\r\n    },\r\n    {\r\n      \"name\": \"characters\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/characters-1.3.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.12\"\r\n    },\r\n    {\r\n      \"name\": \"clock\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/clock-1.1.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.12\"\r\n    },\r\n    {\r\n      \"name\": \"collection\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/collection-1.18.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.18\"\r\n    },\r\n    {\r\n      \"name\": \"cupertino_icons\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/cupertino_icons-1.0.8\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.1\"\r\n    },\r\n    {\r\n      \"name\": \"fake_async\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/fake_async-1.3.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.12\"\r\n    },\r\n    {\r\n      \"name\": \"ffi\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/ffi-2.1.2\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.3\"\r\n    },\r\n    {\r\n      \"name\": \"file\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/file-7.0.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"flutter\",\r\n      \"rootUri\": \"file:///C:/src/flutter/packages/flutter\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.2\"\r\n    },\r\n    {\r\n      \"name\": \"flutter_lints\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_lints-3.0.2\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.1\"\r\n    },\r\n    {\r\n      \"name\": \"flutter_svg\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_svg-2.0.10+1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.19\"\r\n    },\r\n    {\r\n      \"name\": \"flutter_test\",\r\n      \"rootUri\": \"file:///C:/src/flutter/packages/flutter_test\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.2\"\r\n    },\r\n    {\r\n      \"name\": \"flutter_web_plugins\",\r\n      \"rootUri\": \"file:///C:/src/flutter/packages/flutter_web_plugins\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.2\"\r\n    },\r\n    {\r\n      \"name\": \"hexcolor\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/hexcolor-3.0.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.18\"\r\n    },\r\n    {\r\n      \"name\": \"http\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/http-1.2.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.3\"\r\n    },\r\n    {\r\n      \"name\": \"http_parser\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/http_parser-4.0.2\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.12\"\r\n    },\r\n    {\r\n      \"name\": \"leak_tracker\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker-10.0.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.1\"\r\n    },\r\n    {\r\n      \"name\": \"leak_tracker_flutter_testing\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker_flutter_testing-2.0.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.1\"\r\n    },\r\n    {\r\n      \"name\": \"leak_tracker_testing\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker_testing-2.0.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.1\"\r\n    },\r\n    {\r\n      \"name\": \"lints\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/lints-3.0.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"matcher\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/matcher-0.12.16+1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"material_color_utilities\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/material_color_utilities-0.8.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.17\"\r\n    },\r\n    {\r\n      \"name\": \"meta\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/meta-1.11.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.12\"\r\n    },\r\n    {\r\n      \"name\": \"path\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path-1.9.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"path_parsing\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_parsing-1.0.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.12\"\r\n    },\r\n    {\r\n      \"name\": \"path_provider_linux\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_linux-2.2.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.19\"\r\n    },\r\n    {\r\n      \"name\": \"path_provider_platform_interface\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_platform_interface-2.1.2\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"path_provider_windows\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_windows-2.2.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.19\"\r\n    },\r\n    {\r\n      \"name\": \"petitparser\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/petitparser-6.0.2\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.2\"\r\n    },\r\n    {\r\n      \"name\": \"platform\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/platform-3.1.4\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"plugin_platform_interface\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/plugin_platform_interface-2.1.8\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"shared_preferences\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences-2.2.3\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.1\"\r\n    },\r\n    {\r\n      \"name\": \"shared_preferences_android\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_android-2.2.2\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.2\"\r\n    },\r\n    {\r\n      \"name\": \"shared_preferences_foundation\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_foundation-2.3.5\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"shared_preferences_linux\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_linux-2.3.2\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.19\"\r\n    },\r\n    {\r\n      \"name\": \"shared_preferences_platform_interface\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_platform_interface-2.3.2\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"shared_preferences_web\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_web-2.3.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.3\"\r\n    },\r\n    {\r\n      \"name\": \"shared_preferences_windows\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_windows-2.3.2\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.19\"\r\n    },\r\n    {\r\n      \"name\": \"sky_engine\",\r\n      \"rootUri\": \"file:///C:/src/flutter/bin/cache/pkg/sky_engine\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.2\"\r\n    },\r\n    {\r\n      \"name\": \"source_span\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/source_span-1.10.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.18\"\r\n    },\r\n    {\r\n      \"name\": \"stack_trace\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/stack_trace-1.11.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.18\"\r\n    },\r\n    {\r\n      \"name\": \"stream_channel\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/stream_channel-2.1.2\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.19\"\r\n    },\r\n    {\r\n      \"name\": \"string_scanner\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/string_scanner-1.2.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.18\"\r\n    },\r\n    {\r\n      \"name\": \"term_glyph\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/term_glyph-1.2.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.12\"\r\n    },\r\n    {\r\n      \"name\": \"test_api\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/test_api-0.6.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"typed_data\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/typed_data-1.3.2\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.17\"\r\n    },\r\n    {\r\n      \"name\": \"vector_graphics\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_graphics-1.1.11+1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.17\"\r\n    },\r\n    {\r\n      \"name\": \"vector_graphics_codec\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_graphics_codec-1.1.11+1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.17\"\r\n    },\r\n    {\r\n      \"name\": \"vector_graphics_compiler\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_graphics_compiler-1.1.11+1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.19\"\r\n    },\r\n    {\r\n      \"name\": \"vector_math\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vector_math-2.1.4\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"2.14\"\r\n    },\r\n    {\r\n      \"name\": \"vm_service\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/vm_service-13.0.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"web\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/web-0.5.1\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.3\"\r\n    },\r\n    {\r\n      \"name\": \"win32\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/win32-5.4.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.3\"\r\n    },\r\n    {\r\n      \"name\": \"xdg_directories\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/xdg_directories-1.0.4\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.0\"\r\n    },\r\n    {\r\n      \"name\": \"xml\",\r\n      \"rootUri\": \"file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/xml-6.5.0\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.2\"\r\n    },\r\n    {\r\n      \"name\": \"tlbilling\",\r\n      \"rootUri\": \"../\",\r\n      \"packageUri\": \"lib/\",\r\n      \"languageVersion\": \"3.3\"\r\n    }\r\n  ],\r\n  \"generated\": \"2024-04-24T11:02:19.192461Z\",\r\n  \"generator\": \"pub\",\r\n  \"generatorVersion\": \"3.3.0\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.dart_tool/package_config.json b/.dart_tool/package_config.json
--- a/.dart_tool/package_config.json	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/.dart_tool/package_config.json	(date 1715680211934)
@@ -38,6 +38,12 @@
       "languageVersion": "2.18"
     },
     {
+      "name": "crypto",
+      "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/crypto-3.0.3",
+      "packageUri": "lib/",
+      "languageVersion": "2.19"
+    },
+    {
       "name": "cupertino_icons",
       "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/cupertino_icons-1.0.8",
       "packageUri": "lib/",
@@ -63,7 +69,7 @@
     },
     {
       "name": "flutter",
-      "rootUri": "file:///C:/src/flutter/packages/flutter",
+      "rootUri": "file:///E:/Flutter/flutter/packages/flutter",
       "packageUri": "lib/",
       "languageVersion": "3.2"
     },
@@ -81,17 +87,23 @@
     },
     {
       "name": "flutter_test",
-      "rootUri": "file:///C:/src/flutter/packages/flutter_test",
+      "rootUri": "file:///E:/Flutter/flutter/packages/flutter_test",
       "packageUri": "lib/",
       "languageVersion": "3.2"
     },
     {
       "name": "flutter_web_plugins",
-      "rootUri": "file:///C:/src/flutter/packages/flutter_web_plugins",
+      "rootUri": "file:///E:/Flutter/flutter/packages/flutter_web_plugins",
       "packageUri": "lib/",
       "languageVersion": "3.2"
     },
     {
+      "name": "google_fonts",
+      "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/google_fonts-6.1.0",
+      "packageUri": "lib/",
+      "languageVersion": "2.14"
+    },
+    {
       "name": "hexcolor",
       "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/hexcolor-3.0.1",
       "packageUri": "lib/",
@@ -110,6 +122,18 @@
       "languageVersion": "2.12"
     },
     {
+      "name": "input_quantity",
+      "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/input_quantity-2.3.2",
+      "packageUri": "lib/",
+      "languageVersion": "2.17"
+    },
+    {
+      "name": "intl",
+      "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/intl-0.19.0",
+      "packageUri": "lib/",
+      "languageVersion": "3.0"
+    },
+    {
       "name": "leak_tracker",
       "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker-10.0.0",
       "packageUri": "lib/",
@@ -164,6 +188,24 @@
       "languageVersion": "2.12"
     },
     {
+      "name": "path_provider",
+      "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider-2.1.3",
+      "packageUri": "lib/",
+      "languageVersion": "3.1"
+    },
+    {
+      "name": "path_provider_android",
+      "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_android-2.2.4",
+      "packageUri": "lib/",
+      "languageVersion": "3.2"
+    },
+    {
+      "name": "path_provider_foundation",
+      "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_foundation-2.3.2",
+      "packageUri": "lib/",
+      "languageVersion": "3.0"
+    },
+    {
       "name": "path_provider_linux",
       "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_linux-2.2.1",
       "packageUri": "lib/",
@@ -243,7 +285,7 @@
     },
     {
       "name": "sky_engine",
-      "rootUri": "file:///C:/src/flutter/bin/cache/pkg/sky_engine",
+      "rootUri": "file:///E:/Flutter/flutter/bin/cache/pkg/sky_engine",
       "packageUri": "lib/",
       "languageVersion": "3.2"
     },
@@ -284,6 +326,12 @@
       "languageVersion": "3.0"
     },
     {
+      "name": "tlds_flutter",
+      "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/git/tlds_flutter-01d0035caee890e3591c1fbcac61f46b0a5db548/",
+      "packageUri": "lib/",
+      "languageVersion": "3.3"
+    },
+    {
       "name": "typed_data",
       "rootUri": "file:///C:/Users/New/AppData/Local/Pub/Cache/hosted/pub.dev/typed_data-1.3.2",
       "packageUri": "lib/",
@@ -350,7 +398,7 @@
       "languageVersion": "3.3"
     }
   ],
-  "generated": "2024-04-24T11:02:19.192461Z",
+  "generated": "2024-05-14T09:50:11.903098Z",
   "generator": "pub",
-  "generatorVersion": "3.3.0"
+  "generatorVersion": "3.3.4"
 }
Index: .idea/libraries/Dart_SDK.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\r\n  <library name=\"Dart SDK\">\r\n    <CLASSES>\r\n      <root url=\"file://C:\\src\\flutter/bin/cache/dart-sdk/lib/async\" />\r\n      <root url=\"file://C:\\src\\flutter/bin/cache/dart-sdk/lib/collection\" />\r\n      <root url=\"file://C:\\src\\flutter/bin/cache/dart-sdk/lib/convert\" />\r\n      <root url=\"file://C:\\src\\flutter/bin/cache/dart-sdk/lib/core\" />\r\n      <root url=\"file://C:\\src\\flutter/bin/cache/dart-sdk/lib/developer\" />\r\n      <root url=\"file://C:\\src\\flutter/bin/cache/dart-sdk/lib/html\" />\r\n      <root url=\"file://C:\\src\\flutter/bin/cache/dart-sdk/lib/io\" />\r\n      <root url=\"file://C:\\src\\flutter/bin/cache/dart-sdk/lib/isolate\" />\r\n      <root url=\"file://C:\\src\\flutter/bin/cache/dart-sdk/lib/math\" />\r\n      <root url=\"file://C:\\src\\flutter/bin/cache/dart-sdk/lib/mirrors\" />\r\n      <root url=\"file://C:\\src\\flutter/bin/cache/dart-sdk/lib/typed_data\" />\r\n    </CLASSES>\r\n    <JAVADOC />\r\n    <SOURCES />\r\n  </library>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Dart_SDK.xml b/.idea/libraries/Dart_SDK.xml
--- a/.idea/libraries/Dart_SDK.xml	(revision 2a310716a5de5a2e8e0fcafa53f39732fde5687b)
+++ b/.idea/libraries/Dart_SDK.xml	(date 1714133593468)
@@ -1,17 +1,27 @@
 <component name="libraryTable">
   <library name="Dart SDK">
     <CLASSES>
-      <root url="file://C:\src\flutter/bin/cache/dart-sdk/lib/async" />
-      <root url="file://C:\src\flutter/bin/cache/dart-sdk/lib/collection" />
-      <root url="file://C:\src\flutter/bin/cache/dart-sdk/lib/convert" />
-      <root url="file://C:\src\flutter/bin/cache/dart-sdk/lib/core" />
-      <root url="file://C:\src\flutter/bin/cache/dart-sdk/lib/developer" />
-      <root url="file://C:\src\flutter/bin/cache/dart-sdk/lib/html" />
-      <root url="file://C:\src\flutter/bin/cache/dart-sdk/lib/io" />
-      <root url="file://C:\src\flutter/bin/cache/dart-sdk/lib/isolate" />
-      <root url="file://C:\src\flutter/bin/cache/dart-sdk/lib/math" />
-      <root url="file://C:\src\flutter/bin/cache/dart-sdk/lib/mirrors" />
-      <root url="file://C:\src\flutter/bin/cache/dart-sdk/lib/typed_data" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/async" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/cli" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/collection" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/convert" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/core" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/developer" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/ffi" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/html" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/indexed_db" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/io" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/isolate" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/js" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/js_interop" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/js_interop_unsafe" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/js_util" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/math" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/mirrors" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/svg" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/typed_data" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/web_audio" />
+      <root url="file://$PROJECT_DIR$/../../Flutter/flutter/bin/cache/dart-sdk/lib/web_gl" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
